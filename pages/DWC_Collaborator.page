<apex:page id="DWCPage" standardcontroller="Wavier_Collaborator__c" extensions="DWC_CollaboratorCtrl" sidebar="false">


    <apex:includeScript value="{!URLFOR($Resource.DWCStreaming, 'cometd.js')}" />
    <apex:includeScript value="https://code.jquery.com/jquery-1.11.0.min.js" />
    <apex:includeScript value="{!URLFOR($Resource.DWCStreaming, 'json2.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.DWCStreaming, 'jquery.cometd.js')}" />
    <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" />
    
    
    <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <apex:stylesheet value="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" />
    <apex:stylesheet value="https://cdn.datatables.net/fixedcolumns/3.2.2/css/fixedColumns.bootstrap.min.css" />
    
    <apex:includeScript value="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js" />
    <apex:includeScript value="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap.min.js" />
    <apex:includeScript value="https://cdn.datatables.net/fixedcolumns/3.2.2/js/dataTables.fixedColumns.min.js" />
    
     
    <!-- <apex:includeScript value="https://cdn.datatables.net/keytable/2.2.1/js/dataTables.keyTable.min.js"/> -->  
    
    <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/black-tie/jquery-ui.min.css" />
    <apex:includeScript value="{!URLFOR($Resource.DFM_CommonLib, '/DFM_CommonFiles/Images')}" />
    <style>
    @media all and (min-width: 1200px) {
          div.dataTables_wrapper {
            width: 1280px;
            margin: 0 auto;
        }
        body{
            font-size : 12px;
        }
    }
    
    @media all and (min-width: 1900px) {
          div.dataTables_wrapper {
            width: 1830px;
            margin: 0 auto;
        }
        body{
            font-size : 12px;
        }
    }
        
        .myButton {
            background-color: #ff8930;
            -moz-border-radius: 7px;
            -webkit-border-radius: 7px;
            border-radius: 7px;
            border: 1px solid #c97e1c;
            color: #ffffff;
            font-family: Trebuchet MS;
            font-size: 13px;
            font-weight: bold;
            cursor: pointer;
            float: left;
            margin: 5px;
        }
        /* Absolute Center Spinner */
        
        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }
        /* Transparent Overlay */
        
        .loading:before {
            content: '';
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3);
        }
        /* :not(:required) hides these rules from IE9 and below */
        
        .loading:not(:required) {
            /* hide "loading..." text */
            
            font: 0/0 a;
            color: transparent;
            text-shadow: none;
            background-color: transparent;
            border: 0;
        }
        .loading:not(:required):after {
            content: '';
            display: block;
            font-size: 10px;
            width: 1em;
            height: 1em;
            margin-top: -0.5em;
            -webkit-animation: spinner 1500ms infinite linear;
            -moz-animation: spinner 1500ms infinite linear;
            -ms-animation: spinner 1500ms infinite linear;
            -o-animation: spinner 1500ms infinite linear;
            animation: spinner 1500ms infinite linear;
            border-radius: 0.5em;
            -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
            box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
        }
        /* Animation */
        
        @-webkit-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        @-moz-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        @-o-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        @keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        label.required:after {
            content: " *";
            color: red;
            font-size: 20px;
        }
        .mandatory {
            border: 1px solid red !important;
        }
        /* Copyright 2013-2015 etc Chris Tabor. Licensed under MIT. */
        /*css for progressbar-------------start */
        
        .flexer,
        .progress-indicator {
            display: -webkit-box;
            display: -moz-box;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
        }
        .no-flexer,
        .progress-indicator.stacked {
            display: block;
        }
        .no-flexer-element {
            -ms-flex: 0;
            -webkit-flex: 0;
            -moz-flex: 0;
            flex: 0;
        }
        .flexer-element,
        .progress-indicator > li {
            -ms-flex: 1;
            -webkit-flex: 1;
            -moz-flex: 1;
            flex: 1;
        }
        .progress-indicator {
            margin: 0;
            padding: 0;
            font-size: 100%;
            font-weight: bold;
            text-transform: uppercase;
            margin-bottom: 1em;
        }
        .progress-indicator > li {
            list-style: none;
            text-align: center;
            width: auto;
            padding: 0;
            margin: 0;
            position: relative;
            text-overflow: ellipsis;
            color: #bbbbbb;
            display: block;
        }
        .progress-indicator > li {
            list1-style: none;
            text-align: center;
            width: auto;
            padding: 0;
            margin: 0;
            position: relative;
            text-overflow: ellipsis;
            color: #bbbbbb;
            display: block;
        }
        .progress-indicator > li:hover {
            color: #6e6e6e;
        }
        .progress-indicator > li .bubble {
            width: 20px;
            height: 20px;
            background-color: #bbbbbb;
            display: block;
            margin: 0 auto 0.5em auto;
            border-bottom: 1px solid #888888;
        }
        .progress-indicator > li .bubble:before,
        .progress-indicator > li .bubble:after {
            display: block;
            position: absolute;
            top: 9px;
            width: 100%;
            height: 3px;
            content: '';
            background-color: #bbbbbb;
        }
        .progress-indicator > li .bubble:before {
            left: 0;
        }
        .progress-indicator > li .bubble:after {
            right: 0;
        }
        .progress-indicator > li.completed {
            color: green;
        }
        .progress-indicator > li.completed .bubble {
            background-color: #65d074;
            color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.completed .bubble:before,
        .progress-indicator > li.completed .bubble:after {
            background-color: #65d074;
            border-color: #247830;
        }
        /* css for removing horizontal line in the beginning and last---start----*/
        
        .progress-indicator > li .bubblefirst {
            width: 20px;
            height: 20px;
            background-color: #bbbbbb;
            display: block;
            margin: 0 auto 0.5em auto;
            border-bottom: 1px solid #888888;
        }
        .progress-indicator > li .bubblefirst:before {
            display: block;
            position: absolute;
            top: 9px;
            width: 0%;
            height: 3px;
            content: '';
            background-color: #bbbbbb;
        }
        .progress-indicator > li .bubblefirst:after {
            display: block;
            position: absolute;
            top: 9px;
            width: 50%;
            height: 3px;
            content: '';
            background-color: #bbbbbb;
        }
        .progress-indicator > li .bubblefirst:before {
            left: 0;
        }
        .progress-indicator > li .bubblefirst:after {
            right: 0;
        }
        .progress-indicator > li.completed {
            color: green;
        }
        .progress-indicator > li.completed .bubblefirst {
            background-color: #65d074;
            color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.completed .bubblefirst:after {
            background-color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.completed .bubblefirst:before {
            background-color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li .bubblelast {
            width: 20px;
            height: 20px;
            background-color: #bbbbbb;
            display: block;
            margin: 0 auto 0.5em auto;
            border-bottom: 1px solid #888888;
        }
        .progress-indicator > li .bubblelast:before {
            display: block;
            position: absolute;
            top: 9px;
            width: 50%;
            height: 3px;
            content: '';
            background-color: #bbbbbb;
        }
        .progress-indicator > li .bubblelast:after {
            display: block;
            position: absolute;
            top: 9px;
            width: 0%;
            height: 3px;
            content: '';
            background-color: #bbbbbb;
        }
        .progress-indicator > li .bubblelast:before {
            left: 0;
        }
        .progress-indicator > li .bubblelast:after {
            right: 0;
        }
        .progress-indicator > li.completed {
            color: green;
        }
        .progress-indicator > li.completed .bubblelast {
            background-color: #65d074;
            color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.completed .bubblelast:after {
            background-color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.completed .bubblelast:before {
            background-color: #65d074;
            border-color: #247830;
        }
        .progress-indicator > li.pending {
            color: #ccc;
        }
        .progress-indicator > li.pending .bubblefirst {
            background-color: #ccc;
            color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.pending .bubblefirst:before {
            background-color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.pending .bubblefirst:after {
            background-color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled {
            color: #FF0000;
        }
        .progress-indicator > li.cancelled .bubblefirst {
            background-color: #FF0000;
            color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled .bubblefirst:after {
            background-color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled .bubblefirst:before {
            background-color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.current {
            color: #4285f4;
        }
        .progress-indicator > li.current .bubblefirst {
            background-color: #4285f4;
            color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.current .bubblefirst:after {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.current .bubblefirst:before {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.pending {
            color: #ccc;
        }
        .progress-indicator > li.pending .bubblelast {
            background-color: #ccc;
            color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.pending .bubblelast:before {
            background-color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.pending .bubblelast:after {
            background-color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled {
            color: #FF0000;
        }
        .progress-indicator > li.cancelled .bubblelast {
            background-color: #FF0000;
            color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled .bubblelast:after {
            background-color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled .bubblelast:before {
            background-color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.current {
            color: #4285f4;
        }
        .progress-indicator > li.current .bubblelast {
            background-color: #4285f4;
            color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.current .bubblelast:after {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.current .bubblelast:before {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        /* css for removing horizontal line in the beginning and last---end----*/
        
        .progress-indicator > li.pending {
            color: #ccc;
        }
        .progress-indicator > li.pending .bubble {
            background-color: #ccc;
            color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.pending .bubble:before,
        .progress-indicator > li.pending .bubble:after {
            background-color: #ccc;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled {
            color: #FF0000;
        }
        .progress-indicator > li.cancelled .bubble {
            background-color: #FF0000;
            color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.cancelled .bubble:before,
        .progress-indicator > li.cancelled .bubble:after {
            background-color: #FF0000;
            border-color: #595959;
        }
        .progress-indicator > li.current {
            color: #4285f4;
        }
        .progress-indicator > li.current .bubble {
            background-color: #4285f4;
            color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li.current .bubble:before,
        .progress-indicator > li.current .bubble:after {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        .progress-indicator > li a:hover .bubble {
            background-color: #5671d0;
            color: #5671d0;
            border-color: #1f306e;
        }
        .progress-indicator > li a:hover .bubble:before,
        .progress-indicator > li a:hover .bubble:after {
            background-color: #5671d0;
            border-color: #1f306e;
        }
        .progress-indicator > li.danger .bubble {
            background-color: #d3140f;
            color: #d3140f;
            border-color: #440605;
        }
        .progress-indicator > li.danger .bubble:before,
        .progress-indicator > li.danger .bubble:after {
            background-color: #d3140f;
            border-color: #440605;
        }
        .progress-indicator > li.warning .bubble {
            background-color: #edb10a;
            color: #edb10a;
            border-color: #5a4304;
        }
        .progress-indicator > li.warning .bubble:before,
        .progress-indicator > li.warning .bubble:after {
            background-color: #edb10a;
            border-color: #5a4304;
        }
        .progress-indicator > li.info .bubble {
            background-color: #5b32d6;
            color: #5b32d6;
            border-color: #25135d;
        }
        .progress-indicator > li.info .bubble:before,
        .progress-indicator > li.info .bubble:after {
            background-color: #5b32d6;
            border-color: #25135d;
        }
        .progress-indicator.stacked > li {
            text-indent: -10px;
            text-align: center;
            display: block;
        }
        .progress-indicator.stacked > li .bubble:before,
        .progress-indicator.stacked > li .bubble:after {
            left: 50%;
            margin-left: -1.5px;
            width: 3px;
            height: 100%;
        }
        .progress-indicator.stacked .stacked-text {
            position: relative;
            z-index: 10;
            top: 0;
            margin-left: 60% !important;
            width: 45% !important;
            display: inline-block;
            text-align: left;
            line-height: 1.2em;
        }
        .progress-indicator.stacked > li a {
            border: none;
        }
        .box {
            height: 15px;
            width: 15px;
            display: inline-block;
            margin-left: 6em;
        }
        .left20 {
            padding-left: 25px;
        }
        .green {
            background-color: #65d074;
            border-color: #247830;
        }
        .grey {
            background-color: #ccc;
            border-color: #595959;
        }
        .red {
            background-color: #FF0000;
            border-color: #595959;
        }
        .blue {
            background-color: #4285f4;
            border-color: #152e8c;
        }
        @media handheld,
        screen and (max-width: 400px) {
            .progress-indicator {
                font-size: 60%;
            }
        }
        .bPageBlock {
            border-top: 0px !important;
        }
        .pbSubheader {
            border-top: 0;
            color: white;
            background-color: #1797c0 !important;
        }
        /*css for progressbar-------------End */
        
        .ruleDesc {
            width: 200px;
            word-break: break-word;
            padding: 4px;
        }
        .image:hover:after {
            content: url(image/circle.PNG);
            /* no need for qoutes */
            
            display: block;
        }
        
   

         a {
            color: #337ab7;
            text-decoration: underline;
        }
         a:hover,
         a:focus {
            color: #337ab7;
        }
        table{
        border-collapse:collapse;
        }
        tr.rowhighlight {
        background-color: #ffffb3; !important;
        margin:0;
        border:0;
        padding:0;
        }
      table.table.table-striped tr.rowhighlight td {
        background-color:#ffffb3;
      }
      
      tr.rowhighlight1 {
        background-color: #ffffff; !important;
        margin:0;
        border:0;
        padding:0;
        }
      table.table.table-striped tr.rowhighlight1 td {
        background-color:#ffffff;
      }

        .finalStatus {
        margin-left: 75px;
        margin-top: -18px; 
        }
        .primeDie {
        margin-left: 70px;
        margin-top: -18px;
        }
        #maintable td.orange {color: #ff9933;} 
        
    </style>
    <script type="text/javascript">
        var collabId = '';
        var usersMap = {};
        var revertCollaborator = '';
        var isSuperUser = '';
        var isSyncWithMantis;
        var workFlowStatus;
        var progBarStatus;
        var isFAE = '';
        var isDRBUser = '';
        var isPortal = '';
        var isDFMUserVar = '';
        var isLongFlow = '';
        var isDRB = '';
        var isGroup = '';
        var isDFM = '';
        var isReleasedTocustomer = '';
        var isTypeDRC = '';
        
        var isallJobsSubmitted = '';
        var comment='';
         var pagenumber = 0;
        var lastPageNumber = 0;
        var totalRecords = 0;
        var pagesize = 10;
        var ruleListMap = new Object();
        var ruleListMapForNonMatch = new Object();
        var ruleListForOpen =new Object();
        var ruleListMap = new Object();
        var ruleListApprovalMap = new Object(); //SUHAS
        var approvalTasksList = new Object(); //SUHAS
        var saveApprovalTasksList = new Object(); //SUHAS
        var userGroupName = '{!userGroup}';
        var userId = '{!userId}';
        var massApprovalrad;
        var users;
        var revertStageSelection = '';
        var summaryRulemap = new Object();
        
        
        $(document).ready(function() {

            //this code is to reload the page if there is update to collaborator
            $.cometd.init({
                url: window.location.protocol + '//' + window.location.hostname + '/cometd/36.0/',
                requestHeaders: {
                    Authorization: 'OAuth {!$Api.Session_ID}'
                }
            });

            $.cometd.subscribe('/topic/DWC_CollaboratorRefresh', function(message) {
                //reload our orders (this calls the action function below)
                window.location.href = window.location.href;
            });
            //---end

            collabId = '{!waiverCollaborator.Id}';
            
            
            var finalStatusCondition ="{!waiverCollaborator.Waiver_Status__c}";
            revertCollaborator = '{!waiverCollaborator.Revert_Collaborator__c}';
            //if(revertCollaborator!=='true'){
                getSummaryTableData();
             if('{!isTypeDRC}'=='true') getNonMatchRules();
                if(finalStatusCondition==='Open'){
                // alert(getCollaborator());
                    getCollaborator(1, 10, 'OPEN','All','OPEN','All');
                } else {
                
                    getCollaborator(1, 10, 'ALL', 'All','','All');
                }
            //}
            //console.log(document.getElementById('finalStatusId').value);
            isSuperUser = "{!isSuperUser}";
            
            isSyncWithMantis = '{!waiverCollaborator.Is_Sync_with_AIA__c}';
            workFlowStatus = '{!waiverCollaborator.Workflow_Status__c}';
            progBarStatus = '{!waiverCollaborator.Progressbar_staus__c}';
            isReleasedTocustomer = '{!waiverCollaborator.Is_releasedToCustomer__c}';
            isallJobsSubmitted = '{!allJobsSubmitted}';
            isPortal = '{!isPortalUser}';
            isFAE = '{!isFAE}';
            isDRBUser = '{!isDRBUser}';
            isDRB = '{!isDRB}';
            isGroup = '{!isGroup}';
            isDFM = '{!isTypeDFM}';
            isTypeDRC = '{!isTypeDRC}';
            isDFMUserVar = '{!isDFMUser}';
            isLongFlow = '{!isLongFlow}';
            isRunOnly = '{!isRunOnly}';
            applyToAll=false;
            selectAll=false;
            ruleCheckbox=false;
            getTaskmessage();
            if ('{!isLongFlow}' == 'true' || '{!isTypeDRC}' == 'true') getCompleteRuleList();


            //  alert("finalstatus"+$("#finalStatusId").val()+"primediename"+$("#primeDieId").val());

            //getCount('','');



        });
        
        $( document ).tooltip();
        setTimeout(function(){$('input[name=piSubmit]').hide();},1000);;
        /* alert('{!waiverCollaborator.Progressbar_staus__c}'); */
        if('{!waiverCollaborator.Progressbar_staus__c}'=='Cancelled' || '{!waiverCollaborator.Progressbar_staus__c}'=='Closed')setTimeout(function(){$('input[name=attachFile]').hide();},1000);;
        /* if ('{!waiverCollaborator.Progressbar_staus__c}'=='Cancelled' )setTimeout(function(){$(".actionColumn").hide();},100);; */
        /* if ('{!waiverCollaborator.Progressbar_staus__c}'=='Cancelled'|| '{!waiverCollaborator.Progressbar_staus__c}'=='Closed' )setTimeout(function(){$(".actionColumn").hide();},100);; */
        
        function resetPagingButtons() {
            $('th').unbind('click.DT'); //remove sorting
            if (pagenumber <= 1) {
                document.getElementById('previousId').style.display = 'none';
                document.getElementById('firstId').style.display = 'none';
            } else {
                document.getElementById('previousId').style.display = 'block';
                document.getElementById('firstId').style.display = 'block';
            }
            if (pagenumber == lastPageNumber) {
                document.getElementById('nextId').style.display = 'none';
                document.getElementById('lastId').style.display = 'none';
            } else {
                document.getElementById('nextId').style.display = 'block';
                document.getElementById('lastId').style.display = 'block';
            }

            if (document.getElementById("ruleList_info") != undefined) document.getElementById("ruleList_info").style.display = 'none';
            if (document.getElementById("ruleList_filter") != undefined) document.getElementById("ruleList_filter").style.display = 'none';
            if (document.getElementById("ruleList_length") != undefined) document.getElementById("ruleList_length").style.display = 'none';
            if (document.getElementById("ruleList_paginate") != undefined) document.getElementById("ruleList_paginate").style.display = 'none';
            if (document.getElementsByClassName("dataTables_empty").length > 0) document.getElementsByClassName("dataTables_empty")[0].style.display = 'none';
            var pageText = '';
            if (pagenumber == 0) {
                pageText += '0 - ' + ((pagenumber) * pagesize) + ' of ' + totalRecords;
            } else {
                var lastpage = ((pagenumber) * pagesize);
                if (lastpage > totalRecords) lastpage = totalRecords;
                pageText = ((pagenumber - 1) * pagesize) + 1 + ' - ' + lastpage + ' of ' + totalRecords;
            }
            document.getElementById("pagingTextDivId").innerHTML = pageText;
            document.getElementById("pageSizeId").value = pagesize;
            document.getElementById("maxPageId").innerHTML = lastPageNumber;
            document.getElementById("pageNumberId").value = pagenumber;

        }

        function changeRules() {
        $('#ruleList').DataTable().clear().draw();
         getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
          }

        function changePageSize(size) {
            pagesize = size;
            getCollaborator(1, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
            lastPageNumber = Math.ceil(totalRecords / pagesize);
        }

        function gotoPage(pageNo) {
            var pgno = parseInt(pageNo);
            if (pgno <= lastPageNumber) getCollaborator(pageNo, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
            else alert('please enter valid page number');
        }

        function previous() {
            getCollaborator(pagenumber - 1, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
        }

        function first() {
            getCollaborator(1, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
        }

        function last() {
            getCollaborator(lastPageNumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
        }

        function next() {
            getCollaborator(pagenumber + 1, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
        }



        function getCount(finalStatus, primeDie,ruleType) {

            $('.loading2').show();

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.getCount}', collabId, finalStatus, primeDie,ruleType,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);
                        totalRecords = result;
                        lastPageNumber = Math.ceil(totalRecords / pagesize);
                        resetPagingButtons();
                        $('.loading2').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }

        function applyValidation() {
              // alert('{!isFAE}');
                
            if ('{!waiverCollaborator.Workflow_Status__c}' == 'Closed' || '{!waiverCollaborator.Workflow_Status__c}'=='Cancel' || '{!waiverCollaborator.Progressbar_staus__c}'=='Cancelled' ) {
           /* if ('{!waiverCollaborator.Workflow_Status__c}' == 'Closed' || (contains'{!waiverCollaborator.Workflow_Status__c}',"Cancel") { */
               // alert('{!isPortalUser}');
                console.log(' workFlowStatus Closed or Cancelled>>>>>  ');
                $("#processCustBtnId").hide();
                $(".massUpdate").hide();
                $("#theApprovalButton").hide();
                $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                if (document.getElementById('massCommentId') != null && document.getElementById('massCommentId') != undefined) {
                    document.getElementById("massCommentId").disabled = true;
                }
                if (document.getElementById('massCommentId2') != null && document.getElementById('massCommentId2') != undefined) {
                    document.getElementById("massCommentId2").disabled = true;
                }
                $("#massApprovalBlock").hide();
                $("#applymassapprov").hide();
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
                $("#btnId2").hide();
            }
            console.log('heloooooo'+'{!allJobsSubmitted}');
         /*   if('{!allJobsSubmitted}' =='false') {
                $("#SummaryID").hide();
                console.log('heloooooo');
            } */
             if('{!isPortalUser}'=='true'&& '{!waiverCollaborator.Is_releasedToCustomer__c}'=='false'){
                 $("#processCustBtnId").hide();
                $("#theApprovalButton").hide();
                $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                if (document.getElementById('massCommentId') != null && document.getElementById('massCommentId') != undefined) {
                    document.getElementById("massCommentId").disabled = true;
                }
                if (document.getElementById('massCommentId2') != null && document.getElementById('massCommentId2') != undefined) {
                    document.getElementById("massCommentId2").disabled = true;
                }
                $("#massApprovalBlock").hide();
                $("#applymassapprov").hide();
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
                //$("#btnId2").hide();
            }
            
            if('{!isPortalUser}'=='true'&& '{!waiverCollaborator.Is_releasedToCustomer__c}'=='true'){
                 $("#processCustBtnId").hide();
                $("#theApprovalButton").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                $("#massApprovalBlock").hide();
              
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
                //$("#btnId2").hide();
            }
            
             if('{!isRunOnly}'=='true') {
               $("#massUpdateID").hide();
                $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
               $("#processCustBtnId").hide();
                $("#theApprovalButton").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                $("#massApprovalBlock").hide();
                $("#finalStatID").hide();
                
              
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
               
            }
            
            if('{!isPortalUser}'=='true'&& '{!waiverCollaborator.Is_releasedToCustomer__c}'=='false'){ 
             
                 $("#massUpdateID").hide();
            }
            
            if ('{!waiverCollaborator.isMulti__c}' == 'true') {
                
                if ('{!waiverCollaborator.isReleaseToCust4MultiDie__c}' == 'false'){
                   $("#processCustBtnId").hide(); 
                   $("#SubmitRules").hide();
                }
            }else if ('{!waiverCollaborator.Is_releasedToCustomer__c}' == 'true') {
                $("#processCustBtnId").hide();
            }
            

            if (isDRB == 'true' || isGroup == 'true') {

                $("#processCustBtnId").hide();
                $("#theApprovalButton").hide();
                $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                if (document.getElementById('massCommentId') != null && document.getElementById('massCommentId') != undefined) {
                    document.getElementById("massCommentId").disabled = true;
                }
                
            }

           

            if ((userGroupName == 'AM' || userGroupName == 'DE' || userGroupName == 'QA' || userGroupName == 'PIYE')) {
                console.log('validation massApprovalBlock >>>>>  ');
                
                $("#massApprovalBlock").hide();
                $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
                if ('{!isFAE}' == 'false' ) {
                $("#reassignAll").hide();
                }
 
            }else{
                $("#processCustBtnId").hide();
            }
            
             if ('{!isFAE}' == 'true' ) {
        
                $("#theApprovalButton").hide();
                $("#SubmitRules").hide();
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
                $("#massApprovalBlock").hide();
              //  $("#applymassapprov").hide();
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
                if('{!waiverCollaborator.isReleaseToCust4MultiDie__c}' == 'true' && '{!isRunOnly}'!='true'){
                    if('{!waiverCollaborator.Progressbar_staus__c}' == 'Pending For FAE' || '{!waiverCollaborator.Progressbar_staus__c}' == 'Pending for FAE') $("#SubmitRules").show();
                    else if('{!waiverCollaborator.Progressbar_staus__c}' == 'Pending for Foundry' || '{!waiverCollaborator.Progressbar_staus__c}' == 'Pending For Foundry') $("#SubmitRules").show();
                }
                
              /*   
                } && ('{!waiverCollaborator.Workflow_Status__c}' != 'Closed' || '{!waiverCollaborator.Workflow_Status__c}' != 'Cancel' || '{!waiverCollaborator.Progressbar_staus__c}' != 'Cancelled' )){
                    $("#SubmitRules").show();
                }  */
                
                if('{!isSuperUser}' == 'true' && ('{!waiverCollaborator.Workflow_Status__c}' != 'Closed' || '{!waiverCollaborator.Workflow_Status__c}' != 'Cancel' || '{!waiverCollaborator.Progressbar_staus__c}' != 'Cancelled' )) {
                    console.log('isSuperUser true>>>>>  ');
                    $("#revertBtnId").show();
                    
                    if ('{!waiverCollaborator.Revert_Collaborator__c}' == 'true' && ('{!waiverCollaborator.Workflow_Status__c}' != 'Closed' || '{!waiverCollaborator.Workflow_Status__c}' != 'Cancel' || '{!waiverCollaborator.Progressbar_staus__c}' != 'Cancelled' ) ) {
                 $("#submitRevertBtnId").show();
                  $("#revertBtnId").hide();
            
            }
                }
                
             }
            if ('{!isFAE}' == 'true' && ('{!waiverCollaborator.Progressbar_staus__c}' == 'Pending For FAE' || '{!waiverCollaborator.Progressbar_staus__c}' == 'Pending for FAE')) {
           //  alert('{!waiverCollaborator.Progressbar_staus__c}');
             $("#processCustBtnId").show();
              
             }
            
            if (('{!waiverCollaborator.Progressbar_staus__c}' == 'Pending For FAE' || '{!waiverCollaborator.Progressbar_staus__c}' == 'Pending for FAE') && ( '{!waiverCollaborator.Waiver_Status__c}'=='PW' || '{!waiverCollaborator.Waiver_Status__c}'=='PA' || '{!waiverCollaborator.Waiver_Status__c}'=='PI')) {
             console.log('test for PW rules');
             $("#SubmitRules").hide();
             $("#SaveRules").hide();
             $("#discardId").hide();
             $("#massUpdateID").hide();
              
             }
            
            if ('{!waiverCollaborator.Is_releasedToCustomer__c}' == 'true') {
                $("#processCustBtnId").hide();
            }
            
            
            if (isSyncWithMantis == 'false') {
                console.log('validation  >>>>>  ');
            }

            if ('{!isSuperUser}' == 'false') {
                console.log('isSuperUser false  >>>>>  ');
                $("#revertBtnId").hide();
                $("#submitRevertBtnId").hide();
            }
            
            if ('{!waiverCollaborator.Revert_Collaborator__c}' == 'false') {
                 $("#submitRevertBtnId").hide();
            
            }
            if ('{!isTypeDRC}' == 'false') {
               $("#ruleTypedivId").hide();
               $("#legendID").hide();
               $("#emptyMandatory").hide();
            }
            
            if ('{!waiverCollaborator.Progressbar_staus__c}' == 'Review_Disposition') {
               $("#SaveRules").hide();
                $("#SubmitRules").hide();
                $("#discardId").hide();
                $("#revertBtnId").hide();
                $("#reassignAll").hide();
                $("#SubmitApprovalDecision").hide();
                $("#ApprovalDecision").hide();
                $("#RejectDecision").hide();
            }
            
            
            
           
            
            removeTextAreaWhiteSpace() ;
        }

        function proceedToCustomer() {

            $("#popup_div1").dialog({
                modal: true,
                title: 'Select Customers to release waiver collaborator Report.',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                resizable: true,
                buttons: {
                    "Proceed": function() {
                        var listUser = '';
                        for (key in usersMap) {
                            if (usersMap[key] == true) {
                                listUser = listUser + key + ';';
                            }
                        }
                        //alert('Development is in progress!!!'+ listUser);

                        //get the status map and send to backend for comparision
                        $('.loading').show();
                        Visualforce.remoting.timeout = 120000; // Set timeout at page level
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.DWC_CollaboratorCtrl.getRuleStatusMapForReleaseToCustomer}', collabId,
                            function(result, event) {
                                if (event.status) {
                                    console.log(result);
                                    if (listUser.length > 0) {
                                        releaseToCustomerFunc(listUser, result.join());
                                    }
                                    $("#popup_div1").dialog("close");
                                    $('.loading').hide();
                                } else if (event.type === 'exception') {
                                    $('.loading').hide();
                                    event.message + "<br/>\n<pre>" + event.where + "</pre>";
                                    alert(event.message);

                                } else {
                                    $('.loading').hide();
                                    alert(event.message);
                                }
                            }, {
                                escape: true,
                                buffer: false
                            }
                        );
                    },
                    "Cancel": function() {
                        $(this).dialog("close");
                    }
                }
            });
        }

        function setCustomerUserIds(usrRecord, status) {
            var parentCheckBox = document.getElementsByClassName('theCheckParent');
            var inputCheckBox = document.getElementsByClassName("theCheckBox");
            //Using Map concept to build the data

            if (status.checked) {
                usersMap[usrRecord] = true;
                var flag = true;
                for (var i = 0; i < inputCheckBox.length; i++) {
                    if (!inputCheckBox[i].checked) {
                        flag = false;
                    }
                }
                if (flag) {
                    parentCheckBox[0].checked = true;
                } else {
                    parentCheckBox[0].checked = false;
                }
            } else {
                if (parentCheckBox[0].checked) {
                    parentCheckBox[0].checked = false;
                }
                usersMap[usrRecord] = false;
            }


        }

       var initRuleListDone1 = false;
       var hasRules1=false;
        function getNonMatchRules() {
            console.log('inside' + collabId);
            
            $('.loading').show();
              if(initRuleListDone1) { 
             
             
                $('#NonMatchRulesID').DataTable().clear().draw(); 
               $('#NonMatchRulesID').DataTable().destroy();
             }
            
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(

                '{!$RemoteAction.DWC_CollaboratorCtrl.getRuleList}', collabId,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);
                        if ($("#NonMatchRulesID thead tr").length < 1) {
                            var header = '<tr style="width: 80%;" >';
                            
                            header += '<th class="headerRow" >Rule Name</th>';
                            header += '<th class="headerRow" >Prime Die</th>';
                            header += '<th class="headerRow">Comment</th>';
                            header += '<th class="headerRow" >Reason for Non-Matching</th>';
                            header += '<th class="headerRow">Review Status</th>';
                            header += '<th class="headerRow">GF Review Comments</th>'; 
                            }
                            header += '</tr>';
                            $("#NonMatchRulesID thead").append(header);
                        }
                       //alert(userGroupName);
                        
                        
                        ruleList = result;
                        
                        if(result!=null && ruleList.length>0){
                        hasRules1=true;
                        var elem = document.getElementById("nonmatchruleID");
                        elem.style.display = 'none';
                        }else {
                        var elem = document.getElementById("nonmatchruleID");
                        elem.style.display = 'block';
                        var elem = document.getElementById("warningForNonMatchID");
                        elem.style.display = 'none';
                        var elem = document.getElementById("NonMatchRulesID");
                        elem.style.display = 'none';
                        
                        var elem = document.getElementById("NonMatchTableID");
                        elem.style.display = 'none';
                        
                        }
                        for (var i = 0; i < ruleList.length; i++) {
                            ruleListMapForNonMatch[ruleList[i].Id] = ruleList[i];
                            
                            var url = '';
                            if (window.location.href.indexOf("GlobalfoundryView") > -1) isPortal = true;
                            if (isPortal == true) url = '/GlobalfoundryView';
                            if(ruleList[i].Rule_Type__c!='0'&& ruleList[i].Rule_Type__c!='1') { 
                            //console.log('PrimedieComment >>>' +ruleList[i].Prime_Die_Comment__c);
                            // if(ruleList[i].Prime_Die_Comment__c !=null) var reviewComments=ruleList[i].Prime_Die_Comment__c.split(':')[1];
                           //  if(ruleList[i].Prime_Die_Comment__c !=null) var resonForNonMatch=ruleList[i].Prime_Die_Comment__c.split(':')[0];
                            //console.log('Reason for NON-Match>>>>>' +resonForNonMatch);
                            }
                            var tr = $('<tr></tr>');
                            var tdList = '';
                            
                            if (isPortal == true) {
                                tdList += '<td class="datacell" style="width:10%"><a href="/GlobalfoundryView/' + ruleList[i].Id + '">' + dataFormatter(ruleList[i].Design_Rule_Name__c) + '</a></td>';
                            } else {
                                tdList += '<td class="datacell" style="width:10%"><a href="/' + ruleList[i].Id + '">' + dataFormatter(ruleList[i].Design_Rule_Name__c) + '</a></td>';
                            }
                            tdList += '<td class="datacell" style="width:15%"><div >' + dataFormatter(ruleList[i].Prime_Die_Name__c) + '</div></td>';
                            
                            tdList += '<td class="datacell" style="width:20%">'+ dataFormatter(ruleList[i].Rule_Description__c) + '</td>';
                            tdList +='<td class="datacell" style="width:15%">'+ dataFormatter(ruleList[i].Warning__c) + '</td>';
                            tdList += '<td class="datacell" style="width:10%">'+ dataFormatter(ruleList[i].Final_Stage__c) + '</td>';
                            tdList += '<td class="datacell" style="width:20%">'+ dataFormatter(ruleList[i].GF_Review_Comment__c) + '</td>';
                            //tdList +='';
                           if(ruleList[i].Rule_Type__c!='0'&& ruleList[i].Rule_Type__c!='1')  tr.append(tdList);
                           if(ruleList[i].Rule_Type__c!='0'&& ruleList[i].Rule_Type__c!='1') $("#NonMatchRulesID tbody").append(tr);
                        }
                      $('#NonMatchRulesID').DataTable({
                            "scrollX": false,
                            "scrollY": false,
                            "scrollY": 150,
                            "ordering": false,
                            "bScrollCollapse": false,
                            "paging": false,
                            "bFilter": false,
                            "bInfo": false,
                            "fixedColumns": true
                        });  
                        initRuleListDone1= true;
                }, {
                    escape: true,
                    buffer: false
                }
            );
            }


        var initSumTabDone = false;
        var typeOfRules=false;
        function getSummaryTableData() {
            $('.loading').show();
            if (initSumTabDone) $('#summaryTable').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.getRuleListForDataTable}', collabId,
                function(result, event) {
                    if (event.status) {
                        var header = '';
                        var tdList2 = '';
                        tdList2 += '<td ><b>Prime Die Status</b></td>';
                        console.log(result);
                        //create table header
                        header += '<td ><b>Final Status</b></td>';
                        var primeDieList = '';
                        for (i in result.PrimedieCountMap) {
                            header += '<td><b>' + i + '<br/>No Of Rules</b></td>';
                            primeDieList += '<option>' + i + '</option>';
                            tdList2 += '<td>' + result.PrimedieStatusMap[i] + '</td>'
                        }
                        //  header+='<td><b>Required Action</b></td>';
                        var tr = $('<tr></tr>');
                        tr.append(header);
                        $("#summaryTable thead").append(tr);

                        var body = '';
                        //create table body
                        var statusArray = ''
                        if('{!isTypeDRC}'=='true') {
                        statusArray =['OPEN', 'FCD', 'FCF', 'WCR', 'WEA', 'FD', 'PW','PI','POF'];
                        } else {
                        statusArray= ['OPEN', 'FCD', 'FCF', 'WCR', 'WEA', 'FD', 'PA', 'PW'];
                        }
                        
                        var finalStatusStringMap = {};
                        var actionRequiredMap={};
                        
                        finalStatusStringMap['OPEN'] = 'OPEN';
                        finalStatusStringMap['PW'] = 'Pass Waive';
                        finalStatusStringMap['PA'] = 'Pass';
                        finalStatusStringMap['FCD'] = 'Fail Design, Customer disagrees to fix or risk';
                        finalStatusStringMap['WEA'] = 'Waive Exceptional Agreement';
                        finalStatusStringMap['WCR'] = 'Waive, Customer Agrees to Take Risk';
                        finalStatusStringMap['FCF'] = 'Fail Design, Customer Agree to Fix';
                        finalStatusStringMap['FD'] = 'Fail Design';
                        finalStatusStringMap['PI'] = 'Pass Ignore';
                        finalStatusStringMap['POF'] = ' Pass, Out of Scope. Customer Agrees to Fix';
                        
                        actionRequiredMap['OPEN']='Waiver Collaborator status is open and action needs to be taken.';
                       actionRequiredMap['PW']='Waived for the specified use and/or Tapeout. No further action required by Customer.';
                       actionRequiredMap['PA']='No Violations present in report.No further action required by Customer.';
                       actionRequiredMap['FCD']='Cannot be waived by GLOBALFOUNDRIES. Customer disagrees to fix or to waive the assumed risk liability.';
                       actionRequiredMap['WEA']='Waived with exceptional agreement by GLOBALFOUNDRIES. Please contact GLOBALFOUNDRIES Customer Representative';
                       actionRequiredMap['WCR']='Customer agreed to waive, Customer is aware of related risk. Risk is assumed by Customer.';
                       actionRequiredMap['FCF']='Customer Agreed to fix, updated design to be submitted for Tapeout.';
                       actionRequiredMap['PI']='No review requested by Customer,GLOBALFOUNDRIES expectation is that violation is absent in final TO or requested in additional waiver request.';
                       actionRequiredMap['POF']='Waived for the specified use and/or Tapeout. No further action required by Customer.';
                       
                       
                        //body+='<td></td>';
                        var statList = '';
                        var trList = '';
                        var lasttr = $('<tr></tr>');
                        var url = '/resource/DWC/DWC/';

                        if (window.location.href.indexOf("GlobalfoundryView") > -1) isPortal = true;
                        // alert(isPortal);
                        if (isPortal == true) url = '/GlobalfoundryView' + url;
                        for (var k = 0; k < statusArray.length; k++) {
                            statList += '<option>' + statusArray[k] + '</option>';
                            var tr = $('<tr></tr>');
                            var tdList = '';
                            //finalStatusId //primeDieId

                            tdList += '<td ><img style="float: left;" src="' + url + statusArray[k] + '.JPG" title="'+actionRequiredMap[statusArray[k]]+'" alt=" " height="25" width="50" border="0"><p style=" margin-top: 5px;padding: 0 0 0 10px;display:inline-block;"><b>' + finalStatusStringMap[statusArray[k]] + '</b></p></td>';


                            for (j in result.PrimedieCountMap) {
                                   
                                    
                                if('{!isRunOnly}'=='true'){
                                     //alert('test');
                                      tdList += '<td>' + '-' + '</td>'; 
                               } else if (result.PrimedieCountMap[j][statusArray[k]] != undefined){
                                     
                                      
                                      if (result.PrimedieCountMap[j][statusArray[k]] == 0) {
                                        tdList += '<td>' + result.PrimedieCountMap[j][statusArray[k]] + '</td>';
                                       }else tdList += '<td><a href="#divId" onclick="changeFinalStatusJsMap(\'' + statusArray[k] + '\',\'' + j + '\')"> ' + result.PrimedieCountMap[j][statusArray[k]] + ' </a></td>';
                                  
                                }else tdList += '<td>' + '0' + '</td>';


                            }
                             //alert(result.isRuleType);
                             if(result.isRuleType==true) {
                             typeOfRules=true;
                              var elem = document.getElementById("emptyMandatory");
                                  elem.style.display = "none";
           
                           console.log('typeOfRules>>'+typeOfRules);
                             console.log('type123 '+typeOfRules);
                             }
                             console.log('type>>> '+result.isRuleType);
                            tr.append(tdList);

                            $("#summaryTable tbody").append(tr);

                        }
                        lasttr.append(tdList2);
                        $("#summaryTable tbody").append(lasttr);
                        $("#summaryTable").DataTable({
                            "scrollX": true,
                            "ordering": false,
                            "bScrollCollapse": true,
                            "paging": false,
                            "bFilter": false,
                            "bInfo": false,
                            "fixedColumns":   {
                                "leftColumns": "1"
                            },
                            "columnDefs": [
                              { "width": "370px", "targets": 0 }
                            ],                        
                            
                        });
                        initSumTabDone = true;
                        $("#finalStatusId").append(statList);
                        var finalStatusCondition ="{!waiverCollaborator.Waiver_Status__c}";
                        var isSyncAIA="{!waiverCollaborator.Is_Sync_with_AIA__c}";
                        if(finalStatusCondition==='Open' && isSyncAIA=='true'){
                              
                              $('#finalStatusId').val('OPEN'); 
                              getCount($("#finalStatusId").val(), $("#primeDieId").val(),$("#ruleTypeId").val());
                            /* getCollaborator(pagenumber, pagesize, $("#finalStatusId").val('OPEN'), $("#primeDieId").val(), $("#searchId").val()); */
                        }
                        $("#primeDieId").append(primeDieList);
                        if(hasRules)resetPagingButtons();
                        $('.loading').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }
        var initRuleListDone = false;
        var hasRules=false;
        var hasMandatoryRules=false;
        function getCollaborator(pageno, pagesize, finalstatus, primediename, searchval,ruleType) {
            console.log('inside' + collabId);
            
            $('.loading').show();
              if(initRuleListDone) { 
             
             var table = $('#ruleList').DataTable();
                $('#ruleList').DataTable().clear().draw(); 
               $('#ruleList').DataTable().destroy();
             }
            /*  alert('{!waiverCollaborator.Is_Sync_with_AIA__c}'); */
          /* if ('{!isLongFlow}' == 'true' || '{!isTypeDRC}' == 'true') getCount($("#finalStatusId").val(), $("#primeDieId").val()); */
           if('{!waiverCollaborator.Is_Sync_with_AIA__c}'=='true')getCount($("#finalStatusId").val(), $("#primeDieId").val(),$("#ruleTypeId").val());
           
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(

                '{!$RemoteAction.DWC_CollaboratorCtrl.test}', pageno, pagesize, collabId, finalstatus, primediename, searchval,ruleType,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);
                        if ($("#ruleList thead tr").length < 1) {
                            var header = '<tr >';
                            header += '<th class="headerRow"><input type="checkbox" Id = "select_all" onclick="selectAllCheckboxes(this);" name="selectAll"/></th>';
                            header += '<th class="headerRow">Rule Name</th>';
                           
                           if ('{!isTypeDRC}' == 'true' )  header += '<th class="headerRow">Type</th>'; // Type of : Mnadatory or Additional rules 
                            header += '<th class="headerRow ruleDesc">Rule Description</th>';
                            header += '<th class="headerRow">Hierarchical​ Rule Count</th>';
                            header += '<th class="headerRow">Prime Die</th>';
                            header += '<th class="headerRow">Operation Type</th>';
                            header += '<th class="headerRow">Snapshot</th>';
                            header += '<th class="headerRow">GF Review Results</th>';
                            header += '<th class="headerRow">GF Review Comments</th>';
                           if (userGroupName != 'AM' && userGroupName !='DE' && userGroupName !='QA' && userGroupName != 'PIYE') header += '<th class="headerRow">Customer Options</th>';
                            if (userGroupName == 'AM' || userGroupName == 'DE' || userGroupName == 'QA' || userGroupName == 'PIYE' ||('{!isFAE}' == 'true') || (approvalTasksList !=null && approvalTasksList != undefined && approvalTasksList[0] != undefined && approvalTasksList[0].Re_AssignedUser__c != null && approvalTasksList[0].Re_AssignedUser__c != '')) {
                                header += '<th class="headerRow">Executive Approval Options</th>';
                                header += '<th class="headerRow">Executive Comments</th>';
                            }

                            if('{!isPortalUser}'=='true') {
                             //alert(isPortal);
                                header += '<th class="headerRow">Customer Closing Explanation</th>';
                            } else {
                            //alert('MOHAN')
                                header += '<th class="headerRow">GF Internal Closing Comment</th>';
                                header += '<th class="headerRow">Customer Closing Explanation</th>';
                            }

                            header += '<th class="headerRow">Final Status</th>';
                            header += '</tr>';
                            $("#ruleList thead").append(header);
                        }
                       //alert(userGroupName);
                        var attchMap=result.hasAttachmentMap;
                        console.log(attchMap);
                        ruleList = result.ruleList;
                        ruleListApprovalMap = result.approvalTasksMap;
                        pagenumber = result.pagenumber;
                        console.log("result.pagenumber"+result.pagenumber);
                        if(result!=null && ruleList.length>0)hasRules=true;
                        for (var i = 0; i < ruleList.length; i++) {
                            ruleListMap[ruleList[i].Id] = ruleList[i];
                            approvalTasksList = ruleListApprovalMap[ruleList[i].Id];
                            var url = '';
                            if (window.location.href.indexOf("GlobalfoundryView") > -1) isPortal = true;
                            if (isPortal == true) url = '/GlobalfoundryView';
                            console.log(approvalTasksList);
                            
                            
                            //alert($("#ruleTypeId").val());
                            
                             
                           // alert(ruleList[i].Rule_Type__c);
                           
                            if('{!isTypeDRC}' == 'true' && ruleList[i].Rule_Type__c=='0'){
                            var requestedRule='N';
                            var tr = $('<tr class="rowhighlight"></tr>');
                            //alert('mandatory');
                            }else {
                            var requestedRule='R';
                            var tr = $('<tr class="rowhighlight1"></tr>');
                            }
                            
                            
                            
                            
                                                            
                            var tdList = '';
                            tdList += '<td class="datacell"><input type="checkbox" class="checkbox" id="' + dataFormatter(ruleList[i].Id) + '_chk" onclick="clearrulelist(this);"/></td>';
                            if (isPortal == true) {
                                tdList += '<td class="datacell"><a href="/GlobalfoundryView/' + ruleList[i].Id + '">' + dataFormatter(ruleList[i].Design_Rule_Name__c) + '</a></td>';
                            } else {
                                tdList += '<td class="datacell"><a href="/' + ruleList[i].Id + '">' + dataFormatter(ruleList[i].Design_Rule_Name__c) + '</a></td>';
                            }
                            
                          if ('{!isTypeDRC}' == 'true' )  tdList += '<td class="datacell" >' + requestedRule + '</td>';
                             
                            
                            
                            tdList += '<td class="datacell "><div class="ruleDesc">' + dataFormatter(ruleList[i].Rule_Description__c) + '</div></td>';
                            tdList += '<td class="datacell">' + dataFormatter(ruleList[i].Hierarchial_Error_Count__c) + '</td>';
                            tdList += '<td class="datacell">' + dataFormatter(ruleList[i].Prime_Die_Name__c) + '</td>';
                                tdList += '<td class="datacell">' + dataFormatter(ruleList[i].Operation_Type__c) + '</td>'; //Operation_Type__c
                            if(attchMap[ruleList[i].Id]==true){
                                tdList += '<td class="datacell"><div class="image" id="' + dataFormatter(ruleList[i].Id) + '_snap" onclick="showImage(\'' + (ruleList[i].Id) + '\',this)">view Image</div></td>'; //snapshot
                            }else{
                                tdList += '<td class="datacell">No</td>';
                            }
                            if('{!isRunOnly}'=='true'){
                                tdList += '<td class="datacell"> ' + 'DRC Run Only - No Review' + '</td>';
                            }else tdList += '<td class="datacell"><img  src="' + dataFormatter(url + ruleList[i].GF_Review_Results__c) + '" alt=" " height="25" width="50" border="0" /></td>';
                            tdList += '<td class="datacell">' + dataFormatter(ruleList[i].GF_Review_Comment__c) + '</td>'; //GF_Review_Comment__c           
                            if (userGroupName == 'AM' || userGroupName =='DE' || userGroupName =='QA' || userGroupName == 'PIYE'){        
                            if (ruleList[i].Final_Stage__c == 'PI' || ruleList[i].Final_Stage__c == 'PA' || ruleList[i].Final_Stage__c == 'PW' || ruleList[i].Final_Stage__c == 'POF' ||
                                ruleList[i].Final_Stage__c == 'PWA' || ruleList[i].Final_Stage__c == 'WCR' || ruleList[i].Final_Stage__c == 'WEA' || ruleList[i].Final_Stage__c == 'FCF' || ruleList[i].Final_Stage__c == 'eFD') {
                                tdList += '<td class="datacell"><div style="width:277px">' + createDisabledOptions(ruleList[i].Id, ruleList[i]) + '</div></td>'; //custoptions
                            } 
                               
                            } else{ 
                                if (userGroupName != 'AM' && userGroupName !='DE' && userGroupName !='QA' && userGroupName != 'PIYE')tdList += '<td class="datacell"><div style="width:278px">' + createOptions(ruleList[i].Id, ruleList[i]) + '</div></td>'; //custoptions             
                            }
                            
                            if(isPortal != true){
                           // alert(isPortal)
                            if (userGroupName == 'AM' || userGroupName == 'DE' || userGroupName == 'QA' || userGroupName == 'PIYE' ||('{!isFAE}' == 'true') ) {
                                tdList += '<td class="datacell"><div style="width:276px">' + createApprovalOptions(ruleList[i].Id, ruleList[i], approvalTasksList) + '</div></td>'; //custoptions
                                tdList += '<td class="datacell"><div >' + createApprovalComments(ruleList[i].Id, ruleList[i], approvalTasksList) + '</div></td>'; //custoptions
                            }
                            }
                            if (isPortal == true) {
                               console.log('progressBarStatus@@@'+'{!waiverCollaborator.Progressbar_staus__c}'); 
                               if('{!waiverCollaborator.Progressbar_staus__c}' !='Closed') tdList += '<td class="datacell"><textarea id="' + ruleList[i].Id + '_CustomerComments" name="' + ruleList[i].Id + '_CustomerComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Portal\');" >' + dataFormatter(ruleList[i].Customer_Closing_Comment__c) + '</textarea></td>';
                               else tdList += '<td class="datacell"><textarea disabled id="' + ruleList[i].Id + '_CustomerComments"  name="' + ruleList[i].Id + '_CustomerComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Portal\');" >' + dataFormatter(ruleList[i].Customer_Closing_Comment__c) + '</textarea></td>';     
                                
                            } else {
                                
                                if (userGroupName == 'AM' || userGroupName == 'DE' || userGroupName == 'QA' || userGroupName == 'PIYE' || (approvalTasksList !=null && approvalTasksList != undefined && approvalTasksList[0] != undefined && approvalTasksList[0].Re_AssignedUser__c != null && approvalTasksList[0].Re_AssignedUser__c != '')) {         
                                    tdList += '<td class="datacell"><textarea disabled id="' + ruleList[i].Id + '_GFInternalComments" name="' + ruleList[i].Id + '_GFInternalComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Internal\');"   >' + dataFormatter(ruleList[i].GF_Internal_Closing_Comment__c) + '</textarea></td>';  
                                }else{
                                    if(ruleList[i].Stage__c == 'PI' || ruleList[i].Final_Stage__c == 'FD' ||ruleList[i].Final_Stage__c == 'FCF'||ruleList[i].Final_Stage__c == 'WCR' || ruleList[i].Stage__c == 'PA' || ruleList[i].Stage__c == 'PWA' || ruleList[i].Stage__c == 'PW' || ruleList[i].Stage__c == 'POC' || ruleList[i].Stage__c == 'WCR' || ruleList[i].Stage__c == 'WEA' || ruleList[i].Stage__c == 'POF' || ruleList[i].Stage__c == 'FCF' || ruleList[i].Stage__c == 'PWO')
                                        tdList += '<td class="datacell"><textarea disabled id="' + ruleList[i].Id + '_GFInternalComments" name="' + ruleList[i].Id + '_GFInternalComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Internal\');"   >' + dataFormatter(ruleList[i].GF_Internal_Closing_Comment__c) + '</textarea></td>';  
                                    else                                      
                                        tdList += '<td class="datacell"><textarea id="' + ruleList[i].Id + '_GFInternalComments" name="' + ruleList[i].Id + '_GFInternalComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Internal\');"   >' + dataFormatter(ruleList[i].GF_Internal_Closing_Comment__c) + '</textarea></td>';
                                }
                                 tdList += '<td class="datacell"><textarea disabled id="' + ruleList[i].Id + '_CustomerComments" name="' + ruleList[i].Id + '_CustomerComments" rows="3" onchange="setSelectedRuleComments(\'' + ruleList[i].Id + '\',this.value,\'Portal\');" >' + dataFormatter(ruleList[i].Customer_Closing_Comment__c) + '</textarea></td>';
                            }
                            if('{!isRunOnly}'=='true'){
                                tdList += '<td class="datacell"> ' + '-' + '</td>';
                            }else tdList += '<td class="datacell"><img src="' + dataFormatter(url + ruleList[i].Final_Status__c) + '" alt=" " height="25" width="50" border="0" /></td>';

                            tr.append(tdList);
                            $("#ruleList tbody").append(tr);
                        }
                        $('#ruleList').DataTable({
                            "scrollX": true,
                            "ordering": false,
                            "bScrollCollapse": true,
                            "paging": false,
                            "destroy":true,
                            "bFilter": false,
                            "bInfo": false
                        });
                        initRuleListDone = true;
                        if(hasRules)resetPagingButtons();
                        $('.loading').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
            
            if('{!waiverCollaborator.Is_Sync_with_AIA__c}'=='true')applyValidation(ruleList);
        }
   
    
    function selectAllCheckboxes(val) {
        applyToAll=false;
        selectAll=true;
        ruleCheckbox=true;
            $("#select_all").change(function() {
                $(".checkbox").prop('checked', $(this).prop("checked"));
            });
                console.log('selectAll@@@'+selectAll);
                
             if ($(val).is(":not(:checked)"))  {
                 selectAll=false;
                 ruleCheckbox =false;
                    console.log('selectAll124'+selectAll);
             } 
            $('.checkbox').change(function() {

                if (false == $(this).prop("checked")) {
                    $("#select_all").prop('checked', false);
                }

                if ($('.checkbox:checked').length == $('.checkbox').length) {
                    $("#select_all").prop('checked', true);
                }
            });
        }
        
        
        function selectAllCheckboxesForOpen(ele) {
            applyToAll=true;
            ruleCheckbox=true;
            $("#SubmitRules").hide();
            //$("#select_all1").change(function() {
                //$(".checkbox").prop('checked', $(this).prop("checked"));
                if ($(ele).is(":not(:checked)")) {
                ruleCheckbox=false;
                applyToAll=false;
                $("#SubmitRules").show();
                console.log('TEST');
                //alert('No rules have been selected. Please select the rules or choose to "Apply to all OPEN rules" ');
             
                 $(".checkbox").prop('checked', false);
                 $("#select_all").prop('checked', false);
            } else{
                
                $(".checkbox").prop('checked', true);
                 $("#select_all").prop('checked', true);
            
            }
            //});
                  
            
            
            //$('.checkbox').change(function() {

               // if (false == $(this).prop("checked")) {
                 //   $("#select_all1").prop('checked', false);
                    
               // }

                //if ($('.checkbox:checked').length == $('.checkbox').length) {
                    //$("#select_all1").prop('checked', true);
                //}
            //});
        }
        
        /*    $(document).ready(function () { 
            var oTable = $('#ruleList').dataTable({
                stateSave: true
            });
        
            var allPages = oTable.fnGetNodes();
            console.log('allPages>>'+allPages.length);
            $('body').on('click', '#select_all1', function () {
                if ($(this).hasClass('allChecked')) {
                    $('input[type="checkbox"]', allPages).prop('checked', false);
                } else {
                    $('input[type="checkbox"]', allPages).prop('checked', true);
                }
                $(this).toggleClass('allChecked');
            })
        }); */
                    
         
         


        function setSelectedRuleComments(id, val, type) {
            console.log('called >> ' + id + '  ' + val + '   ' + type);
            if (ruleListMap.hasOwnProperty(id)) {
                if (type == 'Internal') {
                    ruleListMap[id].GF_Internal_Closing_Comment__c = val;
                } else if (type == 'Portal') {
                    ruleListMap[id].Customer_Closing_Comment__c = val;
                }
            }

        }

        function validateSavedData() { //SUHAS
            console.log('validateSavedData');
            var isCommentNull = false;
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    if (ruleListMap[key].IsCustomerAcceptsRisk__c || ruleListMap[key].IsCustomerAgreeToFix__c || ruleListMap[key].Disagree__c) {
                        if (ruleListMap[key].Customer_Closing_Comment__c != '' && ruleListMap[key].Customer_Closing_Comment__c != null) {} else {
                            isCommentNull = true;
                            break;
                        }
                    } else if (ruleListMap[key].IsGfAcceptsRisk__c || ruleListMap[key].AcceptRisk__c) {
                  //  alert(document.getElementById(key + '_GFInternalComments').value);
                    
                        if ((document.getElementById(key + '_GFInternalComments')!='' && document.getElementById(key + '_GFInternalComments') !=null ) || (document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null)) {} else {
                            isCommentNull = true;
                            break;
                        }
                    }
                }
            }


            if (isCommentNull == true) {
                var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                popup.setTitle("Warning");
                popup.createDialog();
                window.parent.popup = popup;
                popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Comment is mandatory for closing rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide();return false;'>Close</button></p>");
                popup.show();
            } else {

                saveruleData();
            }

        }


        function saveruleData() {
            console.log('saveRuleData >>> ');
            $('.loading').show();

            var vals = [];
            if(applyToAll==true){
            
               comment= document.getElementById("massCommentId").value;
                var selectedVal=$("input[name$=selectedRdMassUpSec]:checked").val();
                isPortal="{!isPortalUser}";
                Visualforce.remoting.timeout = 120000; // Set timeout at page level
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DWC_CollaboratorCtrl.getAllWaiverRuleListForOpen}',collabId,comment,selectedVal,isPortal,
                    function(result, event) {
                    
                       if (event.status) {
                       
                       reloadpg();
                       
                       //setTimeout(window.location.reload.bind(window.location), 2000);
                                                        
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        
                        //setInterval("setTimeoutforSave()",3000);
                        //alert('result'+result);
                        //window.location.href(result);
                        
                        
                        
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                 }
            );     
        
         
            }else {
                $('.loading').show();
            for (var key in ruleListMap) {

                if (ruleListMap.hasOwnProperty(key)) {

                    if (document.getElementById(key + '_CustomerComments') != null && document.getElementById(key + '_CustomerComments') != undefined && document.getElementById(key + '_CustomerComments').value != '' && document.getElementById(key + '_CustomerComments').value != null) {
                        ruleListMap[key].Customer_Closing_Comment__c = document.getElementById(key + '_CustomerComments').value;
                    }
                    if (document.getElementById(key + '_GFInternalComments') != null && document.getElementById(key + '_GFInternalComments') != undefined && document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null) {
                        ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById(key + '_GFInternalComments').value;
                    }

                    vals.push(ruleListMap[key]);
                }
            }
            $('#ruleList').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.saveRuleList}', vals, collabId,
                function(result, event) {
                    if (event.status) {
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        //alert( JSON.stringify(event));
                       location.reload();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
         }
        }
    function saveruleDataForAll() {
            console.log('saveRuleData >>> ');
            $('.loading').show();

            var vals = [];
            for (var key in ruleListForOpen) {

                if (ruleListForOpen.hasOwnProperty(key)) {
                    alert('1234');
                    if (document.getElementById(key + '_CustomerComments') != null && document.getElementById(key + '_CustomerComments') != undefined && document.getElementById(key + '_CustomerComments').value != '' && document.getElementById(key + '_CustomerComments').value != null) {
                        ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById(key + '_CustomerComments').value;
                    }
                    if (document.getElementById(key + '_GFInternalComments') != null && document.getElementById(key + '_GFInternalComments') != undefined && document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null) {
                        ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById(key + '_GFInternalComments').value;
                    }

                    vals.push(ruleListForOpen[key]);
                    console.log('vals'+vals);
                }
            }
            $('#ruleList').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.saveRuleList}', vals, collabId,
                function(result, event) {
                    if (event.status) {
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        //alert( JSON.stringify(event));
                        console.log('result@@'+result);
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }             
        

        function validateSubmitData() { //SUHAS
            var isCommentNull = false;
            var hasFCDRules = false;
            var hasOPENRulesComments= false;
            var hasOPENRuels=false;
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    if (ruleListMap[key].IsCustomerAcceptsRisk__c || ruleListMap[key].IsCustomerAgreeToFix__c || ruleListMap[key].Disagree__c) {
                        if (ruleListMap[key].Customer_Closing_Comment__c != '' && ruleListMap[key].Customer_Closing_Comment__c != null) {} else {
                            isCommentNull = true;
                            break;
                        }
                    } else if (ruleListMap[key].IsGfAcceptsRisk__c || ruleListMap[key].AcceptRisk__c) {
                       if (document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null) {} else {
                            isCommentNull = true;
                            break;
                        }
                    }
                    if ('{!isPortalUser}' !='true'){
                            var str;
                            var GFComments=document.getElementById(key + '_GFInternalComments');
                            
                            
                            if(GFComments !=null ) {
                             str=GFComments.value;
                            } else {
                            str =null;
                            console.log('str&&&'+str);
                             hasOPENRulesComments= true;
                                    console.log('isCommentNull '+isCommentNull );
                                    break;
                             }  
                             
                             if (ruleListMap[key].GF_Internal_Closing_Comment__c!= '' && ruleListMap[key].GF_Internal_Closing_Comment__c!= null) {} else {
                            hasOPENRulesComments= true;
                            console.log('isCommentNull '+isCommentNull );
                            break;
                            }     
                           
                        } else {
                        
                            
                          
                          
                           if (ruleListMap[key].Customer_Closing_Comment__c != '' && ruleListMap[key].Customer_Closing_Comment__c != null) {} else {
                            hasOPENRulesComments= true;
                            console.log('customercomments@@@'+ruleListMap[key].Customer_Closing_Comment__c);
                            break;
                            }
                          
                           
                        } 
                    
                    if (ruleListMap[key].Final_Stage__c == 'FCD') {
                        hasFCDRules = true;
                    }
                }
            }

            if(hasOPENRulesComments== true) {
                var popup = new SimpleDialog("PopUp"+Dialogs.getNextId(), false);    
                popup.setTitle("Warning");   
                popup.createDialog();   
                window.parent.popup = popup;   
                popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Please ensure the options/comments for ALL the OPEN rules are selected/filled prior rules submission.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide();saveButton();return false;'>Close</button></p>");    
                popup.show();
            }else if (isCommentNull == true) {
                var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                popup.setTitle("Warning");
                popup.createDialog();
                window.parent.popup = popup;
                popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Comment is mandatory for closing rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide();return false;'>Close</button></p>");
                popup.show();
            } else {
            if (hasFCDRules == 'true') {
                if (userGroupName == 'Portal') {
                    var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                    popup.setTitle("Warning");
                    popup.createDialog();
                    window.parent.popup = popup;
                    popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Rules will be submitted for FAE review.</p><p align='center'><button class='btn' onclick='window.parent.popup.hide();submitRules();'>Ok</button><button class='btn' onclick='window.parent.popup.hide();;return false;'>Cancel</button></p>");
                    popup.show();
                } else {
                    var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                    popup.setTitle("Warning");
                    popup.createDialog();
                    window.parent.popup = popup;
                    popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>FCD rules exist. Please communicate with customer and finalize the selections before submission.</p><p align='center'><button class='btn' onclick='window.parent.popup.hide();'>Ok</button><button class='btn' onclick='window.parent.popup.hide();return false;'>Cancel</button></p>");
                    popup.show();
                }
            } else {
                var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                popup.setTitle("Summary");
                popup.createDialog();
                window.parent.popup = popup;
                popup.setContentInnerHTML("<p align='center'>" + createSummaryTable() + "</p><p align='center'><button class='btn' onclick='window.parent.popup.hide(); submitRulesFAE();'>Ok</button></p>");
                popup.show();

                }   
            }

        }

        function createSummaryTable() { //SUHAS
            var ruleRecs = '';
            var singleRecId = '';
            var tMap = new Map();
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    if (tMap.get(ruleListMap[key]) != undefined) {
                        tMap.put(ruleListMap[key], tMap.get(ruleListMap[key]) + 1);
                    } else {
                        tMap.put(ruleListMap[key], 1);
                    }
                }
            }
            console.log(tMap);
            if (tMap.containsKey('PWA')) {
                var i = tMap.get('PWA');
                if (tMap.containsKey('PW')) {
                    var j = tMap.get('PW');
                    tMap.put('PW', i + j);
                } else {
                    tMap.put('PW', i);
                }
                tMap.remove('PWA');
            }
            if (tMap.containsKey('PWO') || tMap.containsKey('POC') || tMap.containsKey('PCF')) {
                var i1 = tMap.get('PWO') != undefined ? tMap.get('PWO') : 0;
                var i2 = tMap.get('POC') != undefined ? tMap.get('POC') : 0;
                var i3 = tMap.get('PCF') != undefined ? tMap.get('PCF') : 0;
                if (tMap.containsKey('PI')) {
                    var j = tMap.get('PI');
                    tMap.put('PI', i1 + i2 + i3 + j);
                } else {
                    tMap.put('PI', i1 + i2 + i3);
                }
                tMap.remove('PWO');
                tMap.remove('POC');
                tMap.remove('PCF');
            }

            for (var key in ruleListMap) {
                if (ruleListMap[key] != '') {
                    ruleRecs += key + ',' + ruleListMap[key] + ';';
                    singleRecId += key + ';';
                }
            }
            ruleRecs = ruleRecs.replace(/.$/, "");
            singleRecId = singleRecId.replace(/.$/, "");
            console.log(ruleRecs);
            console.log(singleRecId);
            var str = '<table border="0"><tr><th colspan="2">Rule summary</th></tr><tr><th colspan="2">(Lists only the results available in the collaborator)</th></tr>';
            var stages = tMap.keys();
            var stg = '';
            while (stg != undefined) {
                stg = stages.next().value;
                if (stg != undefined) str += '<tr><td>' + stg + '</td><td>' + tMap.get(stg) + '</td></tr>';
            }
            str += '</table>';
            return str;

        }


        function submitRulesFAE() {
            var tier2Approval = 'false';
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    if (ruleListMap[key].IsGfAcceptsRisk__c) {
                        tier2Approval = 'true';
                    }
                }
            }

            if (tier2Approval == 'true') {
                $("#popup_div2").dialog({
                    modal: true,
                    title: 'Select account manager for exceptional arrangement approval.',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 1000,
                    height: 500,
                    resizable: true,
                    buttons: {
                        Yes: function() {
                            //alert('Development is in progress!!!'+users);
                            submitTierRules();
                            $(this).dialog("close");
                        },
                        No: function() {
                            $(this).dialog("close");
                        }

                    }
                });
            } else {
                submitRules();
            }


        }


        function submitTierRules() {
            $('.loading').show();
            var vals = [];
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {

                    if (document.getElementById(key + '_CustomerComments') != null && document.getElementById(key + '_CustomerComments') != undefined && document.getElementById(key + '_CustomerComments').value != '' && document.getElementById(key + '_CustomerComments').value != null) {
                        ruleListMap[key].Customer_Closing_Comment__c = document.getElementById(key + '_CustomerComments').value;
                    }
                    if (document.getElementById(key + '_GFInternalComments') != null && document.getElementById(key + '_GFInternalComments') != undefined && document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null) {
                        ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById(key + '_GFInternalComments').value;
                    }

                    vals.push(ruleListMap[key]);
                }
            }
            $('#ruleList').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.submitFAERules}', vals, collabId, users,
                function(result, event) {
                    if (event.status) {
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        //alert( JSON.stringify(event));

                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }

        function submitRules() {
            $('.loading').show();
            var vals = [];
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {

                    if (document.getElementById(key + '_CustomerComments') != null && document.getElementById(key + '_CustomerComments') != undefined && document.getElementById(key + '_CustomerComments').value != '' && document.getElementById(key + '_CustomerComments').value != null) {
                        ruleListMap[key].Customer_Closing_Comment__c = document.getElementById(key + '_CustomerComments').value;
                    }
                    if (document.getElementById(key + '_GFInternalComments') != null && document.getElementById(key + '_GFInternalComments') != undefined && document.getElementById(key + '_GFInternalComments').value != '' && document.getElementById(key + '_GFInternalComments').value != null) {
                        ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById(key + '_GFInternalComments').value;
                    }

                    vals.push(ruleListMap[key]);
                }
            }
            //$('#ruleList').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.submitRuleList}', vals, collabId,
                function(result, event) {
                    if (event.status) {
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        //alert( JSON.stringify(event));
                        
                        setTimeout(location.reload.bind(location), 2000);

                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }

        function showImage(id, ele) {
            var pos = $(ele).offset();
            $('.loading').show();
             $('#imgPanel').html('');
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.getAttachment}',id,
                function(result, event) {
                    if (event.status) {
                         var div = document.createElement('div');
                            div.style.top = pos.top - 140 + 'px';
                            div.style.left = pos.left + 'px';
                            div.style.position = 'absolute';
                            div.style.border="2px solid #1797c0";
                            var closeDiv = document.createElement('div');
                            closeDiv.style.width = '100%';
                            closeDiv.style.height = '20px';
                            closeDiv.style.background = '#1797c0';
                            closeDiv.style.color = '#FFF';
                             closeDiv.style.padding = '3px';
                             closeDiv.style.fontWeight= 'bold';
                             closeDiv.style.textAlign= 'right';
                            closeDiv.style.border="1px solid #1797c0";
                            //closeDiv.style.fontWeight='bold';
                            closeDiv.innerHTML = 'Close(X)';
                            $(closeDiv).attr('onclick', '$(\'#imgPanel\').hide();');
                        console.log(result);
                        for(var i=0;i<result.length;i++){
                            var image = document.createElement('img');
                            image.src = '/servlet/servlet.FileDownload?file=' + result[i].Id;
                            image.width = 150;
                            image.height = 150;
                            image.style.border="1px solid #1797c0";
                            $(div).append(image);
                        }
                        $('#imgPanel').html(div);
                        $(div).prepend(closeDiv);
                        $('#imgPanel').show();
                            $('.loading').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }

    function createOptions(id, obj) {
        var data = '';
        // alert(obj.IsCustomerAgreeToFix__c);
        if (userGroupName != 'Portal') {
            if (obj.IsCustomerAgreeToFix__c) data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';
            if (obj.IsCustomerAcceptsRisk__c) data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked  value="CustomerAcceptsRisk" checked> <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAcceptsRisk" > <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';
            if (obj.Disagree__c) data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree" checked > <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree" > <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            if (obj.IsGfAcceptsRisk__c && (obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO'||obj.Stage__c == 'FCC'||obj.Stage__c == 'iFD')) 
            {
                data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="GfAcceptsRisk" > <span title="Request Foundry-to-risk (FAE to escalate to GF executives only when customer has declined to do any fixing or accept risk liability after discussion)">Request Foundry-to-risk</span><br>';
            }
            else 
            {
                if(obj.Stage__c == 'PW' || obj.Final_Stage__c =='FD' || obj.Final_Stage__c =='FCF'||obj.Final_Stage__c == 'WCR'|| obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'POC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' || obj.Stage__c == 'POF' || obj.Stage__c == 'FCF')
                    data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="GfAcceptsRisk" > <span title="Request Foundry-to-risk (FAE to escalate to GF executives only when customer has declined to do any fixing or accept risk liability after discussion)">Request Foundry-to-risk</span><br>';    
                else 
                    data += '<input type="radio"   name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="GfAcceptsRisk" > <span title="Request Foundry-to-risk (FAE to escalate to GF executives only when customer has declined to do any fixing or accept risk liability after discussion)">Request Foundry-to-risk</span><br>';
            }
            if (obj.AcceptRisk__c && (obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' ||obj.Stage__c == 'FCC'||obj.Stage__c == 'iFD')) 
            {
                data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="AcceptRejection" > <span title="Accept Waiver Rejection (FAE to Accept waiver Rejection)">Accept Waiver Rejection</span><br>';
            }    
            else
            {
                if(obj.Stage__c == 'PW' || obj.Stage__c == 'PA' ||obj.Final_Stage__c =='FCF' ||obj.Final_Stage__c == 'WCR'|| obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'POC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' || obj.Stage__c == 'POF' || obj.Stage__c == 'FCF')      
                    data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="AcceptRejection" > <span title="Accept Waiver Rejection (FAE to Accept waiver Rejection)">Accept Waiver Rejection</span><br>';    
                else              
                    data += '<input type="radio"  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="AcceptRejection" > <span title="Accept Waiver Rejection (FAE to Accept waiver Rejection)">Accept Waiver Rejection</span><br>';
            }    
            if (revertCollaborator == 'true') {   
                if (obj.Revert_Rule__c) data += '<input type="radio" checked name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Revert" > <span title="Revert Rules to Mantis">Revert Rule</span><br>';
                else data += '<input type="radio" name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Revert" > <span title="Revert Rules to Mantis">Revert Rule</span><br>';
            }
        } else {
            if (obj.IsCustomerAgreeToFix__c && (obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'FCC' || obj.Stage__c == 'iFD' || obj.Final_Stage__c== 'FCF')) 
            {
                data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';
            }
            else
            {
                if(obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'POC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' || obj.Stage__c == 'POF' || obj.Stage__c == 'FCF')    
                    data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';     
                else        
                    data += '<input type="radio" name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>'; 
            }
            if (obj.IsCustomerAcceptsRisk__c && (obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' ||  obj.Stage__c == 'FCC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' )) 
            {
                data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked  value="CustomerAcceptsRisk"> <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';               
            }
            else if(obj.Stage__c == 'IFD' || obj.Stage__c =='iFD')
            {
                data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAcceptsRisk" > <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';               
            }
                else
                {
                    if(obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'POC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' || obj.Stage__c == 'POF' || obj.Stage__c == 'FCF')   
                        data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAcceptsRisk" > <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>'; 
                    else            
                        data += '<input type="radio" name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAcceptsRisk" > <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';
                }
            if (obj.Disagree__c && (obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'FCD' || obj.Stage__c == 'iFD' || obj.Stage__c == 'FCC' )) 
            {
                data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="Disagree"> <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            }
            else
            {
                if(obj.Stage__c == 'PW' || obj.Stage__c == 'PA' || obj.Stage__c == 'PWA'|| obj.Stage__c == 'PI' || obj.Stage__c == 'PWO' || obj.Stage__c == 'POC' || obj.Stage__c == 'WCR' || obj.Stage__c == 'WEA' || obj.Stage__c == 'POF' || obj.Stage__c == 'FCF')   
                    data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree"> <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';   
                else            
                    data += '<input type="radio" name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree" > <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            }
        }
        return data;
        console.log(data);
    }
        
        
        function setOptions(Type, waiverRecIds, rowId) {
        
            if(document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId")!=null){ 
                document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId").checked=true;
                selectedCheck(document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId").checked,rowId);
            }
                        
            if(document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId")==null){ 
                /* selectedCheck(document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId").checked,rowId); */
                document.getElementById("DWCPage:formDRC:pblkId:reviewSectionId:theText"+rowId+":inputCheckId").checked=false;
                
            }
            }
            
        function createDisabledOptions(id, obj) {
            var data = '';

            if (obj.IsCustomerAgreeToFix__c) data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAgreeToFix" > <span title="Customer agrees to fix the non-waived violations and resubmit">Customer Agrees to Fix</span><br>';
            if (obj.IsCustomerAcceptsRisk__c) data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked  value="CustomerAcceptsRisk" checked> <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="CustomerAcceptsRisk" > <span title="Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations">Customer Agrees to Take Risk</span><br>';
            if (obj.Disagree__c) data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree" checked > <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            else data += '<input type="radio" disabled  name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Disagree" > <span title="Disagree (Customer has declined to fix non-waiver violations and declined to accept risk liability)">Customer does not agree to fix or to take risk</span><br>';
            if (userGroupName != 'Portal') {
                if (obj.IsGfAcceptsRisk__c) data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="GfAcceptsRisk" > <span title="Request Foundry-to-risk (FAE to escalate to GF executives only when customer has declined to do any fixing or accept risk liability after discussion)">Request Foundry-to-risk</span><br>';
                else data += '<input type="radio" name="' + id + '_option" disabled onchange="setSelectedVal(\'' + id + '\',this.value);" value="GfAcceptsRisk" > <span title="Request Foundry-to-risk (FAE to escalate to GF executives only when customer has declined to do any fixing or accept risk liability after discussion)">Request Foundry-to-risk</span><br>';
                if (obj.AcceptRisk__c) data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" checked value="AcceptRejection" > <span title="Accept Waiver Rejection (FAE to Accept waiver Rejection)">Accept Waiver Rejection</span><br>';
                else data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="AcceptRejection" > <span title="Accept Waiver Rejection (FAE to Accept waiver Rejection)">Accept Waiver Rejection</span><br>';
                if ('{!isSuperUser}' == 'true' && revertCollaborator == 'true'){
                if (obj.Revert_Rule__c) data += '<input type="radio" disabled checked name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Revert" > <span title="Revert Rules to Mantis">Revert Rule</span><br>';
                else data += '<input type="radio" disabled name="' + id + '_option" onchange="setSelectedVal(\'' + id + '\',this.value);" value="Revert" > <span title="Revert Rules to Mantis">Revert Rule</span><br>';
                }
             }

            return data;
        }


        function createApprovalOptions(id, obj, approvalList) {
            var approvalData = '';
            if (approvalList != null && approvalList != '') {
                for (var i = 0; i < approvalList.length; i++) {
                    saveApprovalTasksList[approvalList[i].Id] = approvalList[i];
                    if (userId == approvalList[i].Re_AssignedUser__c) {
                        if (approvalList[i].Approver_Type__c == 'PIYE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'AM') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio"   name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio"   name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled checked name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  checked name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'DE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio"  name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio"  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option"   value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'QA') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio"    name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio"    name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            }
                        }

                    } else if (userGroupName == 'AM' ) {
                        if (approvalList[i].Approver_Type__c == 'AM') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                if(obj.Final_Stage__c == 'FD'){
                                    approvalData += '<input type="radio" disabled name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                    approvalData += '<input type="radio" disabled name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                                } else {
                                    approvalData += '<input type="radio" name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                    approvalData += '<input type="radio" name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                                }
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled checked name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  checked name="' + id + '_AM_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'DE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option"   value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'QA') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'PIYE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            }
                        }
                    } else if ((userGroupName == 'DE')) {
                        if (approvalList[i].Approver_Type__c == 'DE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                if(obj.Final_Stage__c == 'FD'){
                                    approvalData += '<input type="radio" disabled name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                    approvalData += '<input type="radio" disabled name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                                } else {
                                    approvalData += '<input type="radio" name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                    approvalData += '<input type="radio" name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                                }
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');"  value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'AM') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled checked name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  checked name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'QA') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'PIYE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            }
                        }
                    } else if ((userGroupName == 'QA')) {
                        if (approvalList[i].Approver_Type__c == 'QA') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                if(obj.Final_Stage__c == 'FD'){
                                    approvalData += '<input type="radio" disabled name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                    approvalData += '<input type="radio" disabled name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                                } else {
                                    approvalData += '<input type="radio" name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                    approvalData += '<input type="radio" name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                                }
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'AM') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled checked name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  checked name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'DE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option"   value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'PIYE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            }
                        }
                    } else if ((userGroupName == 'PIYE')) {
                        if (approvalList[i].Approver_Type__c == 'PIYE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                if(obj.Final_Stage__c == 'FD'){
                                    approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                    approvalData += '<input type="radio" disabled name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                                } else {
                                    approvalData += '<input type="radio" name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                    approvalData += '<input type="radio" name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                                }
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEApprove" > <span title="PIYE Approve">PIYE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_PIYE_option" onchange="setSelectedApprovalVal(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" value="PIYEReject" > <span title="PIYE Reject">PIYE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'AM') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled checked name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_AM_option" value="AMApprove" > <span title="AM Approve">AM Approve</span>';
                                approvalData += '<input type="radio" disabled  checked name="' + id + '_AM_option" value="AMReject" > <span title="AM Reject">AM Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'DE') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option"   value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_DE_option" value="DEApprove" > <span title="DE Approve">DE Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_DE_option" value="DEReject" > <span title="DE Reject">DE Reject</span><br><br>';
                            }
                        } else if (approvalList[i].Approver_Type__c == 'QA') {
                            if (approvalList[i].Process_Status__c == 'Open') {
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled   name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Approved') {
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            } else if (approvalList[i].Process_Status__c == 'Rejected') {
                                approvalData += '<input type="radio" disabled  name="' + id + '_QA_option" value="QAApprove" > <span title="QA Approve">QA Approve</span>';
                                approvalData += '<input type="radio" disabled  checked  name="' + id + '_QA_option" value="QAReject" > <span title="QA Reject">QA Reject</span><br><br>';
                            }
                        }
                    }
                }
            }
            return approvalData;
        }


        function createApprovalComments(id, obj, approvalList) {
            var approvalComments = '';
            if (approvalList != null && approvalList != '') {
                for (var i = 0; i < approvalList.length; i++) {
                    console.log(approvalList[i]);
                    if ((approvalList[i].Approver_Type__c == 'AM' && (userGroupName == 'AM' )) || (userId == approvalList[i].Re_AssignedUser__c)) {
                        if(obj.Final_Stage__c == 'FD'){
                            approvalComments += '<textarea disabled name="' + id + '_AM_textarea" id="' + id + '_AM_textarea"  rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        } else {
                            approvalComments += '<textarea name="' + id + '_AM_textarea" id="' + id + '_AM_textarea"  rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        }
                    } else if ((approvalList[i].Approver_Type__c == 'DE' && userGroupName == 'DE' ) || (userId == approvalList[i].Re_AssignedUser__c)) {
                        if(obj.Final_Stage__c == 'FD'){
                            approvalComments += '<textarea disabled name="' + id + '_DE_textarea" id="' + id + '_DE_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        } else {
                            approvalComments += '<textarea name="' + id + '_DE_textarea" id="' + id + '_DE_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        }
                    } else if ((approvalList[i].Approver_Type__c == 'QA' && userGroupName == 'QA') || (userId == approvalList[i].Re_AssignedUser__c)) {
                        if(obj.Final_Stage__c == 'FD'){
                            approvalComments += '<textarea disabled name="' + id + '_QA_textarea" id="' + id + '_QA_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        } else {
                            approvalComments += '<textarea name="' + id + '_QA_textarea" id="' + id + '_QA_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        }   
                    } else if ((approvalList[i].Approver_Type__c == 'PIYE' && userGroupName == 'PIYE') || (userId == approvalList[i].Re_AssignedUser__c)) {
                        if(obj.Final_Stage__c == 'FD'){
                            approvalComments += '<textarea disabled name="' + id + '_PIYE_textarea" id="' + id + '_PIYE_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';

                        } else {
                            approvalComments += '<textarea name="' + id + '_PIYE_textarea" id="' + id + '_PIYE_textarea" rows="3" onchange="setSelectedApprovalComments(\'' + approvalList[i].Id + '\',this.value,\'' + id + '\');" >' + dataFormatter(approvalList[i].Approval_Comments__c) + '</textarea>';
                        }
                    }

                }
            }
            return approvalComments;
        }



        function setSelectedApprovalComments(id, val, ruleId) {
            console.log('called >> ' + id + '  ' + val);
            if (userGroupName == 'AM' ) {
                saveApprovalTasksList[id].Approval_Comments__c = document.getElementById(ruleId + '_AM_textarea').value;
            } else if (userGroupName == 'DE') {
                saveApprovalTasksList[id].Approval_Comments__c = document.getElementById(ruleId + '_DE_textarea').value;
            } else if (userGroupName == 'QA') {
                saveApprovalTasksList[id].Approval_Comments__c = document.getElementById(ruleId + '_QA_textarea').value;
            } else if (userGroupName == 'PIYE') {
                saveApprovalTasksList[id].Approval_Comments__c = document.getElementById(ruleId + '_PIYE_textarea').value;
            }

        }


        function setSelectedApprovalVal(id, val, ruleId) {
            console.log('called >> ' + id + '  ' + val);
            if (val == 'AMApprove' || val == 'QAApprove' || val == 'PIYEApprove' || val == 'DEApprove') {
                saveApprovalTasksList[id].Process_Status__c = 'Approved';
            } else {
                saveApprovalTasksList[id].Process_Status__c = 'Rejected';
            }
        }

        function selectAllCheckboxes1() {
            var inputCheckBox;
            var parentCheckBox;
            if (document.getElementsByClassName("theCheckBox") != null) {
                inputCheckBox = $('.theCheckBox').not("[disabled]");
            }
            if (document.getElementsByClassName('theCheckParent') != null) {
                parentCheckBox = document.getElementsByClassName('theCheckParent');
            }
            for (var i = 0; i < inputCheckBox.length; i++) {
                if (parentCheckBox[0].checked) {
                    inputCheckBox[i].checked = true;
                    usersMap[inputCheckBox[i].classList[0]] = true;
                } else {
                    inputCheckBox[i].checked = false;
                    usersMap[inputCheckBox[i].classList[0]] = false;
                }
            }

        }

        function saveApprovalData() {
            $('.loading').show();
            var vals = [];
            for (var key in saveApprovalTasksList) {
                if (saveApprovalTasksList.hasOwnProperty(key)) {
                    if (saveApprovalTasksList[key].Process_Status__c != '' && saveApprovalTasksList[key].Process_Status__c != null &&
                        (saveApprovalTasksList[key].Process_Status__c == 'Rejected' || saveApprovalTasksList[key].Process_Status__c == 'Approved') &&
                        (saveApprovalTasksList[key].Approval_Comments__c == '' || saveApprovalTasksList[key].Approval_Comments__c == null)) {

                        alert('Approval Comments are mandatory for approval. Please provide comments');

                    } else {
                        vals.push(saveApprovalTasksList[key]);
                    }
                }
            }
            // $('#ruleList').DataTable().clear().draw();
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.saveApprovalList}', vals,
                function(result, event) {
                    if (event.status) {
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        location.href=location.href;

                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }

        function setSelectedVal(id, val) {
            //selectAllCheckboxes();
            document.getElementById(id+'_chk').checked=true;

            if (val == 'CustomerAgreeToFix') {
                ruleListMap[id].IsGfAcceptsRisk__c = false;
                ruleListMap[id].Disagree__c = false;
                ruleListMap[id].IsCustomerAcceptsRisk__c = false;
                ruleListMap[id].AcceptRisk__c = false;
                ruleListMap[id].IsCustomerAgreeToFix__c = true;
                ruleListMap[id].Final_Stage__c = 'FCF';
                //ruleListMap[id].GF_Internal_Closing_Comment__c=document.getElementById(id+'_GFInternalComments').value;
                ruleListMap[id].Customer_Closing_Comment__c = document.getElementById(id + '_CustomerComments').value;
            } else if (val == 'CustomerAcceptsRisk') {
                ruleListMap[id].IsGfAcceptsRisk__c = false;
                ruleListMap[id].Disagree__c = false;
                ruleListMap[id].IsCustomerAcceptsRisk__c = true;
                ruleListMap[id].AcceptRisk__c = false;
                ruleListMap[id].IsCustomerAgreeToFix__c = false;
                ruleListMap[id].Final_Stage__c = 'WCR';
                // ruleListMap[id].GF_Internal_Closing_Comment__c=document.getElementById(id+'_GFInternalComments').value;
                ruleListMap[id].Customer_Closing_Comment__c = document.getElementById(id + '_CustomerComments').value;
            } else if (val == 'Disagree') {
                ruleListMap[id].IsGfAcceptsRisk__c = false;
                ruleListMap[id].Disagree__c = true;
                ruleListMap[id].IsCustomerAcceptsRisk__c = false;
                ruleListMap[id].AcceptRisk__c = false;
                ruleListMap[id].IsCustomerAgreeToFix__c = false;
                ruleListMap[id].Final_Stage__c = 'FCD';
                // ruleListMap[id].GF_Internal_Closing_Comment__c=document.getElementById(id+'_GFInternalComments').value;
                ruleListMap[id].Customer_Closing_Comment__c = document.getElementById(id + '_CustomerComments').value;
            } else if (val == 'GfAcceptsRisk') {
                ruleListMap[id].IsGfAcceptsRisk__c = true;
                ruleListMap[id].Disagree__c = false;
                ruleListMap[id].IsCustomerAcceptsRisk__c = false;
                ruleListMap[id].AcceptRisk__c = false;
                ruleListMap[id].IsCustomerAgreeToFix__c = false;
                ruleListMap[id].GF_Internal_Closing_Comment__c = document.getElementById(id + '_GFInternalComments').value;
                ruleListMap[id].Final_Stage__c = 'OPEN';
                //ruleListMap[id].Customer_Closing_Comment__c  =document.getElementById(id+'_CustomerComments').value;
                ruleListMap[id].Warning__c = 'Please discuss with FAE upfront before rejecting waiver request. Your reject will immediately set this violation to: "NOT ACCEPT" and reject the design to customer.';
                // rules.Collaborator_Details__c TO BE DONE
                // rules.Account_Manager_Approver__c TO BE DONE

            } else if (val == 'AcceptRejection') {
                ruleListMap[id].IsGfAcceptsRisk__c = false;
                ruleListMap[id].Disagree__c = false;
                ruleListMap[id].IsCustomerAcceptsRisk__c = false;
                ruleListMap[id].AcceptRisk__c = true;
                ruleListMap[id].IsCustomerAgreeToFix__c = false;
                ruleListMap[id].Final_Stage__c = 'FD';
                ruleListMap[id].GF_Internal_Closing_Comment__c = document.getElementById(id + '_GFInternalComments').value;
                // ruleListMap[id].Customer_Closing_Comment__c  =document.getElementById(id+'_CustomerComments').value;
            } else if (val == 'Revert') {
                ruleListMap[id].IsGfAcceptsRisk__c = false;
                ruleListMap[id].Disagree__c = false;
                ruleListMap[id].IsCustomerAcceptsRisk__c = false;
                ruleListMap[id].AcceptRisk__c = false;
                ruleListMap[id].IsCustomerAgreeToFix__c = false;
                ruleListMap[id].Revert_Rule__c = true;
                ruleListMap[id].GF_Internal_Closing_Comment__c = document.getElementById(id + '_GFInternalComments').value;
                // ruleListMap[id].Customer_Closing_Comment__c  =document.getElementById(id+'_CustomerComments').value;

            }


        }



        function dataFormatter(data) {
            if (data != undefined) return data;
            else return '';
        }



        function buildHtmlTable(selector, myList) {

            var columns = addAllColumnHeaders(myList, selector);

            for (var i = 0; i < myList.length; i++) {
                var row$ = $('<tr/>');
                for (var colIndex = 0; colIndex < columns.length; colIndex++) {
                    var cellValue = myList[i][columns[colIndex]];
                    if (cellValue == null) cellValue = "";
                    row$.append($('<td/>').html(cellValue));
                }
                $(selector).append(row$);
            }
        }

        // Adds a header row to the table and returns the set of columns.
        // Need to do union of keys from all records as some records may not contain
        // all records.
        function addAllColumnHeaders(myList, selector) {
            var columnSet = [];
            var headerTr$ = $('<tr/>');

            for (var i = 0; i < myList.length; i++) {
                var rowHash = myList[i];
                for (var key in rowHash) {
                    if ($.inArray(key, columnSet) == -1) {
                        columnSet.push(key);
                        headerTr$.append($('<th/>').html(key));
                    }
                }
            }
            $(selector).append(headerTr$);

            return columnSet;
        }



        function changeFinalStatusJs() {
            getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());

        }


        function changeFinalStatusJsMap(finalVal, primeVal) {

             /* alert("finalVal ::"+finalVal +"primeVal::"+primeVal); */
            $('#ruleList').DataTable().clear().draw();
            if (document.getElementById('finalStatusId') != null && document.getElementById('finalStatusId') != undefined) {
                srchVal = document.getElementById('finalStatusId').value = finalVal;
            }

            if (document.getElementById('primeDieId') != null && document.getElementById('primeDieId') != undefined) {
                srchVal = document.getElementById('primeDieId').value = primeVal;
            }
            getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
            // changeFinalStatFunc(srchVal );

        }

        function searchRuleData() {

            getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());

        }

        function applyMassappCommentJs() {
            $('.loading').show();
            //sforce.connection.sessionId = window.ApiUtils.getSessionId(); 
            var vals = [];
            var profiles = '';
            var txtarea = '';
            //profile = sforce.connection.query( "select Name from Profile where Id in (select ProfileId from User WHERE Id = '" + window.UserContext.userId + "'),");
            txtarea = document.getElementById('massCommentId2');
            //var rdiobtn = document.getElementsByName('massapproval');
            console.log('called action' + massApprovalrad + '  ' + txtarea.value);
            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    vals.push(ruleListMap[key]);
                }
            }
            if ((txtarea.value != null  && txtarea.value != ''  ) &&  massApprovalrad != undefined ) {
                Visualforce.remoting.timeout = 120000; // Set timeout at page level
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DWC_CollaboratorCtrl.applyMassAprvList}', vals, txtarea.value, massApprovalrad, userGroupName,
                    function(result, event) {
                        if (event.status) {
                            // Get DOM IDs for HTML and Visualforce elements like this
                            //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                            console.log(result);
                            location.reload();
                            $('.loading2').hide();
                        } else if (event.type === 'exception') {
                            $('.loading').hide();
                            event.message + "<br/>\n<pre>" + event.where + "</pre>";
                            alert(event.message);
                        } else {
                            $('.loading2').hide();
                            alert(event.message);
                        }
                    }, {
                        escape: true,
                        buffer: false
                    }
                );
            
            } else {
                alert('Please enter the values');
                 $('.loading2').hide();
                 }
            
        }

        function setMassApproval(val) {
            console.log('called tier 2 mass approval>> ' + val);
            massApprovalrad = val;
        }

        function finalsubmit() {

            $("#popup_div2").dialog({
                modal: true,
                title: 'Select account manager for exceptional arrangement approval.',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                resizable: true,
                buttons: {
                    Yes: function() {
                        //alert('Development is in progress!!!'+users);
                        //submitBtnFunc(users);
                        reAssignusersToAM(users);
                        $(this).dialog("close");
                    },
                    No: function() {
                        $(this).dialog("close");
                    }

                }
            });


        }

        function approveAllRules() {

            $("#approveRejectAll_Div").dialog({
                modal: true,
                title: '',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                position: 'top',
                resizable: true,
                buttons: [{
                    text: "Submit",
                    click: function() {

                        var desc = document.getElementById("DWCPage:formDRC:cPblockId:cSectionId:appId").value;

                        if (isEmpty(desc)) {
                            alert('Please enter approve / reject comments.');
                        } else {
                            var decision = 'Approved';
                            approveRejectAllFunc(desc, decision);
                            location.reload();
                            $(this).dialog("close");
                        }

                    }
                }, {
                    text: "Cancel",
                    click: function() {
                        $(this).dialog("close");
                    }
                }]
            });
        }

        function rejectAllRules() {

            $("#approveRejectAll_Div").dialog({
                modal: true,
                title: '',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                position: 'top',
                resizable: true,
                buttons: [{
                    text: "Submit",
                    click: function() {

                        var desc = document.getElementById("DWCPage:formDRC:cPblockId:cSectionId:appId").value;

                        if (isEmpty(desc)) {
                            alert('Please enter approve / reject comments.');
                        } else {
                            var decision = 'Rejected';
                            approveRejectAllFunc(desc, decision);
                            $(this).dialog("close");
                        }

                    }
                }, {
                    text: "Cancel",
                    click: function() {
                        $(this).dialog("close");
                    }
                }]
            });
        }

        function CancelWF() {

            $("#cancellation_Div").dialog({
                modal: true,
                title: '',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                position: 'top',
                resizable: true,
                buttons: [{
                    text: "Submit",
                    click: function() {

                        var desc = document.getElementById("DWCPage:formDRC:cancelPblockId:cancelSectionId:wfCId").value;

                        if (isEmpty(desc)) {
                            alert('Please enter cancellation reason.');
                        } else {
                            cancel(desc);
                            $(this).dialog("close");
                        }

                    }
                }, {
                    text: "Cancel",
                    click: function() {
                        $(this).dialog("close");
                    }
                }]
            });
        }

//selva
function CloseColl() {

            $("#closecoll_Div").dialog({
                modal: true,
                title: '',
                zIndex: 10000,
                autoOpen: true,
                width: 600,
                height: 500, 
                position: 'top',
                resizable: true,
                buttons: [{
                    text: "Submit",
                    click: function() {

                        var desc = document.getElementById("DWCPage:formDRC:cancelPblockId:cancelSectionId:wfCId").value;

                        if (isEmpty(desc)) {
                            alert('Please enter reason for closing the collaborator.');
                        } else {
                            cancel(desc);
                            $(this).dialog("close");
                        }

                    }
                }, {
                    text: "Cancel",
                    click: function() {
                        $(this).dialog("close");
                    }
                }]
            });
        }



        function isEmpty(val) {
            return (val === undefined || val == null || val.length <= 0) ? true : false;
        }


        function setAMUserSelection(usrRecord, status) {
            if (status.checked) {
                users = usrRecord;
            }
            console.log('Users >>>> ' + users);
        }

        function approveRejectAllFunc(desc, decision) {
            console.log('approveRejectAllFunc >>>> ' + userGroupName + ' >> ' + collabId + ' ' + desc + ' ' + decision);
            $('.loading').show();
            var vals = [];
            var profiles = '';

            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    vals.push(ruleListMap[key]);
                }
            }

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.approveRejectAllRules}', userGroupName, collabId, desc, decision,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);

                        $('.loading2').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }


        function reAssignusersToAM(users) {
            $('.loading').show();
            var vals = [];
            var profiles = '';

            for (var key in ruleListMap) {
                if (ruleListMap.hasOwnProperty(key)) {
                    vals.push(ruleListMap[key]);
                }
            }

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.reAssignusersToAManager}', vals, userGroupName, users, collabId,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);

                        $('.loading2').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }

        function revertbtn(revertbtnValue) {
            revertStageSelection = revertbtnValue.value;

        }

        function revertStage() {

            $("#popup_revertOption").dialog({
                modal: true,
                title: 'Select Stage to which Collaborator needs to be Reverted',
                zIndex: 10000,
                autoOpen: true,
                width: 1000,
                height: 500,
                resizable: true,
                buttons: [{
                    text: "Submit",
                    click: function() {

                        var desc = document.getElementById("DWCPage:formDRC:rvrtblockId:rvrtSectionId:revertId").value;
                        if (isEmpty(desc) || isEmpty(revertStageSelection)) {
                            alert('Please Select Revert Stage and Enter Revert Reason.');
                        } else {
                            revertActionFunc(desc, revertStageSelection);
                            
                            $(this).dialog("close");
                        }

                    }
                }, {
                    text: "Cancel",
                    click: function() {
                        $(this).dialog("close");
                    }
                }]

            });

        }

        function revertActionFunc(description, revertStageSelection) {
            $('.loading').show();
            var vals = [];
            var profiles = '';

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.revertCollaborator}', description, revertStageSelection, collabId,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);
                        location.href=location.href;
                        $('.loading2').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }

        function discardJS() {
            var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
            popup.setTitle("Warning");
            popup.createDialog();
            window.parent.popup = popup;
            popup.setContentInnerHTML("<p align='center'>This collaborator has unsaved changes. Do you want to discard the unsaved changes? Discarded changes cannot be reversible.</p><p align='center'><br /><button class='btn' onclick='location.href=location.href;'>Yes</button><button class='btn' onclick='window.parent.popup.hide(); return false;'>No</button></p>");
            popup.show();
        }


        function submitForApproval() {


            $('.loading').show();
            var vals = [];
            var profiles = '';
            var url = window.location.href;
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.submitForApproval}', collabId,
                function(result, event) {
                    if (event.status) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        console.log(result);
                        
                       if(result=="Please attach waiver list before submitting for approval")alert ("Please attach waiver list before submitting for approval.");
                      
                             window.location.href = url;
                             $('.loading2').hide(); 
                             
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );

        }



        function getCompleteRuleList() {
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.getCompleteRuleList}', collabId,
                function(result, event) {
                    if (event.status) {
                        console.log('getCompleteRuleList >>>>> ' + result);
                        summaryRulemap = result;

                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);

                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }

        function createSummaryTable() { //SUHAS
            var ruleRecs = '';
            var singleRecId = '';
            var tMap = new Map();
            for (var key in summaryRulemap) {
                if (summaryRulemap.hasOwnProperty(key)) {
                    if (tMap.get(summaryRulemap[key]) != undefined) {
                        tMap.put(summaryRulemap[key], tMap.get(summaryRulemap[key]) + 1);
                    } else {
                        tMap.put(summaryRulemap[key], 1);
                    }
                }
            }
            console.log(tMap);
            if (tMap.containsKey('PWA')) {
                var i = tMap.get('PWA');
                if (tMap.containsKey('PW')) {
                    var j = tMap.get('PW');
                    tMap.put('PW', i + j);
                } else {
                    tMap.put('PW', i);
                }
                tMap.remove('PWA');
            }
            if (tMap.containsKey('PWO') || tMap.containsKey('POC') || tMap.containsKey('PCF')) {
                var i1 = tMap.get('PWO') != undefined ? tMap.get('PWO') : 0;
                var i2 = tMap.get('POC') != undefined ? tMap.get('POC') : 0;
                var i3 = tMap.get('PCF') != undefined ? tMap.get('PCF') : 0;
                if (tMap.containsKey('PI')) {
                    var j = tMap.get('PI');
                    tMap.put('PI', i1 + i2 + i3 + j);
                } else {
                    tMap.put('PI', i1 + i2 + i3);
                }
                tMap.remove('PWO');
                tMap.remove('POC');
                tMap.remove('PCF');
            }

            for (var key in summaryRulemap) {
                if (summaryRulemap[key] != '') {
                    ruleRecs += key + ',' + summaryRulemap[key] + ';';
                    singleRecId += key + ';';
                }
            }
            ruleRecs = ruleRecs.replace(/.$/, "");
            singleRecId = singleRecId.replace(/.$/, "");

            var str = '<table border="0"><tr><th colspan="2">Rule summary</th></tr><tr><th colspan="2">(Lists only the results available in the collaborator)</th></tr>';
            var stages = tMap.keys();
            var stg = '';
            while (stg != undefined) {
                stg = stages.next().value;
                if (stg != undefined) str += '<tr><td>' + stg + '</td><td>' + tMap.get(stg) + '</td></tr>';
            }
            str += '</table>';
            return str;

        }


        function getTaskmessage() {

            $('.loading').show();

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.getRuleStatusMapForReleaseToCustomer}', collabId,
                function(result, event) {
                    if (event.status) {
                        console.log('getTaskmessage >>>>> ' + result);

                        if ('{!isPortalUser}'=='true') {
                        //alert ('portal');
                           getTaskMessage4Customer(result.join());
                        } else {
                         //alert('internal');
                            getTaskMessage4Internal(result.join());
                        }
                        $('.loading').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);

                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }
        var isSyncWithMantis = 'true';

        function getTaskMessage4Internal(finalStatus) {
            console.log('Internal >>>>> ');
            var arrValues = '';
            var waiverStatus = '{!waiverCollaborator.Waiver_Status__c}';
            var workflowStatus = '{!waiverCollaborator.Workflow_Status__c}';
            var progressBarStatus = '{!waiverCollaborator.Progressbar_staus__c}';
            var taskMsg = 'Task Message';
            var isFCDRuleExist = false;
            var isFCFRuleExist = false;
            var isFDRuleExist = false;

            if (finalStatus != '' && finalStatus != null) {
                arrValues = finalStatus.split(',');
            }
            if (arrValues != null && arrValues != 'undefined') {
                for (var i = 0; i < arrValues.length; i++) {
                    console.log('getTaskmessage >>>>> ' + arrValues[i]);
                    if (arrValues[i] == 'FCD') {
                        isFCDRuleExist = true;
                    } else if (arrValues[i] == 'FCF') {
                        isFCFRuleExist = true;
                    } else if (arrValues[i] == 'FD') {
                        isFDRuleExist = true;
                    }

                }
            }

            console.log('waiverStatus >>>>> ' + waiverStatus);
            console.log('workflowStatus >>>>> ' + workflowStatus);
            console.log('progressBarStatus >>>>> ' + progressBarStatus);
            console.log('revertCollaborator >>>>> ' + revertCollaborator);
            console.log('isSyncWithMantis >>>>> ' + isSyncWithMantis);
            if (isSyncWithMantis) {
                console.log('isSyncWithMantis >>>>> ' + isSyncWithMantis);
            }
            if (isFCDRuleExist == true) {
                console.log('isFCFRuleExist >>>>> ' + isFCDRuleExist);
            }


            if (revertCollaborator == 'true' && workflowStatus != 'Closed' && workflowStatus != 'Cancel') {
                taskMsg = ' Review is in progress. No action is required from customer yet.';
            } else if (progressBarStatus == 'Review_Disposition' ) {

                
                        taskMsg = 'DRC/DFM review result will be available after foundry review. No action is required from customer yet.';
                    
                    
            } else if(progressBarStatus == 'Execution') {
                    taskMsg = 'Execution is in progress. No action is required from customer yet.';
                            
            /* } else if ((waiverStatus == 'PI' || waiverStatus == 'PW' || waiverStatus == 'PA') && workflowStatus == 'Pending' && progressBarStatus == 'Review_Disposition') {
                    taskMsg = 'DRC/DFM review result will be available after foundry review. No action is required from customer yet.'; */
            
            /* } else if (waiverStatus == 'Open' && workflowStatus == 'Pending' && progressBarStatus == 'Pending for FAE') {
                taskMsg = 'The DFM/DRC Review results are ready. Your input is required to confirm which customers to receive the report when you approve <b> Proceed to customer </b>. Note that rules with Review status FCC or iFD are non-waived rules and are open for customer response.'; */
            } else if('{!isRunOnly}'=='true' && (progressBarStatus == 'Pending For FAE' || progressBarStatus == 'Pending for FAE')) { 
                    taskMsg = 'The DFM/DRC Review results are ready. No action is required from FAE/Customer.'; 
            } else if (progressBarStatus == 'Pending For FAE' || progressBarStatus == 'Pending for FAE') {
            //alert('fae'); 
                taskMsg = 'The DFM/DRC Review results are ready. Your input is required to confirm which customers to receive the report when you approve <b> Proceed to customer </b>. Note that rules with Review status FCC or iFD are non-waived rules and are open for customer response.';
            } else if (waiverStatus == 'Open' && workflowStatus == 'Freeze' && isSyncWithMantis && progressBarStatus == 'Pending For Foundry') {

                /* if (isFCDRuleExist == true) {
                    taskMsg = 'Customer has submitted the customer response. No action is required from Customer yet further notice.<br><br>' + 'There are non-waived rules which customer does not agree to fix or to take risk. FAE is to discuss with customer to encourage a response ( <b>agree to fix or accept risk</b>).' + ' If no positive response, FAE can select for <b> Request Foundry-to-risk or Accept waiver rejection. </b>';
                }  else {*/
                    taskMsg = 'Customer has declined to design fixes or to accept risk for the non-waived rules.<br><br>' + 'Executives/Tier2 approval is required for foundry to accept risk (Will communicate as <b> Waived Exceptional Arrangement, WEA </b>once approved).<br><br>' + '  Executives/Tier2  options are<br><br>' + '<b>&#8226;  Approve=</b> Foundry to accept risk due to no customer action possible on mitigating DFM/DRC violations;<br>' + '<b>&#8226;  Reject=</b> Foundry reject the device tapeout submission due to unacceptable non-compliance to Design Manual. <b> Please contact FAE <FAE> and Account Manager <AM> before you choose to reject.</b> <br>' + '<br>Note: <br>' + 'Final Request Foundry-to-risk Approval status= <b>Approve</b> <br> when all 4 groups (PIYE, DE, QA, AM) approve. <br>Final Request Foundry-to-risk Approval status=<b> Reject </b> <br>when <b> either </b> one of the 4 groups (PIYE, DE, QA, AM) reject';
                
            } else if (waiverStatus == 'Open' && workflowStatus == 'Freeze' && isSyncWithMantis) {


                taskMsg = 'The DFM/DRC Review results are ready. Customer prompt action is required to enter the <b> Customer Option </b> and <b> Customer Explanation </b>. Please click <b> Save and Submit </b> when finished.';

            } else if ((waiverStatus == 'PI' || waiverStatus == 'PW' || waiverStatus == 'PWA' || waiverStatus == 'PA') && workflowStatus == 'Freeze' && isSyncWithMantis) {

                // baseUrl = mapOfpBarStatusImgs.get('Pending_Customer'); 
                taskMsg = 'The DFM/DRC Review results are ready. No action is required from customer.';

            } else if (workflowStatus == 'Closed') {
                console.log('Closed condition >>>>> '+isFDRuleExist+'>>> '+isFCFRuleExist);
                if (!(isFCFRuleExist == true || isFDRuleExist == true)) {
                    console.log('Closed condition1 >>>>> ');
                    taskMsg = ' The DFM/DRC Review Final results are ready. No action is required from customer.';
                } else if (isFCFRuleExist == true || isFDRuleExist == true) {
                    console.log('Closed condition2 >>>>> ');
                    taskMsg = ' The DFM/DRC Review Final results are ready. Please kindly fix the non-waived violations and resubmit.';
                } else {
                    console.log('Closed condition3 >>>>> ');
                    taskMsg = ' The DFM/DRC Review Final results are ready. Please kindly fix the non-waived violations and resubmit.';
                }

            } else if (workflowStatus == 'Cancel') {
                taskMsg = ' Services/Review Request has been cancelled. No action is required. ';
            }
            
            
            if (document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg") != null && document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg") != 'undefined') {
                console.log('Closed condition final >>>>> '+taskMsg);
                document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg").innerHTML = taskMsg;
            }
        }

        function getTaskMessage4Customer(finalStatus) {
            console.log('Customer >>>>> ');
            var arrValues = '';
            var waiverStatus = '{!waiverCollaborator.Waiver_Status__c}';
            var workflowStatus = '{!waiverCollaborator.Workflow_Status__c}';
            var progressBarStatus = '{!waiverCollaborator.Progressbar_staus__c}';
            var taskMsg;
            var isFCDRuleExist;
            var isFCFRuleExist;
            var isFDRuleExist;

            if (finalStatus != '' && finalStatus != null) {
                arrValues = finalStatus.split(',');
            }
            for (var i = 0; i < arrValues.length; i++) {
                console.log('getTaskmessage >>>>> ' + arrValues[i]);
                if (arrValues[i] == 'FCD') {
                    isFCDRuleExist = true;
                } else if (arrValues[i] == 'FCF') {
                    isFCFRuleExist = true;
                } else if (arrValues[i] == 'FD') {
                    isFDRuleExist = true;
                }
            }

            console.log('waiverStatus >>>>> ' + waiverStatus);
            console.log('workflowStatus >>>>> ' + workflowStatus);
            console.log('progressBarStatus >>>>> ' + progressBarStatus);
            console.log('revertCollaborator >>>>> ' + revertCollaborator);
            console.log('isSyncWithMantis >>>>> ' + isSyncWithMantis);


            if (revertCollaborator == 'true' && workflowStatus != 'Closed' && workflowStatus != 'Cancel') {
                taskMsg = ' Review is in progress. No action is required from customer yet.';
            } else if(progressBarStatus == 'Review_Disposition') {
                    
                        taskMsg = 'DRC/DFM review result will be available after foundry review. No action is required from customer yet.';
             } else if(progressBarStatus == 'Execution'){
                    taskMsg = 'Execution is in progress. No action is required from customer yet.';
             } else if(progressBarStatus == 'Pending For FAE' || progressBarStatus == 'Pending for FAE') {
                taskMsg = 'The DFM/DRC Review results are ready. No action is required from customer.';

            } else if (waiverStatus == 'Open' && workflowStatus == 'Freeze' && isSyncWithMantis && progressBarStatus == 'Pending For Foundry') {

                taskMsg = 'Customer has submitted the customer response. No action is required from Customer yet further notice.';


            } else if (waiverStatus == 'Open' && workflowStatus == 'Freeze' && isSyncWithMantis) {


                taskMsg = 'The DFM/DRC Review results are ready. Customer prompt action is required to enter the <b> Customer Option </b> and <b> Customer Explanation</b>. Please click <b> Save and Submit </b> when finished.';

            } else if ((waiverStatus == 'PI' || waiverStatus == 'PW' || waiverStatus == 'PWA' || waiverStatus == 'PA') && workflowStatus == 'Freeze' && isSyncWithMantis) {

                // baseUrl = mapOfpBarStatusImgs.get('Pending_Customer'); 
                taskMsg = 'The DFM/DRC Review results are ready. No action is required from customer.';

            } else if (workflowStatus == 'Closed') {

                if (!(isFCFRuleExist == true|| isFDRuleExist == true)) {
                    taskMsg = ' The DFM Review Final results are ready. No action is required from customer.';
                } else if (isFCFRuleExist == true || isFDRuleExist == true) {
                    taskMsg = ' The DFM Review Final results are ready. Please kindly fix the non-waived violations and resubmit.';
                } else {
                    taskMsg = ' The DFM Review Final results are ready. No action is required from customer.';
                }

            } else if (workflowStatus == 'Cancel') {
                taskMsg = ' Services/Review Request has been cancelled. No action is required. ';
            }


            if (document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg") != null && document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg") != 'undefined') {
                document.getElementById("DWCPage:formDRC:pblkId:theTaskMsg").innerHTML = taskMsg;
            }

        }

        function submitRevertStagePop() {
            var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
            popup.setTitle("Warning");
            popup.createDialog();
            window.parent.popup = popup;
            popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'> Selected rules Customer / FAE option & comments will be cleared  and  it will be reverted back to Mantis system. Click Ok button to Revert rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide();submitRevertStage();return false;'>Ok</button><button class='btn' onclick='window.parent.popup.hide();return false;'>Cancel</button></p>");
            popup.show();


        }

        function submitRevertStage() {

            $('.loading').show();

            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DWC_CollaboratorCtrl.finalRevertSubmit}', collabId,
                function(result, event) {
                    if (event.status) {
                        console.log('finalRevertSubmit >>>>> ' + result);
                        //alert('result'+result);

                        $('.loading').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);

                    } else {
                        $('.loading').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                }
            );
        }

    function applyMassSelectJs(){
        
        if(applyToAll==true){
            
              $('.loading').show();
           // alert($("input[name$=selectedRdMassUpSec]:checked").val());
            var vals = [];
             
            var hasIFDRules='false';
            var selectedVal=$("input[name$=selectedRdMassUpSec]:checked").val();
            var commentval = document.getElementById("massCommentId").value;
            console.log('commentval@@'+commentval);
            console.log('selectedVal@@'+selectedVal);
            if((commentval == '' || commentval == null) || (selectedVal =='' || selectedVal ==undefined) ){
               if ('{!isPortalUser}'=='true') alert('Please ensure Customer Option/ Comment is selected.');
               else alert('Please ensure FAE Option/ Comment is selected.');
               //alert('Selected all Open rules');
            } else {
                Visualforce.remoting.timeout = 120000; // Set timeout at page level
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DWC_CollaboratorCtrl.getAllWaiverRuleListForAllOpen}',collabId,
                    function(result, event) {
                    
                    
                        if (event.status) {
                            // Get DOM IDs for HTML and Visualforce elements like this
                            //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                            $('.loading2').hide();
                        } 
                        waiverRulelist= result;
                        console.log('test result'+waiverRulelist);
                            for (var i = 0; i < waiverRulelist.length; i++) {
                            ruleListForOpen[waiverRulelist[i].Id]= waiverRulelist[i];
                            console.log('inside loop'+ruleListForOpen);
                            }  
                            console.log('Open rules'+ruleListForOpen.length);
                            applyToAllOpen();
                    }, {
                        escape: true,
                        buffer: false
                    }
                );
            } 
                
               /*    for( var key in ruleListForOpen) {
                    if(ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'iFD'){
                       hasIFDRules='true';
                    }
                     //alert(ruleListForOpen);       
                    if((ruleListForOpen[key].Final_Stage__c == 'OPEN' || ruleListForOpen[key].Final_Stage__c == 'FCD' || ruleListForOpen[key].Stage__c == 'iFD' || ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'FCC')
                    && !(ruleListForOpen[key].Disagree__c || ruleListForOpen[key].IsCustomerAcceptsRisk__c || ruleListForOpen[key].IsCustomerAgreeToFix__c))
                        var option = document.getElementsByName(key+'_option');
                         console.log('option value 123 '+ option.length); 
                         console.log('option value 321 '+ option); 
                        if(option.length>4){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                            option[3].checked = false; 
                            option[4].checked = false; 
                        }else if(option.length>1){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                        }
                        
                    }
                
                var popup = new SimpleDialog("PopUp"+Dialogs.getNextId(), false);
                if(hasIFDRules=='true' && '{!isFAE}'=='false' && selectedVal=='CustomerAcceptsRisk'){
                    popup.setTitle("Warning");   
                    popup.createDialog();   
                    window.parent.popup = popup;  
                    popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Agree to Take Risk option is not valid for iFD rules. Please select valid customer option only for iFD rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide(); return false;'>Close</button></p>");    
                    popup.show();
                }
                
                
                
                 console.log('ruleListForOpen ' + ruleListForOpen);
                for( var key in ruleListForOpen ) {
                    console.log('key ' + key );
                    if((ruleListForOpen[key].Final_Stage__c == 'OPEN' || ruleListForOpen[key].Final_Stage__c == 'FCD')){
                        var option = document.getElementsByName(key+'_option');
                        console.log('option value @@@ ' + option); 
                        //alert(selectedVal);
                       // alert((document.getElementsByName(key+'_option')));
                         //alert(ruleListForOpen[key].Design_Rule_Name__c);
                        //alert(document.getElementById("massCommentId").value);
                        //option[0].checked=true;
                        for(var i=0; i< option.length;i++){
                            console.log('option value >>>>> ' + option[i]);
                        }
                        
                        if(option.length>0){ 
                            if(selectedVal=='CustomerAgreeToFix'){
                                option[0].checked = true; 
                                if(option.length>2){
                                option[1].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = true;
                                ruleListForOpen[key].Final_Stage__c = 'FCF';
                                //ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='CustomerAcceptsRisk' && !(ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'iFD')){
                                option[1].checked = true;
                                if(option.length>2){
                                option[0].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = true;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'WCR';
                                // ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='Disagree'){
                                option[2].checked = true;  
                                if(option.length>2){
                                option[1].checked = false;  
                                option[0].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = true;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'FCD';
                                // ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='GfAcceptsRisk'){
                                option[3].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;  
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = true;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Final_Stage__c = 'OPEN';
                                document.getElementById(key+'_GFInternalComments').value=commentval;
                                //ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Warning__c = 'Please discuss with FAE upfront before rejecting waiver request. Your reject will immediately set this violation to: "NOT ACCEPT" and reject the design to customer.';
                                // rules.Collaborator_Details__c TO BE DONE
                                // rules.Account_Manager_Approver__c TO BE DONE
                            }else if(selectedVal=='AcceptRejection'){
                                option[4].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;    
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = true;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'FD';
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }else if(selectedVal=='Revert'){
                                option[5].checked = true; 
                                if(option.length>4){
                                option[0].checked = false; 
                                option[1].checked = false; 
                                option[2].checked = false; 
                                option[3].checked = false; 
                                option[4].checked = false; 
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Revert_Rule__c = true;
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }
                            
                        }    
                    }
            }  */   
              
            $('.loading').hide();
            
            
            
        } else {
             var hasIFDRules='false';
              var selectedVal=$("input[name$=selectedRdMassUpSec]:checked").val();
              var commentval = document.getElementById("massCommentId").value;
           if((commentval == '' || commentval == null) || (selectedVal =='' || selectedVal ==undefined) ){
               if ('{!isPortalUser}'=='true') alert('Please ensure Customer Option/ Comment is selected.');
               else alert('Please ensure FAE Option/ Comment is selected.');
               //alert('Selected all Open rules');
            
            } else if(selectAll==false && ruleCheckbox == false){
               
               var popup = new SimpleDialog("PopUp" + Dialogs.getNextId(), false);
                if ('{!isPortalUser}'=='true') popup.setTitle("Mass Update - Customer Option / Customer Closing Explanation"); 
                else popup.setTitle("Mass Update - FAE Option / FAE Closing Explanation"); 
                popup.createDialog();
                window.parent.popup = popup;
                popup.setContentInnerHTML("<p> <b>No rules have been selected. <br/>Please select the rules or choose to 'Apply to all OPEN rules' </b> <br/><button style='float: right;margin-right: 214px;' class='btn' onclick='window.parent.popup.hide(); return false'>OK</button></p>");
                popup.show(); 
           } else { 
                var vals = [];
                var checkID=[];
            var table=document.getElementById("ruleList");
            for(var i=0,row; row=table.rows[i]; i++){
             var checkbox=row.cells[0].children[0];
             console.log('checkbox123'+checkbox);
             if(checkbox.checked){
             //console.log('checkbox.id###'+checkbox.id);
             var id=checkbox.id.substr(0,18);
             console.log('checkbox.id###'+id);
             checkID.push(id);
             }
            }
            console.log('checkID@@@'+checkID);        
      
        for(var key in ruleListMap ) {
                console.log('ruleCheckbox####'+ruleCheckbox);
                    if(ruleCheckbox==true && (ruleListMap[key].Stage__c == 'IFD' || ruleListMap[key].Stage__c == 'iFD')){
                    
                       hasIFDRules='true';
                    }
                    if((ruleListMap[key].Final_Stage__c == 'OPEN' || ruleListMap[key].Final_Stage__c == 'FCD' || ruleListMap[key].Stage__c == 'iFD' || ruleListMap[key].Stage__c == 'IFD' || ruleListMap[key].Stage__c == 'FCC')
                    && !(ruleListMap[key].Disagree__c || ruleListMap[key].IsCustomerAcceptsRisk__c || ruleListMap[key].IsCustomerAgreeToFix__c))
                        console.log('option value 123 '+ key); 
                        var option = document.getElementsByName(key+'_option');
                        if(option.length>4){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                            option[3].checked = false; 
                            option[4].checked = false; 
                        }else if(option.length>1){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                        }
                        
                    }
                
                var popup = new SimpleDialog("PopUp"+Dialogs.getNextId(), false);
                if(hasIFDRules=='true' && '{!isFAE}'=='false' && selectedVal=='CustomerAcceptsRisk'){
                    popup.setTitle("Warning");   
                    popup.createDialog();   
                    window.parent.popup = popup;  
                    popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Agree to Take Risk option is not valid for iFD rules. Please select valid customer option only for iFD rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide(); return false;'>Close</button></p>");    
                    popup.show();
                }
                
                
                
                 
                for( var key in ruleListMap ) {
                    console.log('ruleListMap[key]'+ruleListMap[key].Id);
                    //console.log('List of Index'+checkID.indexOf(ruleListMap[key].Id));
                    if(checkID.indexOf(ruleListMap[key].Id) !=-1) {
                    //console.log('Inside index');
                    //if((ruleListMap[key].Final_Stage__c == 'OPEN' || ruleListMap[key].Final_Stage__c == 'FCD')){
                        var option = document.getElementsByName(key+'_option');
                        console.log('option value >>>>> ' + option.length); 
                        //option[0].checked=true;
                        for(var i=0; i< option.length;i++){
                            console.log('option value >>>>> ' + option[i]);
                        }
                        
                        if(option.length>0){ 
                            if(selectedVal=='CustomerAgreeToFix'){
                                option[0].checked = true; 
                                if(option.length>2){
                                option[1].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = false;
                                ruleListMap[key].Disagree__c = false;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = false;
                                ruleListMap[key].AcceptRisk__c = false;
                                ruleListMap[key].IsCustomerAgreeToFix__c = true;
                                ruleListMap[key].Final_Stage__c = 'FCF';
                                //ruleListMap[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListMap[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='CustomerAcceptsRisk' && !(ruleListMap[key].Stage__c == 'IFD' || ruleListMap[key].Stage__c == 'iFD')){
                                option[1].checked = true;
                                if(option.length>2){
                                option[0].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = false;
                                ruleListMap[key].Disagree__c = false;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = true;
                                ruleListMap[key].AcceptRisk__c = false;
                                ruleListMap[key].IsCustomerAgreeToFix__c = false;
                                ruleListMap[key].Final_Stage__c = 'WCR';
                                // ruleListMap[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListMap[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='Disagree'){
                                option[2].checked = true;  
                                if(option.length>2){
                                option[1].checked = false;  
                                option[0].checked = false;
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = false;
                                ruleListMap[key].Disagree__c = true;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = false;
                                ruleListMap[key].AcceptRisk__c = false;
                                ruleListMap[key].IsCustomerAgreeToFix__c = false;
                                ruleListMap[key].Final_Stage__c = 'FCD';
                                // ruleListMap[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListMap[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='GfAcceptsRisk'){
                                option[3].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;  
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = true;
                                ruleListMap[key].Disagree__c = false;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = false;
                                ruleListMap[key].AcceptRisk__c = false;
                                ruleListMap[key].IsCustomerAgreeToFix__c = false;
                                ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                ruleListMap[key].Final_Stage__c = 'OPEN';
                                document.getElementById(key+'_GFInternalComments').value=commentval;
                                //ruleListMap[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                                ruleListMap[key].Warning__c = 'Please discuss with FAE upfront before rejecting waiver request. Your reject will immediately set this violation to: "NOT ACCEPT" and reject the design to customer.';
                                // rules.Collaborator_Details__c TO BE DONE
                                // rules.Account_Manager_Approver__c TO BE DONE
                            }else if(selectedVal=='AcceptRejection'){
                                option[4].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;    
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = false;
                                ruleListMap[key].Disagree__c = false;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = false;
                                ruleListMap[key].AcceptRisk__c = true;
                                ruleListMap[key].IsCustomerAgreeToFix__c = false;
                                ruleListMap[key].Final_Stage__c = 'FD';
                                ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListMap[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }else if(selectedVal=='Revert'){
                                option[5].checked = true; 
                                if(option.length>4){
                                option[0].checked = false; 
                                option[1].checked = false; 
                                option[2].checked = false; 
                                option[3].checked = false; 
                                option[4].checked = false; 
                                }
                                ruleListMap[key].IsGfAcceptsRisk__c = false;
                                ruleListMap[key].Disagree__c = false;
                                ruleListMap[key].IsCustomerAcceptsRisk__c = false;
                                ruleListMap[key].AcceptRisk__c = false;
                                ruleListMap[key].IsCustomerAgreeToFix__c = false;
                                ruleListMap[key].Revert_Rule__c = true;
                                ruleListMap[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListMap[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }
                            
                        }    
                    //}
            }
            } 
            
         }
        } 
    }
    
    function applyToAllOpen(){
        console.log('ruleListForOpen@@@'+ruleListForOpen);
         var vals = [];
            var hasIFDRules='false';
            var selectedVal=$("input[name$=selectedRdMassUpSec]:checked").val();
            var commentval = document.getElementById("massCommentId").value;
        for( var key in ruleListForOpen) {
                    if(ruleCheckbox==true && (ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'iFD')){
                       hasIFDRules='true';
                    }
                     //alert(ruleListForOpen);       
                    if((ruleListForOpen[key].Final_Stage__c == 'OPEN' || ruleListForOpen[key].Final_Stage__c == 'FCD' || ruleListForOpen[key].Stage__c == 'iFD' || ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'FCC')
                    && !(ruleListForOpen[key].Disagree__c || ruleListForOpen[key].IsCustomerAcceptsRisk__c || ruleListForOpen[key].IsCustomerAgreeToFix__c))
                        var option = document.getElementsByName(key+'_option');
                         console.log('option value 123 '+ option.length); 
                         console.log('option value 321 '+ option); 
                        if(option.length>4){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                            option[3].checked = false; 
                            option[4].checked = false; 
                        }else if(option.length>1){
                            option[0].checked = false; 
                            option[1].checked = false; 
                            option[2].checked = false; 
                        }
                        
                    }
                
                var popup = new SimpleDialog("PopUp"+Dialogs.getNextId(), false);
                if(hasIFDRules=='true' && '{!isFAE}'=='false' && selectedVal=='CustomerAcceptsRisk'){
                    popup.setTitle("Warning");   
                    popup.createDialog();   
                    window.parent.popup = popup;  
                    popup.setContentInnerHTML("<p align='center'><img src='/img/msg_icons/warning32.png' style='margin:0 5px;'/></p><p align='center'>Agree to Take Risk option is not valid for iFD rules. Please select valid customer option only for iFD rules.</p><p align='center'><br /><button class='btn' onclick='window.parent.popup.hide(); return false;'>Close</button></p>");    
                    popup.show();
                }
                
                
                
                 console.log('ruleListForOpen ' + ruleListForOpen);
                for( var key in ruleListForOpen ) {
                    console.log('key ' + key );
                    if((ruleListForOpen[key].Final_Stage__c == 'OPEN' || ruleListForOpen[key].Final_Stage__c == 'FCD')){
                        var option = document.getElementsByName(key+'_option');
                        console.log('option value @@@ ' + option); 
                        //alert(selectedVal);
                       // alert((document.getElementsByName(key+'_option')));
                         //alert(ruleListForOpen[key].Design_Rule_Name__c);
                        //alert(document.getElementById("massCommentId").value);
                        //option[0].checked=true;
                        for(var i=0; i< option.length;i++){
                            console.log('option value >>>>> ' + option[i]);
                        }
                        
                        if(option.length>0){ 
                            if(selectedVal=='CustomerAgreeToFix'){
                                option[0].checked = true; 
                                if(option.length>2){
                                option[1].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = true;
                                ruleListForOpen[key].Final_Stage__c = 'FCF';
                                //ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='CustomerAcceptsRisk' && !(ruleListForOpen[key].Stage__c == 'IFD' || ruleListForOpen[key].Stage__c == 'iFD')){
                                option[1].checked = true;
                                if(option.length>2){
                                option[0].checked = false;  
                                option[2].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = true;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'WCR';
                                // ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='Disagree'){
                                option[2].checked = true;  
                                if(option.length>2){
                                option[1].checked = false;  
                                option[0].checked = false;
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = true;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'FCD';
                                // ruleListForOpen[key].GF_Internal_Closing_Comment__c=document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Customer_Closing_Comment__c = document.getElementById("massCommentId").value;
                                document.getElementById(key+'_CustomerComments').value=commentval;
                            }else if(selectedVal=='GfAcceptsRisk'){
                                option[3].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;  
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = true;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Final_Stage__c = 'OPEN';
                                document.getElementById(key+'_GFInternalComments').value=commentval;
                                //ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                                ruleListForOpen[key].Warning__c = 'Please discuss with FAE upfront before rejecting waiver request. Your reject will immediately set this violation to: "NOT ACCEPT" and reject the design to customer.';
                                // rules.Collaborator_Details__c TO BE DONE
                                // rules.Account_Manager_Approver__c TO BE DONE
                            }else if(selectedVal=='AcceptRejection'){
                                option[4].checked = true; 
                                if(option.length>4){
                                option[2].checked = false;    
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = true;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Final_Stage__c = 'FD';
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }else if(selectedVal=='Revert'){
                                option[5].checked = true; 
                                if(option.length>4){
                                option[0].checked = false; 
                                option[1].checked = false; 
                                option[2].checked = false; 
                                option[3].checked = false; 
                                option[4].checked = false; 
                                }
                                ruleListForOpen[key].IsGfAcceptsRisk__c = false;
                                ruleListForOpen[key].Disagree__c = false;
                                ruleListForOpen[key].IsCustomerAcceptsRisk__c = false;
                                ruleListForOpen[key].AcceptRisk__c = false;
                                ruleListForOpen[key].IsCustomerAgreeToFix__c = false;
                                ruleListForOpen[key].Revert_Rule__c = true;
                                ruleListForOpen[key].GF_Internal_Closing_Comment__c = document.getElementById("massCommentId").value;
                                 document.getElementById(key+'_GFInternalComments').value=commentval;
                                // ruleListForOpen[key].Customer_Closing_Comment__c  =document.getElementById("massCommentId").value;
                            }
                            
                        }    
                    }
            }    
        
    }    
    
    
    
  function applyMassSelectForOpenRulesJs(){
            
            $('.loading').show();
               // alert('Selected all Open rules');
                comment= document.getElementById("massCommentId").value;
                var selectedVal=$("input[name$=selectedRdMassUpSec]:checked").val();
                isPortal="{!isPortalUser}";
                Visualforce.remoting.timeout = 120000; // Set timeout at page level
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DWC_CollaboratorCtrl.getAllWaiverRuleListForOpen}',collabId,comment,selectedVal,isPortal,
                    function(result, event) {
                        // Get DOM IDs for HTML and Visualforce elements like this
                        //document.getElementById('collabSectionId').innerHTML = JSON.stringify(result);
                        if (event.status) {
                        
                        getCollaborator(pagenumber, pagesize, $("#finalStatusId").val(), $("#primeDieId").val(), $("#searchId").val(),$("#ruleTypeId").val());
                        console.log(result);
                         $('.loading2').hide();
                    } else if (event.type === 'exception') {
                        $('.loading').hide();
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                        alert(event.message);
                    } else {
                        $('.loading2').hide();
                        alert(event.message);
                    }
                }, {
                    escape: true,
                    buffer: false
                 }
            );     
                 
         }       
    
    function removeTextAreaWhiteSpace() {
        
            var myTxtArea;
            if(document.getElementById('massCommentId')!=null && document.getElementById('massCommentId') != undefined){ 
            myTxtArea = document.getElementById('massCommentId');
            }
            if(myTxtArea !=null && myTxtArea.value != null){
            myTxtArea.value = myTxtArea.value.replace(/^\s*|\s*$/g,'');
            }
            var myTxtArea1;
            if(document.getElementById('massCommentId2')!=null && document.getElementById('massCommentId2') != undefined){ 
            myTxtArea1 = document.getElementById('massCommentId2');
            }
            if(myTxtArea1 !=null && myTxtArea1.value != null){
            myTxtArea1.value = myTxtArea1.value.replace(/^\s*|\s*$/g,'');
            }
        
        
        }
        
    //clear function   
        function clearrulelist(checkboxElem){  
            
            
                
            if(checkboxElem.checked)
            { 
            var allIds;
                var id = checkboxElem.id;
                console.log('checked id'+id);
                ruleCheckbox=true;
                console.log('ruleCheckbox@@'+ruleCheckbox);
                
            }
   
            
                 
            if(!(checkboxElem.checked))
            {  
            ruleCheckbox=false;
            console.log('ruleCheckbox'+ruleCheckbox);  
              //alert('test');
                var id = checkboxElem.id;
                var chkId= id.split("_");                
                var optionId = chkId[0]+'_option';
                var gfCommnts= chkId[0]+'_GFInternalComments';
                var custCommnts= chkId[0]+'_CustomerComments';                
                $('#'+gfCommnts).val('');
                $('#'+custCommnts).val('');
                var option = document.getElementsByName(optionId);                
                if(option.length>4){
                    option[0].checked = false;
                    option[1].checked = false; 
                    option[2].checked = false; 
                    option[3].checked = false; 
                    option[4].checked = false;                    
                } else if(option.length>1) {
                    option[0].checked = false; 
                    option[1].checked = false; 
                    option[2].checked = false; 
                }   
            }
        }        
    function prmDieFunction()
    {
        //var CollID={!$CurrentPage.parameters.id};
        //console.log({!$CurrentPage.parameters.id});    
        var t = $("#primeDieId").val();
        var p =  $("#ruleTypeId").val();
        console.log('testing rahul:'+ t);
        console.log('testing Mohan:'+ p);
        //prDieActFunction(t);
       if ('{!isPortalUser}'!='true'){ window.open ('/apex/DWC_WaiverCollaboratorPDF?id={!$CurrentPage.parameters.id}&primeDie='+t+'&ruleType='+p); 
        } else window.open ('/GlobalfoundryView/apex/DWC_WaiverCollaboratorPDF?id={!$CurrentPage.parameters.id}&primeDie='+t+'&ruleType='+p);
        // return true;
    } 
        
    </script>



    <apex:form id="formDRC">
        <apex:pageMessages />
        <div style="width:100% !important;">
            <!--START OF PROGRESS BAR CREATION COMPONENT-->
            <div style="padding-top:50px;">
            <c:ProgressBarComponent pBarObject="{!waiverCollaborator}" appName="DRC" />
            <div style="float:left;padding-bottom:5px;">

                <div class="green box">
                    <label class="left20">Completed</label>
                </div>
                <div class="blue box">
                    <label class="left20">Inprogress</label>
                </div>
                <div class="grey box">
                    <label class="left20">Future</label>
                </div>
                <div class="red box">
                    <label class="left20">Cancelled</label>
                </div>

            </div>
            </div>

            <!-- SUHAS -->
            <div id="popup_div2" style="display: none;">
                <apex:pageBlock >
                    <apex:pageBlockTable value="{!AMDetails}" var="amlst">
                        <apex:column headerValue="Select AM">
                            <input type="radio" name="AccManager" onClick="setAMUserSelection('{!amlst.ATP.User__c}', this);" />
                        </apex:column>
                        <apex:column headerValue="User Name">
                            <apex:outputText value="{!amlst.ATP.User__r.Name}" />
                        </apex:column>
                        <apex:column headerValue="Team Role">
                            <apex:outputText value="{!amlst.ATP.Team_Role__c}" />
                        </apex:column>
                        <apex:column headerValue="Account Full Name">
                            <apex:outputText value="{!amlst.ATP.Account__r.Name}" />
                        </apex:column>
                    </apex:pageBlockTable>
                </apex:pageBlock>
            </div>

            <div id="approveRejectAll_Div" style="display: none;">

                <apex:pageBlock id="cPblockId">
                    <apex:pageBlockSection title="Approve / Reject All Comments" collapsible="false" columns="1" id="cSectionId">
                        <apex:inputTextArea value="{!approverejectcomments}" id="appId" style="height: 299px; width: 900px;" richText="false" rows="10" disabled="false" />
                    </apex:pageBlockSection>
                </apex:pageBlock>

            </div>

            <div id="cancellation_Div" style="display: none;">

                <apex:pageBlock id="cancelPblockId">
                    <apex:pageBlockSection title="Waiver collaborator cancellation reason" collapsible="false" columns="1" id="cancelSectionId">
                        <apex:inputTextArea value="{!wfCancelationReason}" id="wfCId" style="height: 299px; width: 900px;" richText="false" rows="10" disabled="false" />
                    </apex:pageBlockSection>
                </apex:pageBlock>

            </div>
            
            <div id="closecoll_Div" style="display: none;">

                <apex:pageBlock id="closecollPblockId">
                    <apex:pageBlockSection title="Waiver collaborator closure reason" collapsible="false" columns="1" id="closecollSectionId">
                      <b> Please enter the comments to close the collaborator.</b>
                        <apex:inputTextArea value="{!wfCancelationReason}" id="wfCId" style="height: 199px; width: 400px;" richText="false" rows="10" disabled="false" />
                        <apex:inputCheckbox value="{!wfCancelationReason}"/>
                         <b>I agree to set Customer Agree to Fix for the additioanl open rules.</B>
                        </apex:pageBlockSection>
                </apex:pageBlock>

            </div>

            <div id="popup_revertOption" style="display: none;">
                <apex:pageBlock title="Select Revert Stage" id="rvrtblockId">
                    <apex:outputText value="This will Freeze the collaborator status and customer modifications. Superuser will select rules to revert then click on 'Save' button to revert."></apex:outputText>
                    <apex:outputText value=" Please select the Revert Option below, enter Revert comments and click 'Submit' button to start Revert procedure"></apex:outputText>
                    <apex:selectRadio id="selectedRvrt" layout="pageDirection" value="{!revertOption}" style="width:200px" onchange="revertbtn(this)">
                        <apex:selectOptions id="selRdOptnRevert" value="{!RevertOptions}" />
                    </apex:selectRadio>

                    <apex:pageBlockSection title="Waiver collaborator Revert reason" collapsible="false" columns="1" id="rvrtSectionId">
                        <apex:inputTextArea value="{!wfRevertReason}" id="revertId" style="height: 100px; width: 700px;" richText="false" rows="10" disabled="false" />
                    </apex:pageBlockSection>
                </apex:pageBlock>
            </div>
            <!-- SUHAS -->

            <apex:outputLink value="/apex/DWC_superuser?id={!waiverCollaborator.id}" rendered="true" target="_blank" styleClass="btn" style="float: right;text-decoration:none;padding:4px;margin-bottom:5px;margin-top: -15px;"> FAB group subscribe/unsubscribe </apex:outputLink>
            <!-- END OF PROGRESS BAR CREATION COMPONENT -->
            <div style="display:none;" id="collabSectionId"></div>

            <apex:pageBlock id="pblkId">
                <apex:pageMessages />
                
                

                <apex:pageBlockButtons location="top">
                    <apex:outputpanel rendered="{!IF(AND(!waiverCollaborator.Is_releasedToCustomer__c,waiverCollaborator.Is_Sync_with_AIA__c,!isPortalUser,!isRunOnly), true, false)}">
                        <input type="button" class="btn" value="Proceed to customer" title="Release report to customer" onclick="proceedToCustomer();" id="processCustBtnId" />
                    </apex:outputpanel>

                    <apex:commandLink value="Export to PDF" onclick="prmDieFunction();return false;" target="_blank" styleClass="btn" style="text-decoration:none;padding:4px;" />
                   <!--<a href="Windows.OPEN" onclick="prmDieFunction();return false;" target="_blank" styleClass="btn" style="text-decoration:none;padding:4px;">Export to PDF</a>-->

                    <apex:outputpanel rendered="{!IF(OR(waiverCollaborator.Workflow_Status__c == 'Closed',waiverCollaborator.Workflow_Status__c == 'Cancel'), false,true)}">
                        <input type="button" class="btn" value="Job Cancel" title="This will cancel Waiver collaborator and send notification to Mantis and PTSR systems" onclick="CancelWF();" id="btnId2" />
                    </apex:outputpanel>
                    <!-- <input type ="button" value ="RevertStage" class="myButton" onclick="revertStage();"/> -->
                    
                    <!-- <apex:outputpanel rendered="{!!waiverCollaborator.Is_Submit_4_DFM_Apprval__c}"> --> 
                    <apex:outputpanel rendered="{!AND(isStandardUser,isTypeDFM,!isLongFlow,!waiverCollaborator.Is_Submit_4_DFM_Apprval__c)}" >
                        <input type="button" class="btn" onclick="submitForApproval();" value="Submit for approval" title="Attach waiver file and sumbit to design waiver team for approval" id="theApprovalButton" />
                    </apex:outputpanel>
                    &nbsp;&nbsp;
                    <apex:outputpanel rendered="{!isPortalUser}">
                    <a href="{!$label.DRC_Help_Link}" target="_blank" style="margin-left:150px">
                        <span class="helpLink" style="font-size: 11px">User Guide</span>
                    </a>
                    &nbsp;&nbsp;
                    </apex:outputpanel>

                    <apex:outputpanel rendered="{!!isPortalUser}">
                        <a href="{!$label.DRC_UserGuide}" target="_blank" style="margin-top:-25px;text-align:top">
                            <span class="helpLink" style="font-size: 11px">User Guide(Internal)</span>
                        </a>&nbsp;&nbsp;

                    </apex:outputpanel>
                    <apex:outputpanel rendered="true">
                        <a href="{!$label.Collaborator_User_Group}" target="_blank" style="margin-top:-25px;text-align:top">
                            <span class="helpLink" style="font-size: 11px">Help for DWC</span>
                        </a>

                    </apex:outputpanel>
                </apex:pageBlockButtons>

                <apex:pageMessages />
                <br/>
                <apex:pageBlockSection title="Waiver collaborator Details">
                    <!-- <apex:repeat value="{!$ObjectType.Wavier_Collaborator__c.FieldSets.DFM_Custome_View}" var="f">
                        <apex:outputField value="{!waiverCollaborator[f.fieldPath]}" rendered="{!f.fieldPath!='Is_Sync_with_AIA__c' && f.fieldPath!='Workflow_Status__c' && f.fieldPath!='IsGfAcceptsRisk__c' && f.fieldPath!='DFMServiceOption__c' && f.fieldPath!='Mask_Set_Title_ID__c' && f.fieldPath!='Mask_Set_Title__c' && f.fieldPath!='DFM_Design_Type__c'}"/>                    
                        <apex:outputField value="{!waiverCollaborator[f.fieldPath]}"  rendered="{!(f.fieldPath=='DFMServiceOption__c' || f.fieldPath=='DFM_Design_Type__c')}"/>  
                        <apex:outputField value="{!waiverCollaborator[f.fieldPath]}"  rendered="{!(f.fieldPath=='Mask_Set_Title_ID__c')}"/>  
                        <apex:outputField value="{!waiverCollaborator[f.fieldPath]}"  rendered="{!(f.fieldPath=='Mask_Set_Title__c')}"/>  
                    </apex:repeat> -->
                    <apex:outputfield value="{!waiverCollaborator.Name}" />
                    <!-- <apex:outputfield value="{!waiverCollaborator.PTSR_Number__c}" /> -->
                    <apex:pageblocksectionitem >
                        <apex:outputlabel value="PTSR Number" /> 
                        <apex:outputLink value="{!PtsrLink}">{!waiverCollaborator.PTSR_Number__c}</apex:outputLink>
                    </apex:pageblocksectionitem>
                    
                    <apex:outputfield value="{!waiverCollaborator.PTSR_Service_Type__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Waiver_Status__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Account__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Progressbar_staus__c}" />
                    <!-- <apex:outputfield value="{!waiverCollaborator.CRMDID__c}" /> -->

                    <apex:pageblocksectionitem >
                        <apex:outputlabel value="CRM DID" />
                        <apex:outputLink value="/{!waiverCollaborator.CRM_Device__c}">{!waiverCollaborator.CRMDID__c }</apex:outputLink>
                    </apex:pageblocksectionitem>

                    <apex:outputfield value="{!waiverCollaborator.Mask_Set_Title_ID__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Process_ID__c}" />

                    <apex:outputfield value="{!waiverCollaborator.Tech_Geo__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Design_Rule_Main_Spec__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Design_Rule_Main_Rev__c}" />

                    <apex:outputfield value="{!waiverCollaborator.Design_Rule_Addendum_Spec__c}" rendered="{! AND(waiverCollaborator.Design_Rule_Addendum_Spec__c<>null, waiverCollaborator.Design_Rule_Addendum_Spec__c!='NIL', waiverCollaborator.Design_Rule_Addendum_Spec__c!='-')}" />
                    <apex:outputfield value="{!waiverCollaborator.Design_Rule_Addendum_Ver__c}" rendered="{! AND(waiverCollaborator.Design_Rule_Addendum_Spec__c<>null, waiverCollaborator.Design_Rule_Addendum_Spec__c!='NIL', waiverCollaborator.Design_Rule_Addendum_Spec__c!='-')}"  />
                    <apex:pageblocksectionitem >
                     <apex:outputlabel value="D1 National Access Allowed" />
                    <apex:outputtext value="{!if(waiverCollaborator.D1_National__c=='true','Yes','No')}" /> 
                    </apex:pageblocksectionitem>
                    <apex:outputfield value="{!waiverCollaborator.Layout_Type__c}" rendered="{!isTypeDRC}" />
                    <apex:pageblocksectionitem >
                    <apex:outputlabel value="Secure Device" />
                    <apex:outputtext value="{!if(waiverCollaborator.Secure_Device__c=='true','Yes','No')}" />
                    </apex:pageblocksectionitem>
                    <apex:outputfield value="{!waiverCollaborator.Other_Layout_Type__c}" rendered="{!if(isTypeDRC,waiverCollaborator.Layout_Type__c=='Other',false)}" />
                    <apex:outputfield value="{!waiverCollaborator.Metal_Stacks__c}" rendered="{!isTypeDFM}" />
                    <apex:outputfield value="{!waiverCollaborator.CRM_Device__c}" />                   
                    
                    <apex:outputfield value="{!waiverCollaborator.DFMServiceOption__c}" rendered="{!isTypeDFM}" />
                   <!-- <apex:outputfield value="{!waiverCollaborator.CRM_Device__c}" /> -->
                    <apex:outputfield value="{!waiverCollaborator.Layout_Source__c}" rendered="{!isTypeDRC}" />
                    <apex:outputfield value="{!waiverCollaborator.DFM_Design_Type__c}" rendered="{!isTypeDFM}" />
                    <apex:outputfield value="{!waiverCollaborator.Tech_Type__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Other_Layout_Source__c}" rendered="{!if(isTypeDRC,waiverCollaborator.Layout_Source__c=='Other',false)}" />
                    <apex:pageBlockSectionItem rendered="{!isTypeDFM}">
                        <apex:outputLabel value="DFM Service Type" />
                        <apex:outputPanel >
                            <apex:inputCheckbox label="chk1" id="chk1" disabled="true" value="{!waiverCollaborator.DFM_Service_DRCPLUS__c}" />
                            <apex:outputText value="{!$objecttype.Wavier_Collaborator__c.fields.DFM_Service_DRCPLUS__c.label}" style="vertical-align: middle;" />
                            <br/>
                            <apex:inputCheckbox label="chk2" disabled="true" value="{!waiverCollaborator.DFM_Service_MCDMAS__c}" />
                            <apex:outputText value="{!$objecttype.Wavier_Collaborator__c.fields.DFM_Service_MCDMAS__c.label}" />
                            <br/>
                            <apex:inputCheckbox label="chk3" disabled="true" value="{!waiverCollaborator.CMP__c}" />
                            <apex:outputText value="{!$objecttype.Wavier_Collaborator__c.fields.CMP__c.label}" />
                            <br/>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>
                    <apex:outputfield value="{!waiverCollaborator.FAB__c}" />
                    <apex:outputfield value="{!waiverCollaborator.Tapeout_Layers__c}" style="page-break-after: always; page-break-before:always;page-break-inside:always;" rendered="{!isTypeDRC}" />
                   
                    <apex:pageblocksectionitem rendered="{!isTypeDFM}" >
                    <apex:outputlabel value="Expected DFM Review Completion Date" />
                    <apex:outputtext value="{!myDate}" />
                    
                    </apex:pageblocksectionitem>
                    <!-- <apex:outputlabel value="Expected DFM Review Completion Date" />
                    <apex:outputText value="string: {0,date,yyyy.MM.dd G 'at' HH:mm:ss z}"> 
                    <apex:param value="{!expectedDate}" /> 
                    </apex:outputText>
                     -->
                    <apex:outputfield value="{!waiverCollaborator.Top_Cell_Name__c}" rendered="{!!waiverCollaborator.isMulti__c}" />
                    
                    <apex:outputfield value="{!waiverCollaborator.Prime_Die__c}" rendered="{!!waiverCollaborator.isMulti__c}" />
                    
                    
                    
                    <!-- <apex:outputfield value="{!waiverCollaborator.Submitted_By_Shortname__c}" /> -->
                    <apex:outputfield value="{!waiverCollaborator.File_Name__c}" rendered="{!!waiverCollaborator.isMulti__c}"/>

                    <apex:outputfield value="{!waiverCollaborator.File_Size__c}" rendered="{!!waiverCollaborator.isMulti__c}"/>
                    <apex:outputfield value="{!waiverCollaborator.DRCServiceoption__c}" rendered="{!isTypeDRC}"/>
                    <apex:outputfield value="{!waiverCollaborator.Additional_Comment__c}" rendered="{!isTypeDRC}"/>
                    <apex:pageblocksectionitem >
                    <apex:outputlabel value="Submitted By" />
                    <apex:outputtext value="{!submittedBy}" />
                    
                    </apex:pageblocksectionitem>



                    <!--  <apex:outputfield value="{!waiverCollaborator.DFM_Service_DRCPLUS__c}" rendered="{!isTypeDFM}" />
                    <apex:outputfield value="{!waiverCollaborator.DFM_Service_MCDMAS__c}" rendered="{!isTypeDFM}" />
                    -->



                    <!-- <apex:pageblockSectionItem datastyle="page-break-after: always;" rendered="{!isTypeDRC}"> -->



                    <!--  </apex:pageblockSectionItem> -->


                </apex:pageBlockSection>
                
                <apex:outputpanel rendered="{!IF(AND(waiverCollaborator.Is_Sync_with_AIA__c,isTypeDRC),true,false)}" id="NonMatchsectionID" layout="none">
                <div class="pbSubheader brandTertiaryBgr tertiaryPalette">
                <img src="/img/s.gif" alt="Hide Section -Non-Match Rules " class="hideListButton"  name="Mass Update" onclick="$('.nonMatchRule').toggle();" 
                onkeypress="if (event.keyCode=='13')twistSection(this);" style="cursor:pointer;" tabindex="0" title="Hide Section - Non-Match Rules"/>
                <h3>Non-Match Rules (PTSR DRC review requested rules not found in DRC results)</h3></div>
             
              <b>  <font id ="nonmatchruleID" color="Orange"> No non-match rule found.</font></b>
              <b>  <font color="Orange" id="warningForNonMatchID"> Warning: Rule entered at PTSR DRC Rule Violation section not found in DRC result. Please check the PTSR DRC Rule Violation entry. </font></b> <br/><br/>
                 <div class="nonMatchRule" id="NonMatchTableID">
                
                            <table class="table table-striped table-bordered dt-responsive" id="NonMatchRulesID"  cellspacing="1" style="width: 100%;margin-left: 0px;" >

                                <thead id="headID">

                                </thead>

                                <tbody>

                                </tbody>


                            </table>
                  </div>
                </apex:outputpanel>
                
                <apex:pageblocksection title="Review Summary" columns="1" rendered="{! !waiverCollaborator.Is_Sync_with_AIA__c &&  (isLongFlow || isTypeDRC )}">

                    <apex:outputpanel >
                        <b>Task Message :</b>
                        <br/>
                        <apex:outputpanel rendered="{!waiverCollaborator.Progressbar_staus__c !='Review_Disposition'}">
                            <apex:outputText value="Execution is in progress. No action is required from customer yet." escape="false" />
                        </apex:outputpanel>
                        <apex:outputpanel rendered="{!waiverCollaborator.Progressbar_staus__c =='Review_Disposition' && isTypeDFM}">
                            <apex:outputText value="DFM review result will be available after foundry review. No action is required from customer yet." escape="false" />
                        </apex:outputpanel>
                        <apex:outputpanel rendered="{!waiverCollaborator.Progressbar_staus__c =='Review_Disposition' && isTypeDRC}">
                            <apex:outputText value="DRC review result will be available after foundry review. No action is required from customer yet." escape="false" />
                        </apex:outputpanel>
                        <div></div>
                        <br/>
                
                    </apex:outputpanel>
                </apex:pageblocksection>
                
                <apex:outputpanel rendered="{!IF(AND(waiverCollaborator.Is_Sync_with_AIA__c),true,false)}" id="reviewSectionId" layout="none">
                
                <div class="pbSubheader brandTertiaryBgr tertiaryPalette" >
                <img src="/img/s.gif" alt="Hide Section - Review Summary Section" class="hideListButton"  name="Mass Update" onclick="$('.Reviewsummary').toggle();" 
                onkeypress="if (event.keyCode=='13')twistSection(this);" style="cursor:pointer;" tabindex="0" title="Hide Section - Review Summary Section"/>
                <h3>Review Summary Section</h3></div>
               <b> Task Message: </b> <br/> 
                        <apex:outputText id="theTaskMsg" value="Task Message" />
                        <div id="SummaryID">
                        <div class="Reviewsummary">
                            <table class="table table-striped table-bordered dt-responsive nowrap" id="summaryTable"  cellspacing="0">

                                <thead>

                                </thead>

                                <tbody>

                                </tbody>


                            </table>
                        </div>
                        <br/>  
                 <apex:outputpanel rendered="{!isRunOnly}">
                            <apex:outputText value="-: Referring to final status of the result flagged for DRC Service Option=<b>DRC Run Only </b> and <b>no review is required.</b> " escape="false" />
                 </apex:outputpanel>        
                  
                <apex:outputpanel rendered="{!!isRunOnly}">
               <div><b> OPEN:</b> Referring to rule violations which are still pending for the customer option selection or pending for a collaboration closure with the customer This includes violations with status <b> Initial Failed Design (iFD)</b> and <b> Failed Design, Customer to check (FCC).</b></div> 
              
               <br/>   
             <b>Disclaimers :</b>  
                    <br/>
               <div>1. Foundry waivers (if any) are granted as per the policy detailed in the Tapeout Requirement <a href="{!$Label.DWC_OPEN_TEXT_URL}" target="_blank">Document.</a> </div>
                      
                <apex:outputpanel rendered="{!isTypeDFM}" >
               <div>2. If waiver(s) is not granted by the Foundry, the customer will have an option to fix or agree to let the Foundry perform DFM analysis. Customer acknowledges that this DFM analysis will add additional cycle time to fab out. If the violations cannot be waived, the customer will assume all liability. Otherwise the tape out may be rejected. The customer should work with their Foundry account team for these exceptional cases.</div>
               <div>3. By selecting the option of Customer Agrees to Take Risk, it is meaning that Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations.</div>
               </apex:outputpanel>
               <apex:outputpanel rendered="{!isTypeDRC}" >
                    <div>2. If waiver(s) is not granted by the Foundry, the customer will either have an option to fix or the customer can assume all liability. Otherwise the tape out may be rejected. The customer should work with their Foundry account team for these exceptional cases.</div>
              
              <div>3. Rules with PI (Pass Ignore) are violated for DRC but have not been asked for review in this request. The Foundry expectation is that these violations are absent in the final tapeout design or requested for review in a separate waiver request.</div>
              <div>4. By selecting the option of Customer Agrees to Take Risk, it is meaning that Customer wants the device to proceed for manufacturing and accepts risk liability due to the unfixed violations.</div>      
                    </apex:outputpanel>
                     </apex:outputpanel>    
                </div>
                </apex:outputpanel>
                
                
                <apex:pageBlockSection title="Mass Approval" rendered="{!IF(AND(waiverCollaborator.Is_Sync_with_AIA__c, !isPortalUser, isGroup,!isRunOnly),true,false)}" columns="4" id="massApprovalBlock">
                    <div id="divId" class="myBorder" style="margin-top:5px;width:1500px;">
                        <table>
                            <tr>
                                <td>
                                    <div>
                                        <label style="align-top">Tier 2 Options :</label>
                                        <apex:outputPanel >
                                            <input type="radio" name="massapproval" onchange="setMassApproval(this.value);" value="ApproveAll" /> Approve All
                                            <br></br>
                                            <input type="radio" name="massapproval" onchange="setMassApproval(this.value);" value="RejectAll" /> Reject All
                                            <br></br>
                                        </apex:outputPanel>
                                    </div>
                                </td>
                                <td style="margin-left:100px;">
                                    <div>
                                        <label style="align-top">Tier 2 Explaination :</label>
                                        <textarea name="textarea" cols="25" rows="7" style="width:150px;height:30px;white-space:nowrap;" id="massCommentId2">
                                        </textarea>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <apex:outputpanel >
                                            <input type="button" value="Apply" Id="applymassapprov" class="myButton" style="margin-left:3px;vertical-align:top;" onclick="applyMassappCommentJs();" />
                                        </apex:outputpanel>
                                    </div>
                                </td>
                                <td>
                                   
                                </td>

                            </tr>
                        </table>

                    </div>
                </apex:pageBlockSection>
                <div id="massUpdateID">
                <apex:pageBlockSection id="pbsec2"  title="Mass Update" columns="2" rendered="{!IF(AND(OR(isFAE,isPortalUser,isSuperUser),waiverCollaborator.Is_Sync_with_AIA__c,waiverCollaborator.Progressbar_staus__c!='Closed',waiverCollaborator.Progressbar_staus__c!='Review_Disposition'), true, false)}">
                    <apex:pageBlockSection id="pbsec3" columns="3">

                        <apex:pageblocksectionitem id="pbseci2" labelStyle="width:30%">
                            <apex:outputlabel for="selectedRdMassUpSec" style="width:150px;height:30px;white-space:nowrap;">
                                <apex:outputpanel rendered="{! isPortalUser}">Customer Option :</apex:outputpanel>
                                <apex:outputpanel rendered="{! Not(isPortalUser)}">FAE Option :</apex:outputpanel>
                            </apex:outputlabel>
                            <apex:selectRadio id="selectedRdMassUpSec" layout="pageDirection" value="{!massRadioOption}" style="width:300px">
                                <apex:selectOptions id="selRdOptn" value="{!Options}" />
                            </apex:selectRadio>
                        </apex:pageblocksectionitem>
                        <apex:pageblocksectionitem labelStyle="width:30%;">
                            <apex:outputlabel for="massCommentId" style="width:150px;height:30px;white-space:nowrap;">
                                <apex:outputpanel rendered="{! isPortalUser}">Customer Closing Explanation :</apex:outputpanel>
                                <apex:outputpanel rendered="{! Not(isPortalUser)}">FAE Closing Explanation :</apex:outputpanel>
                            </apex:outputlabel>
                            <textarea name="textarea" cols="25" rows="7" style="width:250px;height:30px;white-space:nowrap;"  id="massCommentId">
                            </textarea> 
                            <input type="checkbox" Id = "select_all1" onclick="selectAllCheckboxesForOpen(this);"  name="selectAll" style="vertical-align: -3px;margin-left: -2px;margin-top: 12px;" /> 
                            <h>Apply to All Open Rules</h><br></br> <h>(All prime dies,All Rule types)</h> 
                           <br></br> <h style="color:Orange;"> Note: When above checkbox is unchecked, the "Customer Option/Closing Explanation" will be applied to selected rules at Current page.Do select the checkbox when you need to apply to All "Open" rules </h>
                           <br></br> <input type="button" value="Apply" class="myButton" style="margin-left:0px;vertical-align:top;" onclick="applyMassSelectJs();" />                           
                        
                        </apex:pageblocksectionitem>
                        <apex:outputpanel >
                            <!-- <input type="button" value="Apply" class="myButton" style="margin-left:3px;vertical-align:top;" onclick="applyMassSelectJs();" /> -->
                            
                         <!--  <input type="button" value="Apply to all Open rules" class="myButton" style="margin-left:76px;margin-top: -26px;" onclick="applyMassSelectForOpenRulesJs();" /> -->
                        </apex:outputpanel>
                          
                        <apex:outputpanel >
                        
                        </apex:outputpanel>
                    </apex:pageBlockSection>
                </apex:pageBlockSection> 
                </div>
                <apex:outputpanel rendered="{!IF(waiverCollaborator.Is_Sync_with_AIA__c,true,false)}"> 
                <div class="pbSubheader brandTertiaryBgr tertiaryPalette">
                <img src="/img/s.gif" alt="Hide Section - Waiver Rule List" class="hideListButton" id="inputCheckId" name="Mass Update" onclick="$('.waiverRuleList').toggle();" 
                onkeypress="if (event.keyCode=='13')twistSection(this);" style="cursor:pointer;" tabindex="0" title="Hide Section - Waiver Rule List"/>
                <h3>Waiver Rule List</h3></div>
                 <div class="waiverRuleList" style="width:85%;">
                    <apex:outputpanel layout="none">
                        <div id="divId" class="myBorder" style="margin-top:5px; margin-left:15px">

                            <table style="width:50%;padding-left: 25px;">
                                <tr>
                                   
                                    <td>
                                        <div style="padding-right: 131px;">
                                            <b>Search:</b>
                                            <input type="text" id="searchId" class="searchclass" placeholder="Search" style="width:150px;height:18px;" />
                                            <input type="button" value="Search" class="myButton" style="margin-left:205px;margin-top:-18px" onclick="searchRuleData()" />
                                        </div>
                                    </td>
                                    <td>
                                        <div style="margin-top:-2px;margin-left:70px" id="finalStatID">
                                            <b>Final Status:</b>
                                            <select id="finalStatusId" class="finalStatus" onchange='changeFinalStatusJs();'>
                                                <option value="All">
                                                    All
                                                </option>
                                            </select>
                                        </div>
                                    </td>
                                    <td>
                                        <div style="margin-left:95px;">
                                            <b>Prime Die:</b>
                                            <select id="primeDieId" class="primeDie" onchange='changeFinalStatusJs();'>
                                                <option value="All">
                                                    All
                                                </option>
                                            </select>
                                        </div>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                        <div style="margin-top:-2px;margin-left:150px" id="ruleTypedivId">
                                            <b style="margin-left:-85px" >Type of Rules:</b>
                                            <select class="" id="ruleTypeId" onchange="changeRules();">
                                                <option value="All">
                                                    All
                                                </option>
                                                <option value="Mandatory">
                                                    Requested Waiver Rule
                                                </option>
                                                <option value="Additional">
                                                    Non-Requested Waiver Rule
                                                </option>
                                            </select>
                                        </div>
                                    </td>
                                    
                                    
                                    
                                    
                                    
                                </tr>
                                
                                <tr>
                                     <td>
                                    Search includes Rule Name,GF Review Result, GF Review Comments, Closing Comments within the applied filters
                                    
                                    </td>
                                    <td>
                                        <div style="padding-top: 0px;padding-left: 45px;">
                                            <input class="myButton" id="firstId" onclick="first();" title="First" type="button" value="|<<" />
                                            <input class="myButton" id="previousId" onclick="previous();" title="Previous" type="button" value="<" />
                                            <input class="myButton" id="nextId" onclick="next();" title="Next" type="button" value=">" />
                                            <input class="myButton" id="lastId" onclick="last();" title="Last" type="button" value=">>|" />
                                        </div>
                                    </td>
                                   
                                    <td>
                                        <div id="pagingTextDivId" style="color:#ff8930;font-style:italic;font-weight:normal;text-align:right;font-size:100%;padding-top:0px;padding-right:102px;"></div>
                                    </td>
                                    <td>
                                        <div style="color:#ff8930;font-style:italic;font-weight:normal;padding-top:0px;font-size:100%;margin-left:-92px">
                                            <input id="pageNumberId" style="width:20px;height:15px;" type="text" value="" /> Page of
                                            <div id="maxPageId" style="margin-left:70px;margin-top:-17px"></div>
                                            <input class="myButton" onclick="gotoPage(document.getElementById('pageNumberId').value);" style="margin-left:105px;margin-top:-20px" type="button" value="Go" />
                                        </div>
                                    </td>
                                    
                                   <td>
                                    <div class="" id="legendID" style="margin-left:65px;margin-top: 10px;">
                                    <b > Legend: Type </b> <h style="border-style: groove;background-color:#ffffff;" > R </h><h> – Requested Waiver rules </h><br></br> 
                                               <h style="background-color:#ffffb3;margin-left: 80px;border-style: groove;">N </h><h> – Non- Requested Waiver  rules </h>
                                    </div>
                                    </td> 
                                    
                                </tr>
                                <tr>
                                    <td>
                                        <div style="color:#ff8930;font-style:Regular;font-weight:normal;padding-right:3px;font-size:100%;width:300px;">

                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr style="margin-top:5px">
                                    <td></td>
                                    <td>

                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>
                                        <div style="padding-top: 0px;padding-left: 0px;">

                                            <input type="button" id='SaveRules' value="Save Rules" class="myButton" style="margin-left:5px" onclick="validateSavedData();location.href=location.href;" />
                                            <input type="button" id='SubmitRules' value="Save & Submit Rules" class="myButton" style="margin-left:5px" onclick="validateSubmitData();" />
                                        </div>
                                    </td>
                                    
                                    <td>
                                        <div style="padding-top: 0px;margin-left: -156px;">
                                            <input type="button" id='discardId' value="Discard" class="myButton" onclick="discardJS();"  />
                                            <input type="button" id="revertBtnId" value="Revert" title="This will Freeze the collaborator status and customer modifications. Click Ok button to start Revert procedure: superuser select rules to revert then click on Save button to submit the revert." class="myButton" onClick="revertStage();" />

                                        </div>
                                    </td>
                                    <td>
                                        <div style="padding-top: 0px; margin-left: -228px">
                                            <input type="button" id='SubmitApprovalDecision' value="Submit TIER-2 Decision" class="myButton" style="margin-left:5px;" onclick="saveApprovalData();" />
                                            <input type="button" value="Re-Assign" Id="reassignAll" class="myButton" style="margin-left:0px;vertical-align:top;" onclick="finalsubmit();" />
                                            <input type="button" id="submitRevertBtnId" value="Submit Reverted Rules to Mantis" class="myButton" onClick="submitRevertStagePop();" />
                                         
                                        </div>
                                        
                                    </td>
                                    <td>
                                        <div style="padding-top: 0px;margin-left:95px;">
                                            <input type="button" id='ApprovalDecision' value="Approve All" class="myButton" style="margin-left:-90px;" onclick="approveAllRules();" />

                                            <input type="button" id='RejectDecision' value="Reject All" class="myButton" style="margin-left:5px" onclick="rejectAllRules();" />
                                        </div>
                                    </td>
                                    
                                     <td>
                                        <div class="" id="" style="margin-left:300px;">
                                            <label><b style="margin-left:-100px">Show</b>
                                                <select class="" id="pageSizeId" onchange="changePageSize(this.value);">
                                                    <option value="10">
                                                        10
                                                    </option>
                                                    <option value="25">
                                                        25
                                                    </option>
                                                    <option value="50">
                                                        50
                                                    </option>
                                                    <option value="100">
                                                        100
                                                    </option>
                                                </select> entries</label>
                                        </div>
                                    </td>
                                    
                                </tr>
                               
                                <tr id="emptyMandatory">
                                    <td style="color:#FF0000">
                                    
                                   No Requested Waiver Rules found for this PTSR.
                                    </td>
                                </tr>
                              <!--   <tr>
                                    <td>
                                    </td>
                                   <td>
                                        <div style="padding-top: 15px;padding-left: 25px;">
                                            <input type="button" id='ApprovalDecision' value="Approve All" class="myButton" style="margin-left:5px;" onclick="approveAllRules();" />

                                            <input type="button" id='RejectDecision' value="Reject All" class="myButton" style="margin-left:5px" onclick="rejectAllRules();" />
                                        </div>
                                    </td>

                                    <td>
                                        <div style="padding-top: 15px;padding-left: 25px;">
                                           <input type="button" id="submitRevertBtnId" value="Submit Reverted Rules to Mantis" class="myButton" onClick="submitRevertStagePop();" /> 
                                        </div>
                                    </td>
                                </tr>-->
                            </table>


                        </div>
                    </apex:outputpanel>
                    
                    <apex:outputpanel layout="none" id="ruleList">
                        <div>

                            <table  class="table table-striped table-bordered dt-responsive"  cellspacing="0" cellpadding="0" id="ruleList" >
                                <thead>

                                </thead>
                                <tbody>

                                </tbody>


                            </table>

                        </div>
                    </apex:outputpanel>
                    </div>
                </apex:outputpanel>

                

            </apex:pageBlock>
            <div class="loading loading2">Loading&#8230;</div>
            <div id="imgPanel">

            </div>
            <table id="excelDataTable" border="1">
            </table>

        </div>
        <div id="popup_div1" style="display: none;">
            <apex:pageBlock id="thePageBlock">
                <apex:pagemessages />
                <apex:repeat value="{!customerDetails}" var="customerLst" id="customerDiv">
                    <p style="color:#ff8930">Note: Customer selection is enabled when "PTRF" flag under his/her access setup is ticked.
                        <br/> To enable customer for selection, click on "Enable" button.</p>
                    <apex:pageBlockTable value="{!customerLst}" var="cust" id="thePageTable">

                        <apex:column >

                            <apex:facet name="header">
                                <apex:inputCheckbox onclick="selectAllCheckboxes1();" styleClass="theCheckParent">
                                </apex:inputCheckbox>
                            </apex:facet>

                            <apex:outputpanel layout="none" rendered="{!(cust.isPTRFUser)}">
                                <apex:inputCheckbox value="{!cust.isSelected}" onClick="setCustomerUserIds('{!cust.userRecord.id}',this);" styleClass="{!cust.userRecord.Id} theCheckBox" />
                            </apex:outputpanel>
                            <apex:outputpanel layout="none" rendered="{!NOT(cust.isPTRFUser)}">
                                <apex:inputCheckbox value="{!cust.isSelected}" disabled="true" onClick="setCustomerUserIds('{!cust.userRecord.id}',this);" styleClass="{!cust.userRecord.Id} theCheckBox" />
                            </apex:outputpanel>
                        </apex:column>
                        <apex:column headerValue="Name">
                            <apex:outputText value="{!cust.userRecord.Name}" />
                        </apex:column>
                        <apex:column headerValue="Email">
                            <apex:outputText value="{!cust.userRecord.Email}" />
                        </apex:column>

                        <apex:column headerValue="Enable Service/Tapeout Access">
                            <apex:outputpanel rendered="{!NOT(cust.isPTRFUser)}">
                                <input onclick="enableAccess('{!cust.portAccRecId}','{!collaboratorAccount}');" type="button" value="Enable" /> </apex:outputpanel>
                        </apex:column>
                    </apex:pageBlockTable>
                </apex:repeat>
            </apex:pageBlock>
        </div>
        <apex:actionFunction name="enableAccess" action="{!createAccessSetupRecord}" reRender="thePageBlock" status="LoadingStatusSpinner">
            <apex:param name="portalRecId" assignTo="{!accessSetupId}" value="" />
            <apex:param name="collAccount" assignTo="{!collaboratorAccount}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="prDieActFunction" action="{!pdfDownload}" reRender="prDieId">
            <apex:param name="primeDieVal" assignTo="{!primeDieValue}" value="" />            
        </apex:actionFunction>
        <apex:outputPanel id="prDieId"></apex:outputPanel>
        <apex:actionFunction name="releaseToCustomerFunc" action="{!releaseToCustomer}" reRender="myPanel" status="LoadingStatusSpinner" oncomplete="$('#processCustBtnId').hide();location.reload();">
            <apex:param name="Param1" assignTo="{!hiddenUsrIds}" value="" />
            <apex:param name="Param2" assignTo="{!statusValues}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="cancel" action="{!cancelWorkflow}" reRender="myPanel" status="LoadingStatusSpinner">
            <apex:param name="CReasonParam" assignTo="{!wfCancelationReason}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="submitBtnFunc" action="{!setAMUsers}" reRender="myPanel" status="LoadingStatusSpinner">
            <apex:param name="Param1" assignTo="{!hiddenAMsIds}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="reloadpg" action="{!reload}"/>

        <apex:pageBlock title="DWC Attachments">
            <apex:pageBlockTable value="{!dwcAttachments}" var="attach">
                <apex:column headerValue="File Name">
                    <apex:outputpanel rendered="true">
                        <a href="{!$Label.DWCAttachment}{!attach.Reference__c}" target="_blank" style="margin-top:-25px;text-align:top">
                            <span class="helpLink" style="font-size: 11px">{!attach.File_Name__c}</span>
                        </a>&nbsp;&nbsp;
                    </apex:outputpanel>
                </apex:column>

                <apex:column headerValue="Format">
                    <apex:outputText value="{!attach.Content_Type__c}" />
                </apex:column>

                <apex:column headerValue="Attach To">
                    <apex:outputText value="{!attach.Attach_To__c}" />
                </apex:column>

                <apex:column headerValue="File Size">
                    <apex:outputText value="{!attach.File_Size__c}" />
                </apex:column>

                <apex:column headerValue="Created Date">
                    <apex:outputText value="{!attach.CreatedDate__c}"/>
                        <!-- <apex:param value="{!attach.CreatedDate__c}" /> -->
                    <!-- </apex:outputText> -->
                </apex:column>

                <apex:column headerValue="Created By">
                    <apex:outputText value="{!attach.Created_By__c}" />
                </apex:column>

            </apex:pageBlockTable>
        </apex:pageBlock>

        <apex:pageBlock title="Chip details">
            <apex:pageBlockTable value="{!lst_Chips}" var="chip">
                <!-- 
                 <apex:column headerValue="Title">
                    <apex:outputLink value="/{!chip.id}" target="_blank">{!chip.Name}</apex:outputLink>
                 </apex:column>
                -->
                <apex:column headerValue="Chip Name">
                    <apex:outputText value="{!chip.Chip_Name__c}" />
                </apex:column>
                
               <apex:column headerValue="Top Cell Name">
                    <apex:outputText value="{!chip.Top_Cell_Name__c}" />
                </apex:column>               

                <apex:column headerValue="Chip Size X">
                    <apex:outputText value="{!chip.Chip_Size_X__c}" />
                </apex:column>

                <apex:column headerValue="Chip Size Y">
                    <apex:outputText value="{!chip.Chip_Size_Y__c}" />
                </apex:column>

                <apex:column headerValue="Database Name">
                    <apex:outputText value="{!chip.Database_Name__c}" />
                </apex:column>

                <apex:column headerValue="Database Size">
                    <apex:outputText value="{!chip.Database_Size__c}" />
                </apex:column>

                <apex:column headerValue="Md5Sum">
                    <apex:outputText value="{!chip.Md5Sum__c}" />
                </apex:column>

                <apex:column headerValue="DRCPLUS Comments"  rendered="{!isTypeDFM}" >
                    <apex:outputText value="{!chip.PrimeDieComments1__c}" />
                </apex:column>
                
                <apex:column headerValue="MAS/MCD Comments"  rendered="{!isTypeDFM}">
                    <apex:outputText value="{!chip.PrimeDieComments2__c}" />
                </apex:column>
                
                <apex:column headerValue="PDKDRC Comments"  rendered="{!isTypeDRC}">
                    <apex:outputText value="{!chip.PrimeDieComments1__c}" />
                </apex:column>

                <apex:column headerValue="Source PTSR Number">
                    <apex:outputText value="{!chip.Source_PTSR_Number__c}" />
                </apex:column>         
            </apex:pageBlockTable>
        </apex:pageBlock>


    </apex:form>
    <apex:relatedList list="ProcessSteps" id="processId" rendered="{!AND(isStandardUser,isTypeDFM,!isLongFlow)}"/>
    <!-- DFM Merging section to show attachment and approval process section -->
    <apex:relatedList subject="{!Wavier_Collaborator__c}" list="CombinedAttachments" rendered="{!AND(isTypeDFM,!isLongFlow)}" id="attachmentId" />

    <!-- <apex:relatedList subject="{!Wavier_Collaborator__c}" list="ActivityHistories" rendered="{!IF(AND(!isPortalUser),true,false)}" /> -->
    <apex:outputPanel rendered="{!IF(AND(!isPortalUser),true,false)}">
        <c:GenericHistoryComponent Object="{!Wavier_Collaborator__c}" Limit="20" />
    </apex:outputPanel>

</apex:page>