<!-- 
   Type Name:  BugSearch.page
   Author: Cognizant 
   Created Date: 03/31/2014
   Reason: 
   Change History:
   Author: 
   Modified Date: 
   Reason: 
    -->
<apex:page standardController="Bug__c" extensions="BugSearch" action="{!buildQueryforFilters}" readOnly="true" id="pg" ShowChat="false"
   Cache="false" sidebar="true">
   <apex:sectionHeader title="Bug Search" />
   <apex:outputLabel id="pnl1" value="Applicable for Bug Record Only (CAD, CDT, PDK,Simulation and Legacy Bug)." style="color:blue" />
   <style type="text/css"> 
      .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      }
      .UserLookupCell > select{
      display:none !important;
      }
      .test{
      text-align:top;
      }
   </style>  
   <apex:form id="frm">
   <script>   
      function testOpenSubtab(url)
      {            
          if (sforce.console.isInConsole()) { 
              srcUp(url); 
          } 
          else { 
              var win = window.open(url, '_blank');
              win.focus();
          }          
      }     
     
   </script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js" />
<script src="/soap/ajax/15.0/connection.js" type="text/javascript"></script>
<script src="/soap/ajax/15.0/apex.js" type="text/javascript"></script>
<script src="../static/102010/js/picklist.js"></script>
<script>
if(typeof jQuery != 'undefined'){
           $j =jQuery.noConflict();
    }
//get a session id token to use the js libs
sforce.connection.sessionId = "{!$Api.Session_ID}";
//describe the object we are dealing with. You'll need to change this to whatever object you are working with. Use the API name of the object.'
var describeResults = sforce.connection.describeSObject('bug__C'); // the object we want picklists from
var controllerSelected ='';
var dependentSelected = ''; 
// function to get the picklist values of a field. Finds all potential options. Simple pass it in a field id. Will return object with data in the values key.
function getPicklistValues(field) 
{
    //create return object 
    var returnObj = new returnObject();   
    try
    {
        var validField = false;
        for(var i = 0; i < describeResults.fields.length; i++) 
        {
            var fieldList = describeResults.fields[i];
            var fieldName = fieldList.name;    
            if(fieldName.toLowerCase() == field.toLowerCase())
            {
                validField = true;
                for(var j = 0; j < fieldList.picklistValues.length; j++)
                {                  
                    var newValue = new Object();
                    newValue.label = fieldList.picklistValues[j].label;
                    newValue.value = fieldList.picklistValues[j].value;
                    newValue.default = fieldList.picklistValues[j].defaultValue;
                    if(fieldList.picklistValues[j].hasOwnProperty('validFor'))
                    {
                        newValue.validFor = fieldList.picklistValues[j].validFor;
                    }
                    returnObj.values.push(newValue);
                }
                break;
            }
        }
        if(!validField)
        {
            throw 'Invalid field '+field+' specified for object ' + params.object;
        }
    }
    catch(exception)
    {
        returnObj.message = exception;
        returnObj.success = false;
    }        
    
    return returnObj;
}

function getDependentValues(field, value) 
{
    var returnObj = new returnObject();
    try
    {     
        var dependencyCode = new Array();          
        var getValues = getPicklistValues(field);                  
        if(!getValues.success)
        {
            throw getValues.message;
        }
        var picklistValues =  getValues.values;
         
        var getController = getControllerName(field);
                
        if(!getController.success)
        {
            throw getController.message;
        }              
        var controller = getController.values;
            
        // sub function to do the validFor test
        function isDependentValue(index, validFor)
        {
            var base64 = new sforce.Base64Binary("");
            var decoded = base64.decode(validFor);
            var bits = decoded.charCodeAt(index>>3);
            
            return ((bits & (0x80 >> (index%8))) != 0);
        }
        var controllerFields =getPicklistValues(controller);                  
        for(var item = 0; item < controllerFields.values.length; item++)
        {         
            if(controllerFields.values[item].value.toLowerCase() == value.toLowerCase())
             {
                for(var i = 0; i < picklistValues.length; i++)
                {
                    if(isDependentValue(item, picklistValues[i].validFor))
                    {
                        var newValue = new Object();
                        newValue.label = picklistValues[i].label;
                        newValue.value = picklistValues[i].value;
                        newValue.default = picklistValues[i].defaultValue;
                        newValue.validFor = picklistValues[i].validFor;
                        newValue.validForName =controllerFields.values[item].value;
                        returnObj.values.push(newValue);                                                               
                    }
                }
            }
        }
    }

    catch(exception)
    {
        returnObj.success = false;
        returnObj.message = exception;
    }
    return returnObj;        
}

// get the controller field name
function getControllerName(field) 
{
    var returnObj = new returnObject();
    
    try
    {
        var isValid = false;       
        for(var i = 0; i < describeResults.fields.length; i++)
        {
            var fieldList = describeResults.fields[i];
            var fieldName = fieldList.name;
    
            if(fieldName.toLowerCase() == field.toLowerCase())
            {
                if(fieldList.controllerName == undefined)
                {
                    throw 'Field has no controller';
                }
                else
                {
                    returnObj.values = fieldList.controllerName;
                    isValid = true;
                }
                break;
            }
        }
        
        if(!isValid)
        {
            throw 'Invalid field '+field+' specified';
        }
    }
    catch(exception)
    {
        returnObj.success = false;
        returnObj.message = exception;
    }
    return  returnObj;
}

function returnObject()
{
    this.success = true;
    this.message = 'Operation Ran Successfully';
    this.values = new Array();
}

function setPickVals(field,optionsArray)
{
        var options = '';
         for(var i = 0; i < optionsArray.length; i++)
         {
             options += '<option value="'+optionsArray[i].value+'">'+optionsArray[i].label+'</option>';
         }         
         $j(field).html(options);
}

$j(document).ready(function() {

    $j('.select').each(function(i)
    {
        var thisFieldId = $j(this).attr('id');
        var controller =  getControllerName(thisFieldId);               
         //if this field is a controlled field (has a controller, then find an onchange handler to its parent)
         if(controller.success)
         {
             var currValues = getPicklistValues(thisFieldId);              
             setPickVals('#'+thisFieldId,currValues.values);                           
             $j('#'+controller.values).change(function(data){  
             controllerSelected = '';
             dependentSelected = '';
             var t = document.getElementById("Product_Technology__c").selectedOptions;
             var arr = new Array();
             var finalValue = new Array();
             for(var i=0; i<t.length;i++)
                            {
                               var val = getDependentValues(thisFieldId,t[i].value).values;
                               for(var j=0; j<val.length; j++){                                                                     
                                   if(finalValue.indexOf(val[j].value) == -1){
                                       finalValue.push(val[j].value);
                                       arr.push(val[j]);
                                    }                                      
                               } 
                                if(controllerSelected == '')
                                    controllerSelected += t[i].value;
                                else 
                                    controllerSelected += ',' +t[i].value;                                                             
                            }                               
                console.log('controllerSelected '+controllerSelected);
               // var values = getDependentValues(thisFieldId, this.value); 
                setPickVals('#'+thisFieldId,arr);
                //sendValues(controllerSelected,dependentSelected);  
             });                                    
         }        
         else
         {
              values = getPicklistValues(thisFieldId);
              setPickVals('#'+thisFieldId,  values.values);
         }                
         $j('#Component__c').change(function(data){  
             dependentSelected ='';
             var t = document.getElementById("Component__c").selectedOptions;
             var arr = '';
             
            for(var i=0; i<t.length;i++)
                            {                               
                                if(dependentSelected== '')
                                    dependentSelected+= t[i].value;
                                else{
                                if(dependentSelected.indexOf(t[i].value) == -1)
                                    dependentSelected+= ',' +t[i].value;  
                                    }                      
                            } 
                
                console.log('dependentSelected'+dependentSelected);
               // var values = getDependentValues(thisFieldId, this.value); 
              // sendValues(controllerSelected,dependentSelected);  
             });             
    });            
});
function sendValue(){
        sendValues(controllerSelected,dependentSelected); 
}
</script> 
   <apex:actionFunction name="sendValues" action="{!buildQueryforFilters}" reRender="tbl,frm" status="prstatus">
        <apex:param name="firstParam" value="" assignTo="{!stproduct}" />
        <apex:param name="controlingField" value="" assignTo="{!stcomponent}"/> 
        <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="false"/> 
    </apex:actionFunction>
   <apex:actionFunction name="resetTab" action="{!resetTab}"  reRender="sfilters,prid,bugCls,compId,Version,tbl,tb2,bgOwner,relatedDMM,bgCreatedby,bgOwner1,statusid,bugtitleid" />
    
   <div id="blockbckanim" style="display:none">
<img id="apimgld" style="" src="{!$Resource.processing}" />
</div>
       <apex:actionStatus id="processingStatus" onStart="ShowLoading();" onstop="HideLoading();" />
      <apex:tabPanel width="100%" height="100%" switchType="client" selectedTab="tabdetails" id="pnlBasicSearch" tabClass="activeTab" inactiveTabClass="inactiveTab">
         <apex:tab label="Basic Bug Search" name="myBasicSearch" id="tabmyBasicSearch" ontabenter="resetTab();">
            <apex:outputPanel layout="block" style="max-height:700px;overflow:auto;" >
               <apex:outputLabel id="pnl1" >
                  <apex:pageblock title="Search Fields"  id="tblsearchfields">
                    <apex:pageblocksection id="tblfilters" title="Basic Search" columns="2">
                            <apex:inputtext value="{!stbugtitle}" label="Enter the Bug Title: "  size="45" onkeydown="if(event.keyCode==13){this.blur();
                            ();}" id="bugtitleid"/>
                            <apex:inputtext value="{!stBugzillaId}" label="Enter the Bugzilla Id : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}"/>
                            <apex:inputtext value="{!stbugno}" label="Enter the Bug No : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}"/>
                            <apex:selectList value="{!stbugclass}"   multiselect="true"  size="5" label="Bug Classification : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}" id="bugCls">
                               <apex:selectOptions value="{!bugclasslist}"></apex:selectOptions>
                            </apex:selectList>
                            <apex:selectList value="{!ststatus}"   multiselect="true"  size="5" label="Status : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}" id="statusid">
                               <apex:selectOptions value="{!statuslist}"></apex:selectOptions>
                            </apex:selectList>  
                            <apex:selectList value="{!stpriority}"   multiselect="true"  size="5" label="Priority : " onkeydown="if(event.keyCode==13){this.blur();sendValue();}" id="prid">
                               <apex:selectOptions value="{!prioritylist}"></apex:selectOptions>
                            </apex:selectList>  
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="Product/Technology:" />
                            <select id="Product_Technology__c" class="select" multiple = "true" size ="4" onkeydown="if(event.keyCode==13){this.blur();sendValue();}"/>
                        </apex:pageBlockSectionItem>
                         <apex:pageBlockSectionItem >
                            <apex:outputLabel value="Component:" />
                            <select id="Component__c" class="select" multiple = "true"  size ="5" onkeydown="if(event.keyCode==13){this.blur();sendValue();}"/>
                        </apex:pageBlockSectionItem>                                                 
                        <apex:selectList value="{!stseverity}"   multiselect="true"  size="5" label="Severity : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}" id="compId">
                           <apex:selectOptions value="{!severitylist}"></apex:selectOptions>
                        </apex:selectList>
                        <apex:selectList value="{!stversion}"   multiselect="true"  size="5" label="Version : " id="Version" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}" >
                           <apex:selectOptions value="{!bugverionlist}"></apex:selectOptions>
                        </apex:selectList>                       
                        <apex:inputfield value="{!BugVar.ownerID}" required="false" id="bgOwner" styleClass="UserLookupCell" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}"/>
                        <apex:inputtext value="{!BugVar.Related_DMM_Number__c}" required="false"  size="50" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}" id="relatedDMM"/>
                    </apex:pageblocksection>
                    
                     <apex:outputPanel id="bgCreatedby">
                     <apex:pageBlockSection title="Search By Created By">                           
                            <apex:inputtext size="90" disabled="true" value="{!createdBy}" label="Created By : " id="bgCreatedby1" styleClass="UserLookupCell" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}"></apex:inputText>
                            <apex:image value="{!$Resource.User_Lookup}" onclick="openUserlookup();" style="cursor:pointer;vertical-align: middle;" />
                            <apex:outputLabel value="NOTE:         Click on the look up button to select users which will append the users to search by multiple users" style="color:blue"/>
                        <script>
                            function openUserlookup(){            
                                window.open('/apex/userSearch?createdBy='+'{!createdByIds}'+'&userSearchFlag='+'true',target='_blank', 'toolbar=yes, scrollbars=yes, resizable=yes, top=250, left=400, width=700, height=500');
                            }
                           setUserIdsInParent = function(searchUserString,searchUserId,ClearFlag) {
                               createdBy =    searchUserString;
                               createdByIds = searchUserId;
                               ClearFlagParent = ClearFlag;
                               setVal(searchUserString,searchUserId,ClearFlag);
                           }                             
                       </script>                     
                     </apex:pageBlockSection>
                     </apex:outputPanel>
                     
                     <apex:pageblockbuttons location="bottom" >
                        <apex:actionStatus id="prstatus">
                           <apex:facet name="stop">
                              <apex:commandButton value="Search" disabled="false"  onclick="sendValue(); return false;"> 
                                  <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="false"/> 
                              </apex:commandButton>                            
                           </apex:facet>
                           <apex:facet name="start">
                              <div id="message" class="popup">
                                 <img src="{!$Resource.processing}" />
                              </div>
                           </apex:facet>                           
                        </apex:actionStatus>
                        <apex:actionStatus id="prstatus1">
                           <apex:facet name="stop">
                              <apex:commandButton action="{!clearAll}"  status="prstatus1" value="Clear All" rerender="frm,tbl" />                            
                           </apex:facet>
                           <apex:facet name="start">
                              <div id="message" class="popup">
                                 <img src="{!$Resource.processing}" />
                              </div>
                           </apex:facet>                           
                        </apex:actionStatus>                       
                     </apex:pageblockbuttons>                    
                  </apex:pageblock>
               </apex:outputLabel>
            </apex:outputPanel>
            <apex:pageblock id="tbl" title="Bug Records">
               <apex:actionFunction name="BugBasicSearch" action="{!buildQueryforFilters}" reRender="tbl" status="prstatus">
                   <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="false"/> 
               </apex:actionFunction>             
               <apex:pageMessages />               
               <apex:commandbutton action="{!ExportExcel}" value="Export Results to Excel" rendered="{!(buglistvar.size != 0) && (simulationFlag = false) }" status="prstatus" >
                   <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="false"/> 
               </apex:commandbutton> 
               <apex:pageblockTable value="{!buglistvar}" var="b" rendered="{!(buglistvar.size != 0) && (simulationFlag = false)}" >
                  <apex:column width="200px">
                     <apex:facet name="header">
                        <apex:outputpanel >
                           <apex:commandLink action="{!doSort}"  value=" Number "  reRender="tbl" status="prstatus">
                              <apex:param name="sortField" value="Name" assignTo="{!sortField}"/>
                           </apex:commandLink>
                           <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortField=='Name',IF(sortorder='asc', true,false),false)}"  width="10" height="10"/>
                           <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortField=='Name',IF(sortorder='desc', true,false),false)}" width="10" height="10"/>
                        </apex:outputpanel>
                     </apex:facet>
                     <apex:outputLink value="/{!b.Id}" target="_blank">{!b.name}</apex:outputlink>
                  </apex:column>
                  <apex:repeat var="f" value="{!$ObjectType.Bug__c.FieldSets.BugSearchFields}">
                     <apex:column width="200px" >
                        <apex:facet name="header" >
                           <apex:outputpanel >
                              <apex:commandLink action="{!doSort}"  value=" {!f.label} " reRender="tbl" status="prstatus">
                                 <apex:param name="sortField" value="{!f}" assignTo="{!sortField}"/>
                              </apex:commandLink>
                              <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortField==f,IF(sortorder='asc', true,false),false)}"  width="10" height="10"/>
                              <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortField==f,IF(sortorder='desc', true,false),false)}" width="10" height="10"/>
                           </apex:outputpanel>
                        </apex:facet>
                        <apex:outputfield value="{!b[f]}"/>
                     </apex:column>
                  </apex:repeat>
               </apex:pageblockTable>
               <apex:outputpanel rendered="{!(buglistvar.size = 0)}" >
                  <apex:outputText value="No search executed"  rendered="{!stfilter}"/>
                  <apex:outputText value="No records returned"  rendered="{!IF(stfilter=true, false,true)}"/>
                  <br/>
               </apex:outputpanel>
               <span style="color:blue">
                  <apex:outputText rendered="{!(buglistvar.size > 0) && simulationFlag = false}" value="{!TotalRows} records returned"  />
               </span>
               <apex:pageblockbuttons location="bottom" rendered="{!(buglistvar.size > 0)}" >
                  <apex:commandButton action="{!Beginning}" title="Beginning" value=" << " disabled="{!disablePrevious}" reRender="tbl"/>
                  <apex:commandButton action="{!Previous}" title="Previous" value=" < " disabled="{!disablePrevious}" reRender="tbl"/>
                  Page {!PageNumber} of {!TotalPages}
                  <apex:commandButton action="{!Next}" title="Next" value=" > " disabled="{!disableNext}" reRender="tbl"/>
                  <apex:commandButton action="{!End}" title="End" value=" >> " disabled="{!disableNext}" reRender="tbl"/>
               </apex:pageblockbuttons>
            </apex:pageblock>
         </apex:tab>
         
         
      <apex:tab label="Advanced Bug Search " name="myAdvancedSearch" id="tabmyAdvancedSearch">
            <apex:outputPanel layout="block" style="max-height:350px;overflow:auto;" >
               <apex:outputLabel id="pnl2" >
                  <apex:pageblock >
                     <apex:pageBlockSection title="Advanced Text Search" >
                        <apex:inputtext value="{!textSearch}" label="Enter the Text: " size="70" onkeydown="if(event.keyCode==13){this.blur();BugAdvanceSearch();}"/>
                        <apex:selectList id="chooseSearch" value="{!searchstring}" size="1" onkeydown="if(event.keyCode==13){this.blur();BugAdvanceSearch();}">
                           <apex:selectOption itemValue="all" itemLabel="contains all of the strings"/>
                           <apex:selectOption itemValue="any" itemLabel="contains any of the strings"/>
                        </apex:selectList>
                     </apex:pageBlockSection>
                     <apex:pageBlockSection columns="1">
                        <apex:outputLabel value="NOTE:   Salesforce will escape the special characters in the search result.Please don't use these special charactors:   &" style="color:blue" > ? | ! { } [ ] ( ) ^ ~ * : \ " / ' + -  </apex:outputLabel>
                     </apex:pageBlockSection>
                     <apex:pageblockbuttons location="bottom" >
                        <apex:actionStatus id="prstatus1">
                           <apex:facet name="stop">
                              <apex:commandButton value="Search" action="{!advSearch}" status="prstatus1" reRender="tbl1"/>
                           </apex:facet>
                           <apex:facet name="start">
                              <div id="message" class="popup">
                                 <img src="{!$Resource.processing}" />
                              </div>
                           </apex:facet>
                        </apex:actionStatus>
                     </apex:pageblockbuttons>
                  </apex:pageblock>
               </apex:outputLabel>
            </apex:outputPanel>
            <apex:pageblock id="tbl1" title="Bug Records">
               <apex:pageMessages />
               <apex:actionFunction name="BugAdvanceSearch" action="{!advSearch}" reRender="tbl1" status="prstatus1"/>
               <apex:commandbutton action="{!ExportExcelAdvSearch}" value="Export Results to Excel" rendered="{!(BugListvarAdvSearch.size != 0)}" status="prstatus1" />
               <apex:pageblockTable value="{!BugListvarAdvSearch}" var="b" rendered="{!(BugListvarAdvSearch.size != 0)}" >
                  <apex:column width="200px">
                     <apex:facet name="header">
                        <apex:outputpanel >
                           <apex:commandLink action="{!doSortAdv}"  value=" Number "  reRender="tbl1" status="prstatus1">
                              <apex:param name="sortFieldAdvSearch" value="Name" assignTo="{!sortFieldAdvSearch}"/>
                           </apex:commandLink>
                           <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortFieldAdvSearch=='Name',IF(sortorderAdvSearch='asc', true,false),false)}"  width="10" height="10"/>
                           <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortFieldAdvSearch=='Name',IF(sortorderAdvSearch='desc', true,false),false)}" width="10" height="10"/>
                        </apex:outputpanel>
                     </apex:facet>
                     <apex:outputLink value="/{!b.Id}" target="_blank">{!b.name}</apex:outputlink>
                  </apex:column>
                  <apex:repeat var="f" value="{!$ObjectType.Bug__c.FieldSets.BugSearchFields}">
                     <apex:column width="200px">
                        <apex:facet name="header">
                           <apex:outputpanel > 
                               <apex:actionStatus id="prstatus1">
                                   
                                   <apex:facet name="start">
                                      <div id="message" class="popup">
                                         <img src="{!$Resource.processing}" />
                                      </div>
                                   </apex:facet>
                              </apex:actionStatus>
                              <apex:commandLink action="{!doSortAdv}"  value=" {!f.label}" reRender="tbl1"  status="prstatus1">
                                         <apex:param name="sortFieldAdvSearch" value="{!f}" assignTo="{!sortFieldAdvSearch}"/>
                                </apex:commandLink>                             
                              <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortFieldAdvSearch==f,IF(sortorderAdvSearch='asc', true,false),false)}"  width="10" height="10"/>
                              <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortFieldAdvSearch==f,IF(sortorderAdvSearch='desc', true,false),false)}" width="10" height="10"/>
                           </apex:outputpanel>
                        </apex:facet>
                        <apex:outputfield value="{!b[f]}"/>
                     </apex:column>
                  </apex:repeat>
               </apex:pageblockTable>
               <apex:outputpanel rendered="{!(BugListvarAdvSearch.size = 0)}" >
                  <apex:outputText value="No search executed"  rendered="{!checkFlag == false}"/>
                  <apex:outputText value="No records returned"  rendered="{!checkFlag == true}"/>
                  <br/>
               </apex:outputpanel>
               <span style="color:blue">
                  <apex:outputText rendered="{!(BugListvarAdvSearch.size > 0)}" value="{!TotalRowsAdvSearch} records returned"  />
               </span>
               <apex:pageblockbuttons location="bottom" rendered="{!(BugListvarAdvSearch.size > 0)}" >
                  <apex:commandButton action="{!BeginningAdvSearch}" title="Beginning" value=" << " disabled="{!disablePreviousAdvSearch}" reRender="tbl1"/>
                  <apex:commandButton action="{!PreviousAdvSearch}" title="Previous" value=" < " disabled="{!disablePreviousAdvSearch}" reRender="tbl1"/>
                  Page {!PageNumberAdvSearch} of {!TotalPagesAdvSearch}
                  <apex:commandButton action="{!NextAdvSearch}" title="Next" value=" > " disabled="{!disableNextAdvSearch}" reRender="tbl1"/>
                  <apex:commandButton action="{!EndAdvSearch}" title="End" value=" >> " disabled="{!disableNextAdvSearch}" reRender="tbl1"/>
               </apex:pageblockbuttons>
            </apex:pageblock>
         </apex:tab>   
         
         
<apex:tab label="Simulation Search" name="mySimulationSearch" id="tabmySimulationSearch" ontabenter="resetTab();">
    <apex:outputPanel layout="block" style="max-height:700px;overflow:auto;">
       <apex:outputLabel id="pnl3"> 
        <apex:pageblock >       
            <apex:pageblocksection id="sfilters" title="Simulation Search" columns="2">
                <apex:inputtext value="{!stsimulationbugtitle}" label="Enter the Bug Title: " size="45" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}" />
                <apex:inputtext value="{!stSimulationBugNo}" label="Enter the Bug No : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch();}"/>
                <apex:selectList value="{!stSimulationStatus}"   multiselect="true"  size="5" label="Status : " onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                        <apex:selectOptions value="{!statuslist}"></apex:selectOptions>
                 </apex:selectList> 
                <apex:selectList value="{!stSubstrate}"   multiselect="true"  size="5" label="Substrate Type: "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!substrateList}"></apex:selectOptions>
                </apex:selectList>  
                <apex:selectList value="{!stEncapsulation}"   multiselect="true"  size="5" label="Encapsulation : "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!encapsulationList}"></apex:selectOptions>
                </apex:selectList>  
                <apex:selectList value="{!stInterconnect}"   multiselect="true"  size="5" label="Type of Interconnect : "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!interconnectList}"></apex:selectOptions>
                </apex:selectList>  
                <apex:selectList value="{!stPackage}"   multiselect="true"  size="5" label="Package Type : "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!packageTypelist}"></apex:selectOptions>
                </apex:selectList>  
                <apex:selectList value="{!stSimulationType}"   multiselect="true"  size="5" label="Simulation Type : "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!simulationTypeList}"></apex:selectOptions>
                </apex:selectList>  
                <apex:selectList value="{!stDieSize}"   multiselect="true"  size="5" label="Die Size : "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!dieSizeList}"></apex:selectOptions>
                </apex:selectList> 
                <apex:selectList value="{!stProductSimulation}"   multiselect="true"  size="5" label="Product Technology: "  onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}">
                   <apex:selectOptions value="{!productSimulationList}"></apex:selectOptions>
                </apex:selectList>  
                <apex:inputfield value="{!SimulationBugVar.ownerID}" required="false" id="bgOwner1" styleClass="UserLookupCell" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}"/>                
                <apex:inputfield value="{!BugTeamVar.User__c}" label="Created By" id="bgCreatedby" styleClass="UserLookupCell" onkeydown="if(event.keyCode==13){this.blur();BugBasicSearch1();}"/>
            </apex:pageBlockSection>
                    <apex:pageblockbuttons location="bottom" >
                        <apex:actionStatus id="prstatus3">
                           <apex:facet name="stop">
                              <apex:commandButton value="Search" disabled="false"  action="{!buildQueryforFilters}" status="prstatus3" reRender="sfilters,tb2">  
                                  <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="true"/> 
                              </apex:commandButton>                           
                           </apex:facet>
                           <apex:facet name="start">
                              <div id="message" class="popup">
                                 <img src="{!$Resource.processing}" />
                              </div>
                           </apex:facet>                           
                        </apex:actionStatus>
                        <apex:actionStatus id="prstatus4">
                           <apex:facet name="stop">
                              <apex:commandButton action="{!clearAll}"  status="prstatus4" value="Clear All" rerender="frm,tb2" />                            
                           </apex:facet>
                           <apex:facet name="start">
                              <div id="message" class="popup">
                                 <img src="{!$Resource.processing}" />
                              </div>
                           </apex:facet>                           
                        </apex:actionStatus>                       
                    </apex:pageblockbuttons>                    
                  </apex:pageblock>
               </apex:outputLabel>
            </apex:outputPanel>
      <apex:pageblock id="tb2" title="Bug Records">                            
               <apex:pageMessages />    
               <apex:actionFunction name="BugBasicSearch1" action="{!buildQueryforFilters}" reRender="sfilters,tb2" status="prstatus3">
                   <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="true"/> 
                </apex:actionFunction>            
               <apex:commandbutton action="{!ExportExcel}" value="Export Results to Excel" rendered="{!(buglistvar.size != 0) && simulationFlag = true}" status="prstatus" >
                   <apex:param assignTo="{!simulationFlag}" name="simulationFlag" value="true"/> 
               </apex:commandbutton>  
               <apex:pageblockTable value="{!buglistvar}" var="b" rendered="{!(buglistvar.size != 0) && simulationFlag = true}" >
                  <apex:column width="200px">
                     <apex:facet name="header">
                        <apex:outputpanel >
                           <apex:commandLink action="{!doSort}"  value=" Number "  reRender="tb2" status="prstatus">
                              <apex:param name="sortField" value="Name" assignTo="{!sortField}"/>
                           </apex:commandLink>
                           <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortField=='Name',IF(sortorder='asc', true,false),false)}"  width="10" height="10"/>
                           <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortField=='Name',IF(sortorder='desc', true,false),false)}" width="10" height="10"/>
                        </apex:outputpanel>
                     </apex:facet>
                     <apex:outputLink value="/{!b.Id}" target="_blank">{!b.name}</apex:outputlink>
                  </apex:column>
                  <apex:repeat var="f" value="{!$ObjectType.Bug__c.FieldSets.BugSimulationFields}">
                     <apex:column width="200px" >
                        <apex:facet name="header" >
                           <apex:outputpanel >
                              <apex:commandLink action="{!doSort}"  value=" {!f.label} " reRender="tb2" status="prstatus">
                                 <apex:param name="sortField" value="{!f}" assignTo="{!sortField}"/>
                              </apex:commandLink>
                              <apex:image url="{!$Resource.uparrow}" rendered="{!IF(sortField==f,IF(sortorder='asc', true,false),false)}"  width="10" height="10"/>
                              <apex:image url="{!$Resource.downarrow}" rendered="{!IF(sortField==f,IF(sortorder='desc', true,false),false)}" width="10" height="10"/>
                           </apex:outputpanel>
                        </apex:facet>
                        <apex:outputfield value="{!b[f]}"/>
                     </apex:column>
                  </apex:repeat>
               </apex:pageblockTable>
               <apex:outputpanel rendered="{!(buglistvar.size = 0) }" >
                  <apex:outputText value="No search executed"  rendered="{!stfilter}"/>
                  <apex:outputText value="No records returned"  rendered="{!IF(stfilter=true, false,true)}"/>
                  <br/>
               </apex:outputpanel>
               <span style="color:blue">
                  <apex:outputText rendered="{!(buglistvar.size > 0) && simulationFlag = true}" value="{!TotalRows} records returned"  />
               </span>
               <apex:pageblockbuttons location="bottom" rendered="{!(buglistvar.size > 0)}" >
                  <apex:commandButton action="{!Beginning}" title="Beginning" value=" << " disabled="{!disablePrevious}" reRender="tb2"/>
                  <apex:commandButton action="{!Previous}" title="Previous" value=" < " disabled="{!disablePrevious}" reRender="tb2"/>
                  Page {!PageNumber} of {!TotalPages}
                  <apex:commandButton action="{!Next}" title="Next" value=" > " disabled="{!disableNext}" reRender="tb2"/>
                  <apex:commandButton action="{!End}" title="End" value=" >> " disabled="{!disableNext}" reRender="tb2"/>
               </apex:pageblockbuttons>
            </apex:pageblock>
         </apex:tab> 
    </apex:tabPanel>
   <apex:actionFunction name="setVal" action="{!SetValues}" rerender="bgCreatedby">     
        <apex:param id="searchUserString" name="searchUserString"  assignTo="{!UserString}" value="" />
        <apex:param id="searchUserId" name="searchUserId"  assignTo="{!UserId}" value=""/>
        <apex:param id="ClearFlag" name="ClearFlag"  assignTo="{!clearFlagCheck}" value=""/> 
   </apex:actionFunction>      
   </apex:form>
    
</apex:page>