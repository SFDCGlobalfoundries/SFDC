//Generated by wsdl2apex
/*
  Author: Generated by wsdl2apex
  Description: auto generated with wsdl.
  History:
    win         20130719  - modify to use NDAVariable.
*/
public class NDA_IntegrationService {

    
 




    public class NDAPort {
        //public String endpoint_x = 'https://test.foundryview.com/ndawc/gf-int-services/ws/legal/NDAService/';
        public String endpoint_x = NDAVariable.get('NDA_IntegrationService_Endpoint');
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
      
         
        private String[] ns_map_type_info = new String[]{'http://www.globalfoundries.com/gf/legal/NDAServices', 'NDA_IntegrationService', 'http://www.globalfoundries.com/gf/legal/nda/schema', 'NDA_IntegrationSchema'};
        public NDA_IntegrationSchema.Response_element ExpireNDA(String NdaNumber) {
            NDA_IntegrationSchema.NDAExpirationRequest_element request_x = new NDA_IntegrationSchema.NDAExpirationRequest_element();
            NDA_IntegrationSchema.Response_element response_x;
            request_x.NdaNumber = NdaNumber;
            Map<String, NDA_IntegrationSchema.Response_element> response_map_x = new Map<String, NDA_IntegrationSchema.Response_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'process',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'NDAExpirationRequest',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'Response',
              'NDA_IntegrationSchema.Response_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public NDA_IntegrationSchema.Response_element VoidNDA(String NdaNumber) {
            NDA_IntegrationSchema.NDAVoidRequest_element request_x = new NDA_IntegrationSchema.NDAVoidRequest_element();
            NDA_IntegrationSchema.Response_element response_x;
            request_x.NdaNumber = NdaNumber;
            Map<String, NDA_IntegrationSchema.Response_element> response_map_x = new Map<String, NDA_IntegrationSchema.Response_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'process',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'NDAVoidRequest',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'Response',
              'NDA_IntegrationSchema.Response_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public NDA_IntegrationSchema.Response_element ActivateNDA(String CompanyShortName,String AmsCompanyName,String TechGeometries,String NdaCompanyName,String CompanyAddress,String Purpose,String NdaNumber,String NdaType,String Originator,String Approver,Date AgreementDate,Date ExpiryDate,Date ConfidentialityDate) {
            NDA_IntegrationSchema.NDAActivationRequest_element request_x = new NDA_IntegrationSchema.NDAActivationRequest_element();
            NDA_IntegrationSchema.Response_element response_x;
            request_x.CompanyShortName = CompanyShortName;
            request_x.AmsCompanyName = AmsCompanyName;
            request_x.TechGeometries = TechGeometries;
            request_x.NdaCompanyName = NdaCompanyName;
            request_x.CompanyAddress = CompanyAddress;
            request_x.Purpose = Purpose;
            request_x.NdaNumber = NdaNumber;
            request_x.NdaType = NdaType;
            request_x.Originator = Originator;
            request_x.Approver = Approver;
            request_x.AgreementDate = AgreementDate;
            request_x.ExpiryDate = ExpiryDate;
            request_x.ConfidentialityDate = ConfidentialityDate;
            Map<String, NDA_IntegrationSchema.Response_element> response_map_x = new Map<String, NDA_IntegrationSchema.Response_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'process',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'NDAActivationRequest',
              'http://www.globalfoundries.com/gf/legal/nda/schema',
              'Response',
              'NDA_IntegrationSchema.Response_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }
}